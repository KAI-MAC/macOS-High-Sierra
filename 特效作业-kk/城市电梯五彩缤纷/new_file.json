(function () {
    'use strict';

    function chromeRuntimePolyfill() {
        const listeners = new Set();
        const runtime = {
            sendMessage(message) {
                safari.extension.dispatchMessage('from-content-script', message);
            }
            onMessage: {
                addListener(listener) {
                    listeners.add(listener);
                }
            }
        };
        safari.self.addEventListener('message', ({ name, message }) => {
            if (name === 'to-content-script') {
                listeners.forEach((l) => l(message));
            }
        });
        !window.chrome && (window.chrome = {});
        !window.chrome.runtime && (window.chrome.runtime = {});
        Object.assign(window.chrome.runtime, runtime);
    }
    if (!window.chrome || !window.chrome.runtime || !window.chrome.runtime.sendMessage) {
        chromeRuntimePolyfill();
    }

    var ThemeEngines = {
        cssFilter: 'cssFilter',
        svgFilter: 'svgFilter',
        staticTheme: 'staticTheme',
        dynamicTheme: 'dynamicTheme',
    };

    const userAgent = typeof navigator === 'undefined' ? 'some useragent' : navigator.userAgent.toLowerCase();
    const platform = typeof navigator === 'undefined' ? 'some platform' : navigator.platform.toLowerCase();
    const isChromium = userAgent.includes('chrome') || userAgent.includes('chromium');
    const isFirefox = userAgent.includes('firefox');
    const isVivaldi = userAgent.includes('vivaldi');
    const isYaBrowser = userAgent.includes('yabrowser');
    const isOpera = userAgent.includes('opr') || userAgent.includes('opera');
    const isEdge = userAgent.includes('edg');
    const isSafari = userAgent.includes('safari') && !isChromium;
    const isWindows = platform.startsWith('win');
    const isMacOS = platform.startsWith('mac');
    const isMobile = userAgent.includes('mobile');
    const isShadowDomSupported = typeof ShadowRoot === 'function';
    const chromiumVersion = (() => {
        const m = userAgent.match(/chrom[e|ium]\/([^ ]+)/);
        if (m && m[1]) {
            return m[1];
        }
        else {
            return '';
        }
    })();
    const isDefinedSelectorSupported = (() => {
        try {
            document.querySelector(':defined');
            return true;
        }
        catch (err) {
            return false;
        }
    })();
    const isCSSStyleSheetConstructorSupported = (() => {
        try {
            new CSSStyleSheet();
            return true;
        }
        catch (err) {
            return false;
        }
    })();
    function compareChromeVersions($a, $b) {
        const a = $a.split('.').map((x) => parseInt(x));
        const b = $b.split('.').map((x) => parseInt(x));
        for (let i = 0; i < a.length; i++) {
            if (a[i] !== b[i]) {
                return a[i] < b[i] ? -1 : 1;
            }
        }
        return 0;
    }

    const DEFAULT_COLORS = {
        darkScheme: {
            background: '#181a1b',
            text: '#e8e6e3',
        }
        lightScheme: {
            background: '#dcdad7',
            text: '#181a1b',
        }
    };
    const DEFAULT_THEME = {
        mode: 1,
        brightness: 100,
        contrast: 100,
        grayscale: 0,
        sepia: 0,
        useFont: false,
        fontFamily: isMacOS ? 'Helvetica Neue' : isWindows ? 'Segoe UI' : 'Open Sans',
        textStroke: 0,
        engine: ThemeEngines.dynamicTheme,
        stylesheet: '',
        darkSchemeBackgroundColor: DEFAULT_COLORS.darkScheme.background,
        darkSchemeTextColor: DEFAULT_COLORS.darkScheme.text,
        lightSchemeBackgroundColor: DEFAULT_COLORS.lightScheme.background,
        lightSchemeTextColor: DEFAULT_COLORS.lightScheme.text,
        scrollbarColor: isMacOS ? '' : 'auto',
        selectionColor: 'auto',
        styleSystemControls: true,
    };

    function isArrayLike(items) {
        return items.length != null;
    }
    // NOTE: Iterating Array-like items using `for .. of` is 3x slower in Firefox
    // https://jsben.ch/kidOp
    function forEach(items, iterator) {
        if (isArrayLike(items)) {
            for (let i = 0, len = items.length; i < len; i++) {
                iterator(items[i]);
            }
        }
        else {
            for (const item of items) {
                iterator(item);
            }
        }
    }
    // NOTE: Pushing items like `arr.push(...items)` is 3x slower in Firefox
    // https://jsben.ch/nr9OF
    function push(array, addition) {
        forEach(addition, (a) => array.push(a));
    }
    // NOTE: Using `Array.from()` is 2x (FF) — 5x (Chrome) slower for ArrayLike (not for Iterable)
    // https://jsben.ch/FJ1mO
    // https://jsben.ch/ZmViL
    function toArray(items) {
        const results = [];
        for (let i = 0, len = items.length; i < len; i++) {
            results.push(items[i]);
        }
        return results;
    }

    function isIPV6(url) {
        const openingBracketIndex = url.indexOf('[');
        if (openingBracketIndex < 0) {
            return false;
        }
        const queryIndex = url.indexOf('?');
        if (queryIndex >= 0 && openingBracketIndex > queryIndex) {
            return false;
        }
        return true;
    }
    const ipV6HostRegex = /\[.*?\](\:\d+)?/;
    function compareIPV6(firstURL, secondURL) {
        const firstHost = firstURL.match(ipV6HostRegex)[0];
        const secondHost = secondURL.match(ipV6HostRegex)[0];
        return firstHost === secondHost;
    }

    let anchor;
    function fixBaseURL($url) {
        if (!anchor) {
            anchor = document.createElement('a');
        }
        anchor.href = $url;
        return anchor.href;
    }
    function parseURL($url, $base = null) {
        if ($base) {
            $base = fixBaseURL($base);
            return new URL($url, $base);
        }
        $url = fixBaseURL($url);
        return new URL($url);
    }
    function getAbsoluteURL($base, $relative) {
        if ($relative.match(/^data\:/)) {
            return $relative;
        }
        const b = parseURL($base);
        const a = parseURL($relative, b.href);
        return a.href;
    }
    function getURLHostOrProtocol($url) {
        const url = new URL($url);
        if (url.host) {
            return url.host;
        }
        else {
            return url.protocol;
        }
    }
    /**
     * Determines whether URL has a match in URL template list.
     * @param url Site URL.
     * @paramlist List to search into.
     */
    function isURLInList(url, list) {
        for (let i = 0; i < list.length; i++) {
            if (isURLMatched(url, list[i])) {
                return true;
            }
        }
        return false;
    }
    /**
     * Determines whether URL matches the template.
     * @param url URL.
     * @param urlTemplate URL template ("google.*", "youtube.com" etc).
     */
    function isURLMatched(url, urlTemplate) {
        const isFirstIPV6 = isIPV6(url);
        const isSecondIPV6 = isIPV6(urlTemplate);
        if (isFirstIPV6 && isSecondIPV6) {
            return compareIPV6(url, urlTemplate);
        }
        else if (!isFirstIPV6 && !isSecondIPV6) {
            const regex = createUrlRegex(urlTemplate);
            return Boolean(url.match(regex));
        }
        else {
            return false;
        }
    }
    function createUrlRegex(urlTemplate) {
        urlTemplate = urlTemplate.trim();
        const exactBeginning = (urlTemplate[0] === '^');
        const exactEnding = (urlTemplate[urlTemplate.length - 1] === '$');
        urlTemplate = (urlTemplate
            .replace(/^\^/, '') // Remove ^ at start
            .replace(/\$$/, '') // Remove $ at end
            .replace(/^.*?\/{2,3}/, '') // Remove scheme
            .replace(/\?.*$/, '') // Remove query
            .replace(/\/$/, '') // Remove last slash
        );
        let slashIndex;
        let beforeSlash;
        let afterSlash;
        if ((slashIndex = urlTemplate.indexOf('/')) >= 0) {
            beforeSlash = urlTemplate.substring(0, slashIndex); // google.*
            afterSlash = urlTemplate.replace(/\$/g, '').substring(slashIndex); // /login/abc
        }
        else {
            beforeSlash = urlTemplate.replace(/\$/g, '');
        }
        //
        // SCHEME and SUBDOMAINS
        let result = (exactBeginning ?
            '^(.*?\\:\\/{2,3})?' // Scheme
            : '^(.*?\\:\\/{2,3})?([^\/]*?\\.)?' // Scheme and subdomains
        );
        //
        // HOST and PORT
        const hostParts = beforeSlash.split('.');
        result += '(';
        for (let i = 0; i < hostParts.length; i++) {
            if (hostParts[i] === '*') {
                hostParts[i] = '[^\\.\\/]+?';
            }
        }
        result += hostParts.join('\\.');
        result += ')';
        //
        // PATH and QUERY
        if (afterSlash) {
            result += '(';
            result += afterSlash.replace('/', '\\/');
            result += ')';
        }
        result += (exactEnding ?
            '(\\/?(\\?[^\/]*?)?)$' // All following queries
            : '(\\/?.*?)$' // All following paths and queries
        );
        //
        // Result
        return new RegExp(result, 'i');
    }

    function logInfo(...args) {
    }
    function logWarn(...args) {
    }

    function iterateCSSRules(rules, iterate) {
        forEach(rules, (rule) => {
            if (rule instanceof CSSMediaRule) {
                const media = Array.from(rule.media);
                if (media.includes('screen') || media.includes('all') || !(media.includes('print') || media.includes('speech'))) {
                    iterateCSSRules(rule.cssRules, iterate);
                }
            }
            else if (rule instanceof CSSStyleRule) {
                iterate(rule);
            }
            else if (rule instanceof CSSImportRule) {
                try {
                    iterateCSSRules(rule.styleSheet.cssRules, iterate);
                }
                catch (err) {
                }
            }
            else if (rule instanceof CSSSupportsRule) {
                if (CSS.supports(rule.conditionText)) {
                    iterateCSSRules(rule.cssRules, iterate);
                }
            }
            else ;
        });
    }
    function iterateCSSDeclarations(style, iterate) {
        forEach(style, (property) => {
            const value = style.getPropertyValue(property).trim();
            if (!value) {
                return;
            }
            iterate(property, value);
        });
    }
    function isCSSVariable(property) {
        return property.startsWith('--') && !property.startsWith('--darkreader');
    }
    function getCSSVariables(rules) {
        const variables = new Map();
        rules && iterateCSSRules(rules, (rule) => {
            rule.style && iterateCSSDeclarations(rule.style, (property, value) => {
                if (isCSSVariable(property)) {
                    variables.set(property, value);
                }
            });
        });
        return variables;
    }
    function getElementCSSVariables(element) {
        const variables = new Map();
        iterateCSSDeclarations(element.style, (property, value) => {
            if (isCSSVariable(property)) {
                variables.set(property, value);
            }
        });
        return variables;
    }
    const cssURLRegex = /url\((('.+?')|(".+?")|([^\)]*?))\)/g;
    const cssImportRegex = /@import\s*(url\()?(('.+?')|(".+?")|([^\)]*?))\)?;?/g;
    function getCSSURLValue(cssURL) {
        return cssURL.replace(/^url\((.*)\)$/, '$1').replace(/^"(.*)"$/, '$1').replace(/^'(.*)'$/, '$1');
    }
    function getCSSBaseBath(url) {
        const cssURL = parseURL(url);
        return `${cssURL.origin}${cssURL.pathname.replace(/\?.*$/, '').replace(/(\/)([^\/]+)$/i, '$1')}`;
    }
    function replaceCSSRelativeURLsWithAbsolute($css, cssBasePath) {
        return $css.replace(cssURLRegex, (match) => {
            const pathValue = getCSSURLValue(match);
            return `url("${getAbsoluteURL(cssBasePath, pathValue)}")`;
        });
    }
    const cssCommentsRegex = /\/\*[\s\S]*?\*\//g;
    function removeCSSComments($css) {
        return $css.replace(cssCommentsRegex, '');
    }
    const fontFaceRegex = /@font-face\s*{[^}]*}/g;
    function replaceCSSFontFace($css) {
        return $css.replace(fontFaceRegex, '');
    }
    const varRegex = /var\((--[^\s,\(\)]+),?\s*([^\(\)]*(\([^\(\)]*\)[^\(\)]*)*\s*)\)/g;
    function replaceCSSVariables(value, variables, stack = new Set()) {
        let missing = false;
        const unresolvable = new Set();
        const result = value.replace(varRegex, (match, name, fallback) => {
            if (stack.has(name)) {
                if (fallback) {
                    return fallback;
                }
                missing = true;
                return match;
            }
            if (variables.has(name)) {
                const value = variables.get(name);
                if (value.match(varRegex)) {
                    unresolvable.add(name);
                }
                return value;
            }
            else if (fallback) {
                return fallback;
            }
            else {
                missing = true;
            }
            return match;
        });
        if (missing) {
            return result;
        }
        if (result.match(varRegex)) {
            unresolvable.forEach((v) => stack.add(v));
            return replaceCSSVariables(result, variables, stack);
        }
        return result;
    }

    function throttle(callback) {
        let pending = false;
        let frameId = null;
        let lastArgs;
        const throttled = ((...args) => {
            lastArgs = args;
            if (frameId) {
                pending = true;
            }
            else {
                callback(...lastArgs);
                frameId = requestAnimationFrame(() => {
                    frameId = null;
                    if (pending) {
                        callback(...lastArgs);
                        pending = false;
                    }
                });
            }
        });
        const cancel = () => {
            cancelAnimationFrame(frameId);
            pending = false;
            frameId = null;
        };
        return Object.assign(throttled, { cancel });
    }
    function createAsyncTasksQueue() {
        const tasks = [];
        let frameId = null;
        function runTasks() {
            let task;
            while (task = tasks.shift()) {
                task();
            }
            frameId = null;
        }
        function add(task) {
            tasks.push(task);
            if (!frameId) {
                frameId = requestAnimationFrame(runTasks);
            }
        }
        function cancel() {
            tasks.splice(0);
            cancelAnimationFrame(frameId);
            frameId = null;
        }
        return { add, cancel };
    }

    function getDuration(time) {
        let duration = 0;
        if (time.seconds) {
            duration += time.seconds * 1000;
        }
        if (time.minutes) {
            duration += time.minutes * 60 * 1000;
        }
        if (time.hours) {
            duration += time.hours * 60 * 60 * 1000;
        }
        if (time.days) {
            duration += time.days * 24 * 60 * 60 * 1000;
        }
        return duration;
    }

    function createNodeAsap({ selectNode, createNode, updateNode, selectTarget, createTarget, isTargetMutation, }) {
        const target = selectTarget();
        if (target) {
            const prev = selectNode();
            if (prev) {
                updateNode(prev);
            }
            else {
                createNode(target);
            }
        }
        else {
            const observer = new MutationObserver((mutations) => {
                const mutation = mutations.find(isTargetMutation);
                if (mutation) {
                    unsubscribe();
                    const target = selectTarget();
                    selectNode() || createNode(target);
                }
            });
            const ready = () => {
                if (document.readyState !== 'complete') {
                    return;
                }
                unsubscribe();
                const target = selectTarget() || createTarget();
                selectNode() || createNode(target);
            };
            const unsubscribe = () => {
                document.removeEventListener('readystatechange', ready);
                observer.disconnect();
            };
            if (document.readyState === 'complete') {
                ready();
            }
            else {
                document.addEventListener('readystatechange', ready);
                observer.observe(document, { childList: true, subtree: true });
            }
        }
    }
    function removeNode(node) {
        node && node.parentNode && node.parentNode.removeChild(node);
    }
    function watchForNodePosition(node, mode, onRestore = Function.prototype) {
        const MAX_ATTEMPTS_COUNT = 10;
        const RETRY_TIMEOUT = getDuration({ seconds: 2 });
        const ATTEMPTS_INTERVAL = getDuration({ seconds: 10 });
        const prevSibling = node.previousSibling;
        let parent = node.parentNode;
        if (!parent) {
            throw new Error('Unable to watch for node position: parent element not found');
        }
        if (mode === 'prev-sibling' && !prevSibling) {
            throw new Error('Unable to watch for node position: there is no previous sibling');
        }
        let attempts = 0;
        let start = null;
        let timeoutId = null;
        const restore = throttle(() => {
            if (timeoutId) {
                return;
            }
            attempts++;
            const now = Date.now();
            if (start == null) {
                start = now;
            }
            else if (attempts >= MAX_ATTEMPTS_COUNT) {
                if (now - start < ATTEMPTS_INTERVAL) {
                    timeoutId = setTimeout(() => {
                        start = null;
                        attempts = 0;
                        timeoutId = null;
                        restore();
                    } RETRY_TIMEOUT);
                    return;
                }
                start = now;
                attempts = 1;
            }
            if (mode === 'parent') {
                if (prevSibling && prevSibling.parentNode !== parent) {
                    stop();
                    return;
                }
            }
            if (mode === 'prev-sibling') {
                if (prevSibling.parentNode == null) {
                    stop();
                    return;
                }
                if (prevSibling.parentNode !== parent) {
                    updateParent(prevSibling.parentNode);
                }
            }
            parent.insertBefore(node, prevSibling ? prevSibling.nextSibling : parent.firstChild);
            observer.takeRecords();
            onRestore && onRestore();
        });
        const observer = new MutationObserver(() => {
            if ((mode === 'parent' && node.parentNode !== parent) ||
                (mode === 'prev-sibling' && node.previousSibling !== prevSibling)) {
                restore();
            }
        });
        const run = () => {
            observer.observe(parent, { childList: true });
        };
        const stop = () => {
            clearTimeout(timeoutId);
            observer.disconnect();
            restore.cancel();
        };
        const skip = () => {
            observer.takeRecords();
        };
        const updateParent = (parentNode) => {
            parent = parentNode;
            stop();
            run();
        };
        run();
        return { run, stop, skip };
    }
    function iterateShadowHosts(root, iterator) {
        if (root == null) {
            return;
        }
        const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
            acceptNode(node) {
                return node.shadowRoot == null ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
            }
        });
        for (let node = (root.shadowRoot ? walker.currentNode : walker.nextNode()); node != null; node = walker.nextNode()) {
            iterator(node);
            iterateShadowHosts(node.shadowRoot, iterator);
        }
    }
    function isDOMReady() {
        return document.readyState === 'complete' || document.readyState === 'interactive';
    }
    const readyStateListeners = new Set();
    function addDOMReadyListener(listener) {
        readyStateListeners.add(listener);
    }
    function removeDOMReadyListener(listener) {
        readyStateListeners.delete(listener);
    }
    if (!isDOMReady()) {
        const onReadyStateChange = () => {
            if (isDOMReady()) {
                document.removeEventListener('readystatechange', onReadyStateChange);
                readyStateListeners.forEach((listener) => listener());
                readyStateListeners.clear();
            }
        };
        document.addEventListener('readystatechange', onReadyStateChange);
    }
    const HUGE_MUTATIONS_COUNT = 1000;
    function isHugeMutation(mutations) {
        if (mutations.length > HUGE_MUTATIONS_COUNT) {
            return true;
        }
        let addedNodesCount = 0;
        for (let i = 0; i < mutations.length; i++) {
            addedNodesCount += mutations[i].addedNodes.length;
            if (addedNodesCount > HUGE_MUTATIONS_COUNT) {
                return true;
            }
        }
        return false;
    }
    function getElementsTreeOperations(mutations) {
        const additions = new Set();
        const deletions = new Set();
        const moves = new Set();
        mutations.forEach((m) => {
            forEach(m.addedNodes, (n) => {
                if (n instanceof Element && n.isConnected) {
                    additions.add(n);
                }
            });
            forEach(m.removedNodes, (n) => {
                if (n instanceof Element) {
                    if (n.isConnected) {
                        moves.add(n);
                    }
                    else {
                        deletions.add(n);
                    }
                }
            });
        });
        moves.forEach((n) => additions.delete(n));
        const duplicateAdditions = [];
        const duplicateDeletions = [];
        additions.forEach((node) => {
            if (additions.has(node.parentElement)) {
                duplicateAdditions.push(node);
            }
        });
        deletions.forEach((node) => {
            if (deletions.has(node.parentElement)) {
                duplicateDeletions.push(node);
            }
        });
        duplicateAdditions.forEach((node) => additions.delete(node));
        duplicateDeletions.forEach((node) => deletions.delete(node));
        return { additions, moves, deletions };
    }
    const optimizedTreeObservers = new Map();
    const optimizedTreeCallbacks = new WeakMap();
    // TODO: Use a single function to observe all shadow roots.
    function createOptimizedTreeObserver(root, callbacks) {
        let observer;
        let observerCallbacks;
        let domReadyListener;
        if (optimizedTreeObservers.has(root)) {
            observer = optimizedTreeObservers.get(root);
            observerCallbacks = optimizedTreeCallbacks.get(observer);
        }
        else {
            let hadHugeMutationsBefore = false;
            let subscribedForReadyState = false;
            observer = new MutationObserver((mutations) => {
                if (isHugeMutation(mutations)) {
                    if (!hadHugeMutationsBefore || isDOMReady()) {
                        observerCallbacks.forEach(({ onHugeMutations }) => onHugeMutations(root));
                    }
                    else {
                        if (!subscribedForReadyState) {
                            domReadyListener = () => observerCallbacks.forEach(({ onHugeMutations }) => onHugeMutations(root));
                            addDOMReadyListener(domReadyListener);
                            subscribedForReadyState = true;
                        }
                    }
                    hadHugeMutationsBefore = true;
                }
                else {
                    const elementsOperations = getElementsTreeOperations(mutations);
                    observerCallbacks.forEach(({ onMinorMutations }) => onMinorMutations(elementsOperations));
                }
            });
            observer.observe(root, { childList: true, subtree: true });
            optimizedTreeObservers.set(root, observer);
            observerCallbacks = new Set();
            optimizedTreeCallbacks.set(observer, observerCallbacks);
        }
        observerCallbacks.add(callbacks);
        return {
            disconnect() {
                observerCallbacks.delete(callbacks);
                if (domReadyListener) {
                    removeDOMReadyListener(domReadyListener);
                }
                if (observerCallbacks.size === 0) {
                    observer.disconnect();
                    optimizedTreeCallbacks.delete(observer);
                    optimizedTreeObservers.delete(root);
                }
            }
        };
    }
    let tempStyle = null;
    function getTempCSSStyleSheet() {
        if (tempStyle) {
            return tempStyle;
        }
        if (isCSSStyleSheetConstructorSupported) {
            tempStyle = new CSSStyleSheet();
            return tempStyle;
        }
        else {
            const tempStyleElement = document.createElement('style');
            document.head.append(tempStyleElement);
            tempStyle = tempStyleElement.sheet;
            document.head.removeChild(tempStyleElement);
            return tempStyle;
        }
    }

    // https://en.wikipedia.org/wiki/HSL_and_HSV
    function hslToRGB({ h, s, l, a = 1 }) {
        if (s === 0) {
            const [r, b, g] = [l, l, l].map((x) => Math.round(x * 255));
            return { r, g, b, a };
        }
        const c = (1 - Math.abs(2 * l - 1)) * s;
        const x = c * (1 - Math.abs((h / 60) % 2 - 1));
        const m = l - c / 2;
        const [r, g, b] = (h < 60 ? [c, x, 0] :
            h < 120 ? [x, c, 0] :
                h < 180 ? [0, c, x] :
                    h < 240 ? [0, x, c] :
                        h < 300 ? [x, 0, c] :
                            [c, 0, x]).map((n) => Math.round((n + m) * 255));
        return { r, g, b, a };
    }
    // https://en.wikipedia.org/wiki/HSL_and_HSV
    function rgbToHSL({ r: r255, g: g255, b: b255, a = 1 }) {
        const r = r255 / 255;
        const g = g255 / 255;
        const b = b255 / 255;
        const max = Math.max(r, g, b);
        const min = Math.min(r, g, b);
        const c = max - min;
        const l = (max + min) / 2;
        if (c === 0) {
            return { h: 0, s: 0, l, a };
        }
        let h = (max === r ? (((g - b) / c) % 6) :
            max === g ? ((b - r) / c + 2) :
                ((r - g) / c + 4)) * 60;
        if (h < 0) {
            h += 360;
        }
        const s = c / (1 - Math.abs(2 * l - 1));
        return { h, s, l, a };
    }
    function toFixed(n, digits = 0) {
        const fixed = n.toFixed(digits);
        if (digits === 0) {
            return fixed;
        }
        const dot = fixed.indexOf('.');
        if (dot >= 0) {
            const zerosMatch = fixed.match(/0+$/);
            if (zerosMatch) {
                if (zerosMatch.index === dot + 1) {
                    return fixed.substring(0, dot);
                }
                return fixed.substring(0, zerosMatch.index);
            }
        }
        return fixed;
    }
    function rgbToString(rgb) {
        const { r, g, b, a } = rgb;
        if (a != null && a < 1) {
            return `rgba(${toFixed(r)}, ${toFixed(g)}, ${toFixed(b)}, ${toFixed(a, 2)})`;
        }
        return `rgb(${toFixed(r)}, ${toFixed(g)}, ${toFixed(b)})`;
    }
    function rgbToHexString({ r, g, b, a }) {
        return `#${(a != null && a < 1 ? [r, g, b, Math.round(a * 255)] : [r, g, b]).map((x) => {
        return `${x < 16 ? '0' : ''}${x.toString(16)}`;
    }).join('')}`;
    }
    function hslToString(hsl) {
        const { h, s, l, a } = hsl;
        if (a != null && a < 1) {
            return `hsla(${toFixed(h)}, ${toFixed(s * 100)}%, ${toFixed(l * 100)}%, ${toFixed(a, 2)})`;
        }
        return `hsl(${toFixed(h)}, ${toFixed(s * 100)}%, ${toFixed(l * 100)}%)`;
    }
    const rgbMatch = /^rgba?\([^\(\)]+\)$/;
    const hslMatch = /^hsla?\([^\(\)]+\)$/;
    const hexMatch = /^#[0-9a-f]+$/i;
    function parse($color) {
        const c = $color.trim().toLowerCase();
        if (c.match(rgbMatch)) {
            return parseRGB(c);
        }
        if (c.match(hslMatch)) {
            return parseHSL(c);
        }
        if (c.match(hexMatch)) {
            return parseHex(c);
        }
        if (knownColors.has(c)) {
            return getColorByName(c);
        }
        if (systemColors.has(c)) {
            return getSystemColor(c);
        }
        if ($color === 'transparent') {
            return { r: 0, g: 0, b: 0, a: 0 };
        }
        throw new Error(`Unable to parse ${$color}`);
    }
    function getNumbersFromString(str, splitter, range, units) {
        const raw = str.split(splitter).filter((x) => x);
        const unitsList = Object.entries(units);
        const numbers = raw.map((r) => r.trim()).map((r, i) => {
            let n;
            const unit = unitsList.find(([u]) => r.endsWith(u));
            if (unit) {
                n = parseFloat(r.substring(0, r.length - unit[0].length)) / unit[1] * range[i];
            }
            else {
                n = parseFloat(r);
            }
            if (range[i] > 1) {
                return Math.round(n);
            }
            return n;
        });
        return numbers;
    }
    const rgbSplitter = /rgba?|\(|\)|\/|,|\s/ig;
    const rgbRange = [255, 255, 255, 1];
    const rgbUnits = { '%': 100 };
    function parseRGB($rgb) {
        const [r, g, b, a = 1] = getNumbersFromString($rgb, rgbSplitter, rgbRange, rgbUnits);
        return { r, g, b, a };
    }
    const hslSplitter = /hsla?|\(|\)|\/|,|\s/ig;
    const hslRange = [360, 1, 1, 1];
    const hslUnits = { '%': 100, 'deg': 360, 'rad': 2 * Math.PI, 'turn': 1 };
    function parseHSL($hsl) {
        const [h, s, l, a = 1] = getNumbersFromString($hsl, hslSplitter, hslRange, hslUnits);
        return hslToRGB({ h, s, l, a });
    }
    function parseHex($hex) {
        const h = $hex.substring(1);
        switch (h.length) {
            case 3:
            case 4: {
                const [r, g, b] = [0, 1, 2].map((i) => parseInt(`${h[i]}${h[i]}`, 16));
                const a = h.length === 3 ? 1 : (parseInt(`${h[3]}${h[3]}`, 16) / 255);
                return { r, g, b, a };
            }
            case 6:
            case 8: {
                const [r, g, b] = [0, 2, 4].map((i) => parseInt(h.substring(i, i + 2), 16));
                const a = h.length === 6 ? 1 : (parseInt(h.substring(6, 8), 16) / 255);
                return { r, g, b, a };
            }
        }
        throw new Error(`Unable to parse ${$hex}`);
    }
    function getColorByName($color) {
        const n = knownColors.get($color);
        return {
            r: (n >> 16) & 255,
            g: (n >> 8) & 255,
            b: (n >> 0) & 255,
            a: 1
        };
    }
    function getSystemColor($color) {
        const n = systemColors.get($color);
        return {
            r: (n >> 16) & 255,
            g: (n >> 8) & 255,
            b: (n >> 0) & 255,
            a: 1
        };
    }
    const knownColors = new Map(Object.entries({
        aliceblue: 0xf0f8ff,
        antiquewhite: 0xfaebd7,
        aqua: 0x00ffff,
        aquamarine: 0x7fffd4,
        azure: 0xf0ffff,
        beige: 0xf5f5dc,
        bisque: 0xffe4c4,
        black: 0x000000,
        blanchedalmond: 0xffebcd,
        blue: 0x0000ff,
        blueviolet: 0x8a2be2,
        brown: 0xa52a2a,
        burlywood: 0xdeb887,
        cadetblue: 0x5f9ea0,
        chartreuse: 0x7fff00,
        chocolate: 0xd2691e,
        coral: 0xff7f50,
        cornflowerblue: 0x6495ed,
        cornsilk: 0xfff8dc,
        crimson: 0xdc143c,
        cyan: 0x00ffff,
        darkblue: 0x00008b,
        darkcyan: 0x008b8b,
        darkgoldenrod: 0xb8860b,
        darkgray: 0xa9a9a9,
        darkgrey: 0xa9a9a9,
        darkgreen: 0x006400,
        darkkhaki: 0xbdb76b,
        darkmagenta: 0x8b008b,
        darkolivegreen: 0x556b2f,
        darkorange: 0xff8c00,
        darkorchid: 0x9932cc,
        darkred: 0x8b0000,
        darksalmon: 0xe9967a,
        darkseagreen: 0x8fbc8f,
        darkslateblue: 0x483d8b,
        darkslategray: 0x2f4f4f,
        darkslategrey: 0x2f4f4f,
        darkturquoise: 0x00ced1,
        darkviolet: 0x9400d3,
        deeppink: 0xff1493,
        deepskyblue: 0x00bfff,
        dimgray: 0x696969,
        dimgrey: 0x696969,
        dodgerblue: 0x1e90ff,
        firebrick: 0xb22222,
        floralwhite: 0xfffaf0,
        forestgreen: 0x228b22,
        fuchsia: 0xff00ff,
        gainsboro: 0xdcdcdc,
        ghostwhite: 0xf8f8ff,
        gold: 0xffd700,
        goldenrod: 0xdaa520,
        gray: 0x808080,
        grey: 0x808080,
        green: 0x008000,
        greenyellow: 0xadff2f,
        honeydew: 0xf0fff0,
        hotpink: 0xff69b4,
        indianred: 0xcd5c5c,
        indigo: 0x4b0082,
        ivory: 0xfffff0,
        khaki: 0xf0e68c,
        lavender: 0xe6e6fa,
        lavenderblush: 0xfff0f5,
        lawngreen: 0x7cfc00,
        lemonchiffon: 0xfffacd,
        lightblue: 0xadd8e6,
        lightcoral: 0xf08080,
        lightcyan: 0xe0ffff,
        lightgoldenrodyellow: 0xfafad2,
        lightgray: 0xd3d3d3,
        lightgrey: 0xd3d3d3,
        lightgreen: 0x90ee90,
        lightpink: 0xffb6c1,
        lightsalmon: 0xffa07a,
        lightseagreen: 0x20b2aa,
        lightskyblue: 0x87cefa,
        lightslategray: 0x778899,
        lightslategrey: 0x778899,
        lightsteelblue: 0xb0c4de,
        lightyellow: 0xffffe0,
        lime: 0x00ff00,
        limegreen: 0x32cd32,
        linen: 0xfaf0e6,
        magenta: 0xff00ff,
        maroon: 0x800000,
        mediumaquamarine: 0x66cdaa,
        mediumblue: 0x0000cd,
        mediumorchid: 0xba55d3,
        mediumpurple: 0x9370db,
        mediumseagreen: 0x3cb371,
        mediumslateblue: 0x7b68ee,
        mediumspringgreen: 0x00fa9a,
        mediumturquoise: 0x48d1cc,
        mediumvioletred: 0xc71585,
        midnightblue: 0x191970,
        mintcream: 0xf5fffa,
        mistyrose: 0xffe4e1,
        moccasin: 0xffe4b5,
        navajowhite: 0xffdead,
        navy: 0x000080,
        oldlace: 0xfdf5e6,
        olive: 0x808000,
        olivedrab: 0x6b8e23,
        orange: 0xffa500,
        orangered: 0xff4500,
        orchid: 0xda70d6,
        palegoldenrod: 0xeee8aa,
        palegreen: 0x98fb98,
        paleturquoise: 0xafeeee,
        palevioletred: 0xdb7093,
        papayawhip: 0xffefd5,
        peachpuff: 0xffdab9,
        peru: 0xcd853f,
        pink: 0xffc0cb,
        plum: 0xdda0dd,
        powderblue: 0xb0e0e6,
        purple: 0x800080,
        rebeccapurple: 0x663399,
        red: 0xff0000,
        rosybrown: 0xbc8f8f,
        royalblue: 0x4169e1,
        saddlebrown: 0x8b4513,
        salmon: 0xfa8072,
        sandybrown: 0xf4a460,
        seagreen: 0x2e8b57,
        seashell: 0xfff5ee,
        sienna: 0xa0522d,
        silver: 0xc0c0c0,
        skyblue: 0x87ceeb,
        slateblue: 0x6a5acd,
        slategray: 0x708090,
        slategrey: 0x708090,
        snow: 0xfffafa,
        springgreen: 0x00ff7f,
        steelblue: 0x4682b4,
        tan: 0xd2b48c,
        teal: 0x008080,
        thistle: 0xd8bfd8,
        tomato: 0xff6347,
        turquoise: 0x40e0d0,
        violet: 0xee82ee,
        wheat: 0xf5deb3,
        white: 0xffffff,
        whitesmoke: 0xf5f5f5,
        yellow: 0xffff00,
        yellowgreen: 0x9acd32,
    }));
    const systemColors = new Map(Object.entries({
        ActiveBorder: 0x3b99fc,
        ActiveCaption: 0x000000,
        AppWorkspace: 0xaaaaaa,
        Background: 0x6363ce,
        ButtonFace: 0xffffff,
        ButtonHighlight: 0xe9e9e9,
        ButtonShadow: 0x9fa09f,
        ButtonText: 0x000000,
        CaptionText: 0x000000,
        GrayText: 0x7f7f7f,
        Highlight: 0xb2d7ff,
        HighlightText: 0x000000,
        InactiveBorder: 0xffffff,
        InactiveCaption: 0xffffff,
        InactiveCaptionText: 0x000000,
        InfoBackground: 0xfbfcc5,
        InfoText: 0x000000,
        Menu: 0xf6f6f6,
        MenuText: 0xffffff,
        Scrollbar: 0xaaaaaa,
        ThreeDDarkShadow: 0x000000,
        ThreeDFace: 0xc0c0c0,
        ThreeDHighlight: 0xffffff,
        ThreeDLightShadow: 0xffffff,
        ThreeDShadow: 0x000000,
        Window: 0xececec,
        WindowFrame: 0xaaaaaa,
        WindowText: 0x000000,
        '-webkit-focus-ring-color': 0xe59700
    }).map(([key, value]) => [key.toLowerCase(), value]));

    function scale(x, inLow, inHigh, outLow, outHigh) {
        return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
    }
    function clamp(x, min, max) {
        return Math.min(max, Math.max(min, x));
    }
    function multiplyMatrices(m1, m2) {
        const result = [];
        for (let i = 0, len = m1.length; i < len; i++) {
            result[i] = [];
            for (let j = 0, len2 = m2[0].length; j < len2; j++) {
                let sum = 0;
                for (let k = 0, len3 = m1[0].length; k < len3; k++) {
                    sum += m1[i][k] * m2[k][j];
                }
                result[i][j] = sum;
            }
        }
        return result;
    }

    function getMatches(regex, input, group = 0) {
        const matches = [];
        let m;
        while (m = regex.exec(input)) {
            matches.push(m[group]);
        }
        return matches;
    }

    function createFilterMatrix(config) {
        let m = Matrix.identity();
        if (config.sepia !== 0) {
            m = multiplyMatrices(m, Matrix.sepia(config.sepia / 100));
        }
        if (config.grayscale !== 0) {
            m = multiplyMatrices(m, Matrix.grayscale(config.grayscale / 100));
        }
        if (config.contrast !== 100) {
            m = multiplyMatrices(m, Matrix.contrast(config.contrast / 100));
        }
        if (config.brightness !== 100) {
            m = multiplyMatrices(m, Matrix.brightness(config.brightness / 100));
        }
        if (config.mode === 1) {
            m = multiplyMatrices(m, Matrix.invertNHue());
        }
        return m;
    }
    function applyColorMatrix([r, g, b], matrix) {
        const rgb = [[r / 255], [g / 255], [b / 255], [1], [1]];
        const result = multiplyMatrices(matrix, rgb);
        return [0, 1, 2].map((i) => clamp(Math.round(result[i][0] * 255), 0, 255));
    }
    const Matrix = {
        identity() {
            return [
                [1, 0, 0, 0, 0],
                [0, 1, 0, 0, 0],
                [0, 0, 1, 0, 0],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        },
        invertNHue() {
            return [
                [0.333, -0.667, -0.667, 0, 1],
                [-0.667, 0.333, -0.667, 0, 1],
                [-0.667, -0.667, 0.333, 0, 1],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        },
        brightness(v) {
            return [
                [v, 0, 0, 0, 0],
                [0, v, 0, 0, 0],
                [0, 0, v, 0, 0],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        },
        contrast(v) {
            const t = (1 - v) / 2;
            return [
                [v, 0, 0, 0, t],
                [0, v, 0, 0, t],
                [0, 0, v, 0, t],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        },
        sepia(v) {
            return [
                [(0.393 + 0.607 * (1 - v)), (0.769 - 0.769 * (1 - v)), (0.189 - 0.189 * (1 - v)), 0, 0],
                [(0.349 - 0.349 * (1 - v)), (0.686 + 0.314 * (1 - v)), (0.168 - 0.168 * (1 - v)), 0, 0],
                [(0.272 - 0.272 * (1 - v)), (0.534 - 0.534 * (1 - v)), (0.131 + 0.869 * (1 - v)), 0, 0],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        },
        grayscale(v) {
            return [
                [(0.2126 + 0.7874 * (1 - v)), (0.7152 - 0.7152 * (1 - v)), (0.0722 - 0.0722 * (1 - v)), 0, 0],
                [(0.2126 - 0.2126 * (1 - v)), (0.7152 + 0.2848 * (1 - v)), (0.0722 - 0.0722 * (1 - v)), 0, 0],
                [(0.2126 - 0.2126 * (1 - v)), (0.7152 - 0.7152 * (1 - v)), (0.0722 + 0.9278 * (1 - v)), 0, 0],
                [0, 0, 0, 1, 0],
                [0, 0, 0, 0, 1]
            ];
        }
    };

    function getBgPole(theme) {
        const isDarkScheme = theme.mode === 1;
        const prop = isDarkScheme ? 'darkSchemeBackgroundColor' : 'lightSchemeBackgroundColor';
        return theme[prop];
    }
    function getFgPole(theme) {
        const isDarkScheme = theme.mode === 1;
        const prop = isDarkScheme ? 'darkSchemeTextColor' : 'lightSchemeTextColor';
        return theme[prop];
    }
    const colorModificationCache = new Map();
    const colorParseCache = new Map();
    function parseToHSLWithCache(color) {
        if (colorParseCache.has(color)) {
            return colorParseCache.get(color);
        }
        const rgb = parse(color);
        const hsl = rgbToHSL(rgb);
        colorParseCache.set(color, hsl);
        return hsl;
    }
    function clearColorModificationCache() {
        colorModificationCache.clear();
        colorParseCache.clear();
    }
    const rgbCacheKeys = ['r', 'g', 'b', 'a'];
    const themeCacheKeys = ['mode', 'brightness', 'contrast', 'grayscale', 'sepia', 'darkSchemeBackgroundColor', 'darkSchemeTextColor', 'lightSchemeBackgroundColor', 'lightSchemeTextColor'];
    function getCacheId(rgb, theme) {
        return rgbCacheKeys.map((k) => rgb[k])
            .concat(themeCacheKeys.map((k) => theme[k]))
            .join(';');
    }
    function modifyColorWithCache(rgb, theme, modifyHSL, poleColor, anotherPoleColor) {
        let fnCache;
        if (colorModificationCache.has(modifyHSL)) {
            fnCache = colorModificationCache.get(modifyHSL);
        }
        else {
            fnCache = new Map();
            colorModificationCache.set(modifyHSL, fnCache);
        }
        const id = getCacheId(rgb, theme);
        if (fnCache.has(id)) {
            return fnCache.get(id);
        }
        const hsl = rgbToHSL(rgb);
        const pole = poleColor == null ? null : parseToHSLWithCache(poleColor);
        const anotherPole = anotherPoleColor == null ? null : parseToHSLWithCache(anotherPoleColor);
        const modified = modifyHSL(hsl, pole, anotherPole);
        const { r, g, b, a } = hslToRGB(modified);
        const matrix = createFilterMatrix(theme);
        const [rf, gf, bf] = applyColorMatrix([r, g, b], matrix);
        const color = (a === 1 ?
            rgbToHexString({ r: rf, g: gf, b: bf }) :
            rgbToString({ r: rf, g: gf, b: bf, a }));
        fnCache.set(id, color);
        return color;
    }
    function noopHSL(hsl) {
        return hsl;
    }
    function modifyColor(rgb, theme) {
        return modifyColorWithCache(rgb, theme, noopHSL);
    }
    function modifyLightSchemeColor(rgb, theme) {
        const poleBg = getBgPole(theme);
        const poleFg = getFgPole(theme);
        return modifyColorWithCache(rgb, theme, modifyLightModeHSL, poleFg, poleBg);
    }
    function modifyLightModeHSL({ h, s, l, a }, poleFg, poleBg) {
        const isDark = l < 0.5;
        let isNeutral;
        if (isDark) {
            isNeutral = l < 0.2 || s < 0.12;
        }
        else {
            const isBlue = h > 200 && h < 280;
            isNeutral = s < 0.24 || (l > 0.8 && isBlue);
        }
        let hx = h;
        let sx = l;
        if (isNeutral) {
            if (isDark) {
                hx = poleFg.h;
                sx = poleFg.s;
            }
            else {
                hx = poleBg.h;
                sx = poleBg.s;
            }
        }
        const lx = scale(l, 0, 1, poleFg.l, poleBg.l);
        return { h: hx, s: sx, l: lx, a };
    }
    const MAX_BG_LIGHTNESS = 0.4;
    function modifyBgHSL({ h, s, l, a }, pole) {
        const isDark = l < 0.5;
        const isBlue = h > 200 && h < 280;
        const isNeutral = s < 0.12 || (l > 0.8 && isBlue);
        if (isDark) {
            const lx = scale(l, 0, 0.5, 0, MAX_BG_LIGHTNESS);
            if (isNeutral) {
                const hx = pole.h;
                const sx = pole.s;
                return { h: hx, s: sx, l: lx, a };
            }
            return { h, s, l: lx, a };
        }
        const lx = scale(l, 0.5, 1, MAX_BG_LIGHTNESS, pole.l);
        if (isNeutral) {
            const hx = pole.h;
            const sx = pole.s;
            return { h: hx, s: sx, l: lx, a };
        }
        let hx = h;
        const isYellow = h > 60 && h < 180;
        if (isYellow) {
            const isCloserToGreen = h > 120;
            if (isCloserToGreen) {
                hx = scale(h, 120, 180, 135, 180);
            }
            else {
                hx = scale(h, 60, 120, 60, 105);
            }
        }
        return { h: hx, s, l: lx, a };
    }
    function modifyBackgroundColor(rgb, theme) {
        if (theme.mode === 0) {
            return modifyLightSchemeColor(rgb, theme);
        }
        const pole = getBgPole(theme);
        return modifyColorWithCache(rgb, { ...theme, mode: 0 }, modifyBgHSL, pole);
    }
    const MIN_FG_LIGHTNESS = 0.55;
    function modifyBlueFgHue(hue) {
        return scale(hue, 205, 245, 205, 220);
    }
    function modifyFgHSL({ h, s, l, a }, pole) {
        const isLight = l > 0.5;
        const isNeutral = l < 0.2 || s < 0.24;
        const isBlue = !isNeutral && h > 205 && h < 245;
        if (isLight) {
            const lx = scale(l, 0.5, 1, MIN_FG_LIGHTNESS, pole.l);
            if (isNeutral) {
                const hx = pole.h;
                const sx = pole.s;
                return { h: hx, s: sx, l: lx, a };
            }
            let hx = h;
            if (isBlue) {
                hx = modifyBlueFgHue(h);
            }
            return { h: hx, s, l: lx, a };
        }
        if (isNeutral) {
            const hx = pole.h;
            const sx = pole.s;
            const lx = scale(l, 0, 0.5, pole.l, MIN_FG_LIGHTNESS);
            return { h: hx, s: sx, l: lx, a };
        }
        let hx = h;
        let lx;
        if (isBlue) {
            hx = modifyBlueFgHue(h);
            lx = scale(l, 0, 0.5, pole.l, Math.min(1, MIN_FG_LIGHTNESS + 0.05));
        }
        else {
            lx = scale(l, 0, 0.5, pole.l, MIN_FG_LIGHTNESS);
        }
        return { h: hx, s, l: lx, a };
    }
    function modifyForegroundColor(rgb, theme) {
        if (theme.mode === 0) {
            return modifyLightSchemeColor(rgb, theme);
        }
        const pole = getFgPole(theme);
        return modifyColorWithCache(rgb, { ...theme, mode: 0 }, modifyFgHSL, pole);
    }
    function modifyBorderHSL({ h, s, l, a }, poleFg, poleBg) {
        const isDark = l < 0.5;
        const isNeutral = l < 0.2 || s < 0.24;
        let hx = h;
        let sx = s;
        if (isNeutral) {
            if (isDark) {
                hx = poleFg.h;
                sx = poleFg.s;
            }
            else {
                hx = poleBg.h;
                sx = poleBg.s;
            }
        }
        const lx = scale(l, 0, 1, 0.5, 0.2);
        return { h: hx, s: sx, l: lx, a };
    }
    function modifyBorderColor(rgb, theme) {
        if (theme.mode === 0) {
            return modifyLightSchemeColor(rgb, theme);
        }
        const poleFg = getFgPole(theme);
        const poleBg = getBgPole(theme);
        return modifyColorWithCache(rgb, { ...theme, mode: 0 }, modifyBorderHSL, poleFg, poleBg);
    }
    function modifyShadowColor(rgb, filter) {
        return modifyBackgroundColor(rgb, filter);
    }
    function modifyGradientColor(rgb, filter) {
        return modifyBackgroundColor(rgb, filter);
    }

    function createTextStyle(config) {
        const lines = [];
        // Don't target pre elements as they are preformatted element's e.g. code blocks
        lines.push('*:not(pre) {');
        if (config.useFont && config.fontFamily) {
            // TODO: Validate...
            lines.push(`  font-family: ${config.fontFamily} !important;`);
        }
        if (config.textStroke > 0) {
            lines.push(`  -webkit-text-stroke: ${config.textStroke}px !important;`);
            lines.push(`  text-stroke: ${config.textStroke}px !important;`);
        }
        lines.push('}');
        return lines.join('\n');
    }

    var FilterMode;
    (function (FilterMode) {
        FilterMode[FilterMode["light"] = 0] = "light";
        FilterMode[FilterMode["dark"] = 1] = "dark";
    })(FilterMode || (FilterMode = {}));
    /**
     * This checks if the current chromium version has the patch in it.
     * As of Chromium v81.0.4035.0 this has been the situation
     *
     * Bug report: https://bugs.chromium.org/p/chromium/issues/detail?id=501582
     * Patch: https://chromium-review.googlesource.com/c/chromium/src/+/1979258
     */
    function hasChromiumIssue501582() {
        return Boolean(isChromium &&
            compareChromeVersions(chromiumVersion, '81.0.4035.0') >= 0);
    }
    function createCSSFilterStyleSheet(config, url, frameURL, inversionFixes) {
        const filterValue = getCSSFilterValue(config);
        const reverseFilterValue = 'invert(100%) hue-rotate(180deg)';
        return cssFilterStyleSheetTemplate(filterValue, reverseFilterValue, config, url, frameURL, inversionFixes);
    }
    function cssFilterStyleSheetTemplate(filterValue, reverseFilterValue, config, url, frameURL, inversionFixes) {
        const fix = getInversionFixesFor(frameURL || url, inversionFixes);
        const lines = [];
        lines.push('@media screen {');
        // Add leading rule
        if (filterValue && !frameURL) {
            lines.push('');
            lines.push('/* Leading rule */');
            lines.push(createLeadingRule(filterValue));
        }
        if (config.mode === FilterMode.dark) {
            // Add reverse rule
            lines.push('');
            lines.push('/* Reverse rule */');
            lines.push(createReverseRule(reverseFilterValue, fix));
        }
        if (config.useFont || config.textStroke > 0) {
            // Add text rule
            lines.push('');
            lines.push('/* Font */');
            lines.push(createTextStyle(config));
        }
        // Fix bad font hinting after inversion
        lines.push('');
        lines.push('/* Text contrast */');
        lines.push('html {');
        lines.push('  text-shadow: 0 0 0 !important;');
        lines.push('}');
        // Full screen fix
        lines.push('');
        lines.push('/* Full screen */');
        [':-webkit-full-screen', ':-moz-full-screen', ':fullscreen'].forEach((fullScreen) => {
            lines.push(`${fullScreen}, ${fullScreen} * {`);
            lines.push('  -webkit-filter: none !important;');
            lines.push('  filter: none !important;');
            lines.push('}');
        });
        if (!frameURL) {
            // If user has the chrome issue the colors should be the other way around as of the rootcolors will affect the whole background color of the page
            const rootColors = hasChromiumIssue501582() && config.mode === FilterMode.dark ? [0, 0, 0] : [255, 255, 255];
            const [r, g, b] = applyColorMatrix(rootColors, createFilterMatrix(config));
            const bgColor = {
                r: Math.round(r),
                g: Math.round(g),
                b: Math.round(b),
                toString() {
                    return `rgb(${this.r},${this.g},${this.b})`;
                }
            };
            lines.push('');
            lines.push('/* Page background */');
            lines.push('html {');
            lines.push(`  background: ${bgColor} !important;`);
            lines.push('}');
        }
        if (fix.css && fix.css.length > 0 && config.mode === FilterMode.dark) {
            lines.push('');
            lines.push('/* Custom rules */');
            lines.push(fix.css);
        }
        lines.push('');
        lines.push('}');
        return lines.join('\n');
    }
    function getCSSFilterValue(config) {
        const filters = [];
        if (config.mode === FilterMode.dark) {
            filters.push('invert(100%) hue-rotate(180deg)');
        }
        if (config.brightness !== 100) {
            filters.push(`brightness(${config.brightness}%)`);
        }
        if (config.contrast !== 100) {
            filters.push(`contrast(${config.contrast}%)`);
        }
        if (config.grayscale !== 0) {
            filters.push(`grayscale(${config.grayscale}%)`);
        }
        if (config.sepia !== 0) {
            filters.push(`sepia(${config.sepia}%)`);
        }
        if (filters.length === 0) {
            return null;
        }
        return filters.join(' ');
    }
    function createLeadingRule(filterValue) {
        return [
            'html {',
            `  -webkit-filter: ${filterValue} !important;`,
            `  filter: ${filterValue} !important;`,
            '}'
        ].join('\n');
    }
    function joinSelectors(selectors) {
        return selectors.map((s) => s.replace(/\,$/, '')).join(',\n');
    }
    function createReverseRule(reverseFilterValue, fix) {
        const lines = [];
        if (fix.invert.length > 0) {
            lines.push(`${joinSelectors(fix.invert)} {`);
            lines.push(`  -webkit-filter: ${reverseFilterValue} !important;`);
            lines.push(`  filter: ${reverseFilterValue} !important;`);
            lines.push('}');
        }
        if (fix.noinvert.length > 0) {
            lines.push(`${joinSelectors(fix.noinvert)} {`);
            lines.push('  -webkit-filter: none !important;');
            lines.push('  filter: none !important;');
            lines.push('}');
        }
        if (fix.removebg.length > 0) {
            lines.push(`${joinSelectors(fix.removebg)} {`);
            lines.push('  background: white !important;');
            lines.push('}');
        }
        return lines.join('\n');
    }
    /**
    * Returns fixes for a given URL.
    * If no matches found, common fixes will be returned.
    * @param url Site URL.
    * @param inversionFixes List of inversion fixes.
    */
    function getInversionFixesFor(url, inversionFixes) {
        const common = {
            url: inversionFixes[0].url,
            invert: inversionFixes[0].invert || [],
            noinvert: inversionFixes[0].noinvert || [],
            removebg: inversionFixes[0].removebg || [],
            css: inversionFixes[0].css || '',
        };
        if (url) {
            // Search for match with given URL
            const matches = inversionFixes
                .slice(1)
                .filter((s) => isURLInList(url, s.url))
                .sort((a, b) => b.url[0].length - a.url[0].length);
            if (matches.length > 0) {
                const found = matches[0];
                return {
                    url: found.url,
                    invert: common.invert.concat(found.invert || []),
                    noinvert: common.noinvert.concat(found.noinvert || []),
                    removebg: common.removebg.concat(found.removebg || []),
                    css: [common.css, found.css].filter((s) => s).join('\n'),
                };
            }
        }
        return common;
    }

    function toSVGMatrix(matrix) {
        return matrix.slice(0, 4).map(m => m.map(m => m.toFixed(3)).join(' ')).join(' ');
    }
    function getSVGFilterMatrixValue(config) {
        return toSVGMatrix(createFilterMatrix(config));
    }

    let counter = 0;
    const resolvers = new Map();
    const rejectors = new Map();
    function bgFetch(request) {
        return new Promise((resolve, reject) => {
            const id = ++counter;
            resolvers.set(id, resolve);
            rejectors.set(id, reject);
            chrome.runtime.sendMessage({ type: 'fetch', data: request, id });
        });
    }
    chrome.runtime.onMessage.addListener(({ type, data, error, id }) => {
        if (type === 'fetch-response') {
            const resolve = resolvers.get(id);
            const reject = rejectors.get(id);
            resolvers.delete(id);
            rejectors.delete(id);
            if (error) {
                reject && reject(error);
            }
            else {
                resolve && resolve(data);
            }
        }
    });

    async function getOKResponse(url, mimeType) {
        const response = await fetch(url, {
            cache: 'force-cache',
            credentials: 'omit',
        });
        // Firefox bug, content type is "application/x-unknown-content-type"
        if (isFirefox && mimeType === 'text/css' && url.startsWith('moz-extension://') && url.endsWith('.css')) {
            return response;
        }
        if (mimeType && !response.headers.get('Content-Type').startsWith(mimeType)) {
            throw new Error(`Mime type mismatch when loading ${url}`);
        }
        if (!response.ok) {
            throw new Error(`Unable to load ${url} ${response.status} ${response.statusText}`);
        }
        return response;
    }
    async function loadAsDataURL(url, mimeType) {
        const response = await getOKResponse(url, mimeType);
        return await readResponseAsDataURL(response);
    }
    async function readResponseAsDataURL(response) {
        const blob = await response.blob();
        const dataURL = await (new Promise((resolve) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result);
            reader.readAsDataURL(blob);
        }));
        return dataURL;
    }

    async function getImageDetails(url) {
        let dataURL;
        if (url.startsWith('data:')) {
            dataURL = url;
        }
        else {
            dataURL = await getImageDataURL(url);
        }
        const image = await urlToImage(dataURL);
        const info = analyzeImage(image);
        return {
            src: url,
            dataURL,
            width: image.naturalWidth,
            height: image.naturalHeight,
            ...info,
        };
    }
    async function getImageDataURL(url) {
        if (getURLHostOrProtocol(url) === (location.host || location.protocol)) {
            return await loadAsDataURL(url);
        }
        return await bgFetch({ url, responseType: 'data-url' });
    }
    async function urlToImage(url) {
        return new Promise((resolve, reject) => {
            const image = new Image();
            image.onload = () => resolve(image);
            image.onerror = () => reject(`Unable to load image ${url}`);
            image.src = url;
        });
    }
    const MAX_ANALIZE_PIXELS_COUNT = 32 * 32;
    let canvas;
    let context;
    function createCanvas() {
        const maxWidth = MAX_ANALIZE_PIXELS_COUNT;
        const maxHeight = MAX_ANALIZE_PIXELS_COUNT;
        canvas = document.createElement('canvas');
        canvas.width = maxWidth;
        canvas.height = maxHeight;
        context = canvas.getContext('2d');
        context.imageSmoothingEnabled = false;
    }
    function removeCanvas() {
        canvas = null;
        context = null;
    }
    function analyzeImage(image) {
        if (!canvas) {
            createCanvas();
        }
        const { naturalWidth, naturalHeight } = image;
        if (naturalHeight === 0 || naturalWidth === 0) {
            logWarn(`logWarn(Image is empty ${image.currentSrc})`);
            return null;
        }
        const naturalPixelsCount = naturalWidth * naturalHeight;
        const k = Math.min(1, Math.sqrt(MAX_ANALIZE_PIXELS_COUNT / naturalPixelsCount));
        const width = Math.ceil(naturalWidth * k);
        const height = Math.ceil(naturalHeight * k);
        context.clearRect(0, 0, width, height);
        context.drawImage(image, 0, 0, naturalWidth, naturalHeight, 0, 0, width, height);
        const imageData = context.getImageData(0, 0, width, height);
        const d = imageData.data;
        const TRANSPARENT_ALPHA_THRESHOLD = 0.05;
        const DARK_LIGHTNESS_THRESHOLD = 0.4;
        const LIGHT_LIGHTNESS_THRESHOLD = 0.7;
        let transparentPixelsCount = 0;
        let darkPixelsCount = 0;
        let lightPixelsCount = 0;
        let i, x, y;
        let r, g, b, a;
        let l;
        for (y = 0; y < height; y++) {
            for (x = 0; x < width; x++) {
                i = 4 * (y * width + x);
                r = d[i + 0] / 255;
                g = d[i + 1] / 255;
                b = d[i + 2] / 255;
                a = d[i + 3] / 255;
                if (a < TRANSPARENT_ALPHA_THRESHOLD) {
                    transparentPixelsCount++;
                }
                else {
                    // Use sRGB to determine the `pixel Lightness`
                    // https://en.wikipedia.org/wiki/Relative_luminance
                    l = 0.2126 * r + 0.7152 * g + 0.0722 * b;
                    if (l < DARK_LIGHTNESS_THRESHOLD) {
                        darkPixelsCount++;
                    }
                    if (l > LIGHT_LIGHTNESS_THRESHOLD) {
                        lightPixelsCount++;
                    }
                }
            }
        }
        const totalPixelsCount = width * height;
        const opaquePixelsCount = totalPixelsCount - transparentPixelsCount;
        const DARK_IMAGE_THRESHOLD = 0.7;
        const LIGHT_IMAGE_THRESHOLD = 0.7;
        const TRANSPARENT_IMAGE_THRESHOLD = 0.1;
        const LARGE_IMAGE_PIXELS_COUNT = 800 * 600;
        return {
            isDark: ((darkPixelsCount / opaquePixelsCount) >= DARK_IMAGE_THRESHOLD),
            isLight: ((lightPixelsCount / opaquePixelsCount) >= LIGHT_IMAGE_THRESHOLD),
            isTransparent: ((transparentPixelsCount / totalPixelsCount) >= TRANSPARENT_IMAGE_THRESHOLD),
            isLarge: (naturalPixelsCount >= LARGE_IMAGE_PIXELS_COUNT),
        };
    }
    const objectURLs = new Set();
    function getFilteredImageDataURL({ dataURL, width, height }, filter) {
        const matrix = getSVGFilterMatrixValue(filter);
        const svg = [
            `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${width}" height="${height}">`,
            '<defs>',
            '<filter id="darkreader-image-filter">',
            `<feColorMatrix type="matrix" values="${matrix}" />`,
            '</filter>',
            '</defs>',
            `<image width="${width}" height="${height}" filter="url(#darkreader-image-filter)" xlink:href="${dataURL}" />`,
            '</svg>',
        ].join('');
        const bytes = new Uint8Array(svg.length);
        for (let i = 0; i < svg.length; i++) {
            bytes[i] = svg.charCodeAt(i);
        }
        const blob = new Blob([bytes], { type: 'image/svg+xml' });
        const objectURL = URL.createObjectURL(blob);
        objectURLs.add(objectURL);
        return objectURL;
    }
    function cleanImageProcessingCache() {
        removeCanvas();
        objectURLs.forEach((u) => URL.revokeObjectURL(u));
        objectURLs.clear();
    }

    function getModifiableCSSDeclaration(property, value, rule, ignoreImageSelectors, isCancelled) {
        const important = Boolean(rule && rule.style && rule.style.getPropertyPriority(property));
        const sourceValue = value;
        if (property.startsWith('--')) {
            return null;
        }
        else if ((property.indexOf('color') >= 0 && property !== '-webkit-print-color-adjust') ||
            property === 'fill' ||
            property === 'stroke' ||
            property === 'stop-color') {
            const modifier = getColorModifier(property, value);
            if (modifier) {
                return { property, value: modifier, important, sourceValue };
            }
        }
        else if (property === 'background-image' || property === 'list-style-image') {
            const modifier = getBgImageModifier(value, rule, ignoreImageSelectors, isCancelled);
            if (modifier) {
                return { property, value: modifier, important, sourceValue };
            }
        }
        else if (property.indexOf('shadow') >= 0) {
            const modifier = getShadowModifier(property, value);
            if (modifier) {
                return { property, value: modifier, important, sourceValue };
            }
        }
        return null;
    }
    function getModifiedUserAgentStyle(theme, isIFrame, styleSystemControls) {
        const lines = [];
        if (!isIFrame) {
            lines.push('html {');
            lines.push(`    background-color: ${modifyBackgroundColor({ r: 255, g: 255, b: 255 }, theme)} !important;`);
            lines.push('}');
        }
        lines.push(`${isIFrame ? '' : 'html, body, '}${styleSystemControls ? 'input, textarea, select, button' : ''} {`);
        lines.push(`    background-color: ${modifyBackgroundColor({ r: 255, g: 255, b: 255 }, theme)};`);
        lines.push('}');
        lines.push(`html, body, ${styleSystemControls ? 'input, textarea, select, button' : ''} {`);
        lines.push(`    border-color: ${modifyBorderColor({ r: 76, g: 76, b: 76 }, theme)};`);
        lines.push(`    color: ${modifyForegroundColor({ r: 0, g: 0, b: 0 }, theme)};`);
        lines.push('}');
        lines.push('a {');
        lines.push(`    color: ${modifyForegroundColor({ r: 0, g: 64, b: 255 }, theme)};`);
        lines.push('}');
        lines.push('table {');
        lines.push(`    border-color: ${modifyBorderColor({ r: 128, g: 128, b: 128 }, theme)};`);
        lines.push('}');
        lines.push('::placeholder {');
        lines.push(`    color: ${modifyForegroundColor({ r: 169, g: 169, b: 169 }, theme)};`);
        lines.push('}');
        lines.push('input:-webkit-autofill,');
        lines.push('textarea:-webkit-autofill,');
        lines.push('select:-webkit-autofill {');
        lines.push(`    background-color: ${modifyBackgroundColor({ r: 250, g: 255, b: 189 }, theme)} !important;`);
        lines.push(`    color: ${modifyForegroundColor({ r: 0, g: 0, b: 0 }, theme)} !important;`);
        lines.push('}');
        if (theme.scrollbarColor) {
            lines.push(getModifiedScrollbarStyle(theme));
        }
        if (theme.selectionColor) {
            lines.push(getModifiedSelectionStyle(theme));
        }
        return lines.join('\n');
    }
    function getSelectionColor(theme) {
        let backgroundColorSelection;
        let foregroundColorSelection;
        if (theme.selectionColor === 'auto') {
            backgroundColorSelection = modifyBackgroundColor({ r: 0, g: 96, b: 212 }, { ...theme, grayscale: 0 });
            foregroundColorSelection = modifyForegroundColor({ r: 255, g: 255, b: 255 }, { ...theme, grayscale: 0 });
        }
        else {
            const rgb = parse(theme.selectionColor);
            const hsl = rgbToHSL(rgb);
            backgroundColorSelection = theme.selectionColor;
            if (hsl.l < 0.5) {
                foregroundColorSelection = '#FFF';
            }
            else {
                foregroundColorSelection = '#000';
            }
        }
        return { backgroundColorSelection, foregroundColorSelection };
    }
    function getModifiedSelectionStyle(theme) {
        const lines = [];
        const modifiedSelectionColor = getSelectionColor(theme);
        const backgroundColorSelection = modifiedSelectionColor.backgroundColorSelection;
        const foregroundColorSelection = modifiedSelectionColor.foregroundColorSelection;
        ['::selection', '::-moz-selection'].forEach((selection) => {
            lines.push(`${selection} {`);
            lines.push(`    background-color: ${backgroundColorSelection} !important;`);
            lines.push(`    color: ${foregroundColorSelection} !important;`);
            lines.push('}');
        });
        return lines.join('\n');
    }
    function getModifiedScrollbarStyle(theme) {
        const lines = [];
        let colorTrack;
        let colorIcons;
        let colorThumb;
        let colorThumbHover;
        let colorThumbActive;
        let colorCorner;
        if (theme.scrollbarColor === 'auto') {
            colorTrack = modifyBackgroundColor({ r: 241, g: 241, b: 241 }, theme);
            colorIcons = modifyForegroundColor({ r: 96, g: 96, b: 96 }, theme);
            colorThumb = modifyBackgroundColor({ r: 176, g: 176, b: 176 }, theme);
            colorThumbHover = modifyBackgroundColor({ r: 144, g: 144, b: 144 }, theme);
            colorThumbActive = modifyBackgroundColor({ r: 96, g: 96, b: 96 }, theme);
            colorCorner = modifyBackgroundColor({ r: 255, g: 255, b: 255 }, theme);
        }
        else {
            const rgb = parse(theme.scrollbarColor);
            const hsl = rgbToHSL(rgb);
            const isLight = hsl.l > 0.5;
            const lighten = (lighter) => ({ ...hsl, l: clamp(hsl.l + lighter, 0, 1) });
            const darken = (darker) => ({ ...hsl, l: clamp(hsl.l - darker, 0, 1) });
            colorTrack = hslToString(darken(0.4));
            colorIcons = hslToString(isLight ? darken(0.4) : lighten(0.4));
            colorThumb = hslToString(hsl);
            colorThumbHover = hslToString(lighten(0.1));
            colorThumbActive = hslToString(lighten(0.2));
        }
        lines.push('::-webkit-scrollbar {');
        lines.push(`    background-color: ${colorTrack};`);
        lines.push(`    color: ${colorIcons};`);
        lines.push('}');
        lines.push('::-webkit-scrollbar-thumb {');
        lines.push(`    background-color: ${colorThumb};`);
        lines.push('}');
        lines.push('::-webkit-scrollbar-thumb:hover {');
        lines.push(`    background-color: ${colorThumbHover};`);
        lines.push('}');
        lines.push('::-webkit-scrollbar-thumb:active {');
        lines.push(`    background-color: ${colorThumbActive};`);
        lines.push('}');
        lines.push('::-webkit-scrollbar-corner {');
        lines.push(`    background-color: ${colorCorner};`);
        lines.push('}');
        lines.push('* {');
        lines.push(`    scrollbar-color: ${colorTrack} ${colorThumb};`);
        lines.push('}');
        return lines.join('\n');
    }
    function getModifiedFallbackStyle(filter, { strict }) {
        const lines = [];
        lines.push(`html, body, ${strict ? 'body :not(iframe)' : 'body > :not(iframe)'} {`);
        lines.push(`    background-color: ${modifyBackgroundColor({ r: 255, g: 255, b: 255 }, filter)} !important;`);
        lines.push(`    border-color: ${modifyBorderColor({ r: 64, g: 64, b: 64 }, filter)} !important;`);
        lines.push(`    color: ${modifyForegroundColor({ r: 0, g: 0, b: 0 }, filter)} !important;`);
        lines.push('}');
        return lines.join('\n');
    }
    const unparsableColors = new Set([
        'inherit',
        'transparent',
        'initial',
        'currentcolor',
        'none',
        'unset',
    ]);
    const colorParseCache$1 = new Map();
    function parseColorWithCache($color) {
        $color = $color.trim();
        if (colorParseCache$1.has($color)) {
            return colorParseCache$1.get($color);
        }
        const color = parse($color);
        colorParseCache$1.set($color, color);
        return color;
    }
    function tryParseColor($color) {
        try {
            return parseColorWithCache($color);
        }
        catch (err) {
            return null;
        }
    }
    function getColorModifier(prop, value) {
        if (unparsableColors.has(value.toLowerCase())) {
            return value;
        }
        try {
            const rgb = parseColorWithCache(value);
            if (prop.indexOf('background') >= 0) {
                return (filter) => modifyBackgroundColor(rgb, filter);
            }
            if (prop.indexOf('border') >= 0 || prop.indexOf('outline') >= 0) {
                return (filter) => modifyBorderColor(rgb, filter);
            }
            return (filter) => modifyForegroundColor(rgb, filter);
        }
        catch (err) {
            return null;
        }
    }
    const gradientRegex = /[\-a-z]+gradient\(([^\(\)]*(\(([^\(\)]*(\(.*?\)))*[^\(\)]*\))){0,15}[^\(\)]*\)/g;
    const imageDetailsCache = new Map();
    const awaitingForImageLoading = new Map();
    function shouldIgnoreImage(rule, selectors) {
        if (!rule || selectors.length === 0) {
            return false;
        }
        if (selectors.some((s) => s === '*')) {
            return true;
        }
        const ruleSelectors = rule.selectorText.split(/,\s*/g);
        for (let i = 0; i < selectors.length; i++) {
            const ignoredSelector = selectors[i];
            if (ruleSelectors.some((s) => s === ignoredSelector)) {
                return true;
            }
        }
        return false;
    }
    function getBgImageModifier(value, rule, ignoreImageSelectors, isCancelled) {
        try {
            const gradients = getMatches(gradientRegex, value);
            const urls = getMatches(cssURLRegex, value);
            if (urls.length === 0 && gradients.length === 0) {
                return value;
            }
            const getIndices = (matches) => {
                let index = 0;
                return matches.map((match) => {
                    const valueIndex = value.indexOf(match, index);
                    index = valueIndex + match.length;
                    return { match, index: valueIndex };
                });
            };
            const matches = getIndices(urls).map((i) => ({ type: 'url', ...i }))
                .concat(getIndices(gradients).map((i) => ({ type: 'gradient', ...i })))
                .sort((a, b) => a.index - b.index);
            const getGradientModifier = (gradient) => {
                const match = gradient.match(/^(.*-gradient)\((.*)\)$/);
                const type = match[1];
                const content = match[2];
                const partsRegex = /([^\(\),]+(\([^\(\)]*(\([^\(\)]*\)*[^\(\)]*)?\))?[^\(\),]*),?/g;
                const colorStopRegex = /^(from|color-stop|to)\(([^\(\)]*?,\s*)?(.*?)\)$/;
                const parts = getMatches(partsRegex, content, 1).map((part) => {
                    part = part.trim();
                    let rgb = tryParseColor(part);
                    if (rgb) {
                        return (filter) => modifyGradientColor(rgb, filter);
                    }
                    const space = part.lastIndexOf(' ');
                    rgb = tryParseColor(part.substring(0, space));
                    if (rgb) {
                        return (filter) => `${modifyGradientColor(rgb, filter)} ${part.substring(space + 1)}`;
                    }
                    const colorStopMatch = part.match(colorStopRegex);
                    if (colorStopMatch) {
                        rgb = tryParseColor(colorStopMatch[3]);
                        if (rgb) {
                            return (filter) => `${colorStopMatch[1]}(${colorStopMatch[2] ? `${colorStopMatch[2]}, ` : ''}${modifyGradientColor(rgb, filter)})`;
                        }
                    }
                    return () => part;
                });
                return (filter) => {
                    return `${type}(${parts.map((modify) => modify(filter)).join(', ')})`;
                };
            };
            const getURLModifier = (urlValue) => {
                let url = getCSSURLValue(urlValue);
                if (rule.parentStyleSheet.href) {
                    const basePath = getCSSBaseBath(rule.parentStyleSheet.href);
                    url = getAbsoluteURL(basePath, url);
                }
                else if (rule.parentStyleSheet.ownerNode && rule.parentStyleSheet.ownerNode.baseURI) {
                    url = getAbsoluteURL(rule.parentStyleSheet.ownerNode.baseURI, url);
                }
                else {
                    url = getAbsoluteURL(location.origin, url);
                }
                const absoluteValue = `url("${url}")`;
                return async (filter) => {
                    let imageDetails;
                    if (imageDetailsCache.has(url)) {
                        imageDetails = imageDetailsCache.get(url);
                    }
                    else {
                        try {
                            if (shouldIgnoreImage(rule, ignoreImageSelectors)) {
                                return null;
                            }
                            if (awaitingForImageLoading.has(url)) {
                                const awaiters = awaitingForImageLoading.get(url);
                                imageDetails = await new Promise((resolve) => awaiters.push(resolve));
                                if (!imageDetails) {
                                    return null;
                                }
                            }
                            else {
                                awaitingForImageLoading.set(url, []);
                                imageDetails = await getImageDetails(url);
                                imageDetailsCache.set(url, imageDetails);
                                awaitingForImageLoading.get(url).forEach((resolve) => resolve(imageDetails));
                                awaitingForImageLoading.delete(url);
                            }
                            if (isCancelled()) {
                                return null;
                            }
                        }
                        catch (err) {
                            logWarn(err);
                            if (awaitingForImageLoading.has(url)) {
                                awaitingForImageLoading.get(url).forEach((resolve) => resolve(null));
                                awaitingForImageLoading.delete(url);
                            }
                            return absoluteValue;
                        }
                    }
                    const bgImageValue = getBgImageValue(imageDetails, filter) || absoluteValue;
                    return bgImageValue;
                };
            };
            const getBgImageValue = (imageDetails, filter) => {
                const { isDark, isLight, isTransparent, isLarge, width } = imageDetails;
                let result;
                if (isDark && isTransparent && filter.mode === 1 && !isLarge && width > 2) {
                    logInfo(`Inverting dark image ${imageDetails.src}`);
                    const inverted = getFilteredImageDataURL(imageDetails, { ...filter, sepia: clamp(filter.sepia + 10, 0, 100) });
                    result = `url("${inverted}")`;
                }
                else if (isLight && !isTransparent && filter.mode === 1) {
                    if (isLarge) {
                        result = 'none';
                    }
                    else {
                        logInfo(`Dimming light image ${imageDetails.src}`);
                        const dimmed = getFilteredImageDataURL(imageDetails, filter);
                        result = `url("${dimmed}")`;
                    }
                }
                else if (filter.mode === 0 && isLight && !isLarge) {
                    logInfo(`Applying filter to image ${imageDetails.src}`);
                    const filtered = getFilteredImageDataURL(imageDetails, { ...filter, brightness: clamp(filter.brightness - 10, 5, 200), sepia: clamp(filter.sepia + 10, 0, 100) });
                    result = `url("${filtered}")`;
                }
                else {
                    result = null;
                }
                return result;
            };
            const modifiers = [];
            let index = 0;
            matches.forEach(({ match, type, index: matchStart }, i) => {
                const prefixStart = index;
                const matchEnd = matchStart + match.length;
                index = matchEnd;
                modifiers.push(() => value.substring(prefixStart, matchStart));
                modifiers.push(type === 'url' ? getURLModifier(match) : getGradientModifier(match));
                if (i === matches.length - 1) {
                    modifiers.push(() => value.substring(matchEnd));
                }
            });
            return (filter) => {
                const results = modifiers.map((modify) => modify(filter));
                if (results.some((r) => r instanceof Promise)) {
                    return Promise.all(results)
                        .then((asyncResults) => {
                        return asyncResults.join('');
                    });
                }
                return results.join('');
            };
        }
        catch (err) {
            return null;
        }
    }
    function getShadowModifier(prop, value) {
        try {
            let index = 0;
            const colorMatches = getMatches(/(^|\s)([a-z]+\(.+?\)|#[0-9a-f]+|[a-z]+)(.*?(inset|outset)?($|,))/ig, value, 2);
            const modifiers = colorMatches.map((match, i) => {
                const prefixIndex = index;
                const matchIndex = value.indexOf(match, index);
                const matchEnd = matchIndex + match.length;
                index = matchEnd;
                const rgb = tryParseColor(match);
                if (!rgb) {
                    return () => value.substring(prefixIndex, matchEnd);
                }
                return (filter) => `${value.substring(prefixIndex, matchIndex)}${modifyShadowColor(rgb, filter)}${i === colorMatches.length - 1 ? value.substring(matchEnd) : ''}`;
            });
            return (filter) => modifiers.map((modify) => modify(filter)).join('');
        }
        catch (err) {
            return null;
        }
    }
    function cleanModificationCache() {
        colorParseCache$1.clear();
        clearColorModificationCache();
        imageDetailsCache.clear();
        cleanImageProcessingCache();
        awaitingForImageLoading.clear();
    }

    const overrides = {
        'background-color': {
            customProp: '--darkreader-inline-bgcolor',
            cssProp: 'background-color',
            dataAttr: 'data-darkreader-inline-bgcolor',
        }
        'background-image': {
            customProp: '--darkreader-inline-bgimage',
            cssProp: 'background-image',
            dataAttr: 'data-darkreader-inline-bgimage',
        }
        'border-color': {
            customProp: '--darkreader-inline-border',
            cssProp: 'border-color',
            dataAttr: 'data-darkreader-inline-border',
        }
        'border-bottom-color': {
            customProp: '--darkreader-inline-border-bottom',
            cssProp: 'border-bottom-color',
            dataAttr: 'data-darkreader-inline-border-bottom',
        }
        'border-left-color': {
            customProp: '--darkreader-inline-border-left',
            cssProp: 'border-left-color',
            dataAttr: 'data-darkreader-inline-border-left',
        }
        'border-right-color': {
            customProp: '--darkreader-inline-border-right',
            cssProp: 'border-right-color',
            dataAttr: 'data-darkreader-inline-border-right',
        }
        'border-top-color': {
            customProp: '--darkreader-inline-border-top',
            cssProp: 'border-top-color',
            dataAttr: 'data-darkreader-inline-border-top',
        }
        'box-shadow': {
            customProp: '--darkreader-inline-boxshadow',
            cssProp: 'box-shadow',
            dataAttr: 'data-darkreader-inline-boxshadow',
        }
        'color': {
            customProp: '--darkreader-inline-color',
            cssProp: 'color',
            dataAttr: 'data-darkreader-inline-color',
        }
        'fill': {
            customProp: '--darkreader-inline-fill',
            cssProp: 'fill',
            dataAttr: 'data-darkreader-inline-fill',
        }
        'stroke': {
            customProp: '--darkreader-inline-stroke',
            cssProp: 'stroke',
            dataAttr: 'data-darkreader-inline-stroke',
        }
        'outline-color': {
            customProp: '--darkreader-inline-outline',
            cssProp: 'outline-color',
            dataAttr: 'data-darkreader-inline-outline',
        }
        'stop-color': {
            customProp: '--darkreader-inline-stopcolor',
            cssProp: 'stop-color',
            dataAttr: 'data-darkreader-inline-stopcolor',
        }
    };
    const overridesList = Object.values(overrides);
    const INLINE_STYLE_ATTRS = ['style', 'fill', 'stop-color', 'stroke', 'bgcolor', 'color'];
    const INLINE_STYLE_SELECTOR = INLINE_STYLE_ATTRS.map((attr) => `[${attr}]`).join(', ');
    function getInlineOverrideStyle() {
        return overridesList.map(({ dataAttr, customProp, cssProp }) => {
            return [
                `[${dataAttr}] {`,
                `  ${cssProp}: var(${customProp}) !important;`,
                '}',
            ].join('\n');
        }).join('\n');
    }
    function getInlineStyleElements(root) {
        const results = [];
        if (root instanceof Element && root.matches(INLINE_STYLE_SELECTOR)) {
            results.push(root);
        }
        if (root instanceof Element || (isShadowDomSupported && root instanceof ShadowRoot) || root instanceof Document) {
            push(results, root.querySelectorAll(INLINE_STYLE_SELECTOR));
        }
        return results;
    }
    const treeObservers = new Map();
    const attrObservers = new Map();
    function watchForInlineStyles(elementStyleDidChange, shadowRootDiscovered) {
        deepWatchForInlineStyles(document, elementStyleDidChange, shadowRootDiscovered);
        iterateShadowHosts(document.documentElement, (host) => {
            deepWatchForInlineStyles(host.shadowRoot, elementStyleDidChange, shadowRootDiscovered);
        });
    }
    function deepWatchForInlineStyles(root, elementStyleDidChange, shadowRootDiscovered) {
        if (treeObservers.has(root)) {
            treeObservers.get(root).disconnect();
            attrObservers.get(root).disconnect();
        }
        const discoveredNodes = new WeakSet();
        function discoverNodes(node) {
            getInlineStyleElements(node).forEach((el) => {
                if (discoveredNodes.has(el)) {
                    return;
                }
                discoveredNodes.add(el);
                elementStyleDidChange(el);
            });
            iterateShadowHosts(node, (n) => {
                if (discoveredNodes.has(node)) {
                    return;
                }
                discoveredNodes.add(node);
                shadowRootDiscovered(n.shadowRoot);
                deepWatchForInlineStyles(n.shadowRoot, elementStyleDidChange, shadowRootDiscovered);
            });
        }
        const treeObserver = createOptimizedTreeObserver(root, {
            onMinorMutations: ({ additions }) => {
                additions.forEach((added) => discoverNodes(added));
            }
            onHugeMutations: () => {
                discoverNodes(root);
            }
        });
        treeObservers.set(root, treeObserver);
        let attemptCount = 0;
        let start = null;
        const ATTEMPTS_INTERVAL = getDuration({ seconds: 10 });
        const RETRY_TIMEOUT = getDuration({ seconds: 2 });
        const MAX_ATTEMPTS_COUNT = 50;
        let cache = [];
        let timeoutId = null;
        const handleAttributeMutations = throttle((mutations) => {
            mutations.forEach((m) => {
                if (INLINE_STYLE_ATTRS.includes(m.attributeName)) {
                    elementStyleDidChange(m.target);
                }
            });
        });
        const attrObserver = new MutationObserver((mutations) => {
            if (timeoutId) {
                cache.push(...mutations);
                return;
            }
            attemptCount++;
            const now = Date.now();
            if (start == null) {
                start = now;
            }
            else if (attemptCount >= MAX_ATTEMPTS_COUNT) {
                if (now - start < ATTEMPTS_INTERVAL) {
                    timeoutId = setTimeout(() => {
                        start = null;
                        attemptCount = 0;
                        timeoutId = null;
                        const attributeCache = cache;
                        cache = [];
                        handleAttributeMutations(attributeCache);
                    } RETRY_TIMEOUT);
                    cache.push(...mutations);
                    return;
                }
                start = now;
                attemptCount = 1;
            }
            handleAttributeMutations(mutations);
        });
        attrObserver.observe(root, {
            attributes: true,
            attributeFilter: INLINE_STYLE_ATTRS.concat(overridesList.map(({ dataAttr }) => dataAttr)),
            subtree: true,
        });
        attrObservers.set(root, attrObserver);
    }
    function stopWatchingForInlineStyles() {
        treeObservers.forEach((o) => o.disconnect());
        attrObservers.forEach((o) => o.disconnect());
        treeObservers.clear();
        attrObservers.clear();
    }
    const inlineStyleCache = new WeakMap();
    const filterProps = ['brightness', 'contrast', 'grayscale', 'sepia', 'mode'];
    function getInlineStyleCacheKey(el, theme) {
        return INLINE_STYLE_ATTRS
            .map((attr) => `${attr}="${el.getAttribute(attr)}"`)
            .concat(filterProps.map((prop) => `${prop}="${theme[prop]}"`))
            .join(' ');
    }
    function shouldIgnoreInlineStyle(element, selectors) {
        for (let i = 0, len = selectors.length; i < len; i++) {
            const ingnoredSelector = selectors[i];
            if (element.matches(ingnoredSelector)) {
                return true;
            }
        }
        return false;
    }
    function overrideInlineStyle(element, theme, ignoreInlineSelectors, ignoreImageSelectors) {
        const cacheKey = getInlineStyleCacheKey(element, theme);
        if (cacheKey === inlineStyleCache.get(element)) {
            return;
        }
        const unsetProps = new Set(Object.keys(overrides));
        function setCustomProp(targetCSSProp, modifierCSSProp, cssVal) {
            const { customProp, dataAttr } = overrides[targetCSSProp];
            const mod = getModifiableCSSDeclaration(modifierCSSProp, cssVal, null, ignoreImageSelectors, null);
            if (!mod) {
                return;
            }
            let value = mod.value;
            if (typeof value === 'function') {
                value = value(theme);
            }
            element.style.setProperty(customProp, value);
            if (!element.hasAttribute(dataAttr)) {
                element.setAttribute(dataAttr, '');
            }
            unsetProps.delete(targetCSSProp);
        }
        if (ignoreInlineSelectors.length > 0) {
            if (shouldIgnoreInlineStyle(element, ignoreInlineSelectors)) {
                unsetProps.forEach((cssProp) => {
                    element.removeAttribute(overrides[cssProp].dataAttr);
                });
                return;
            }
        }
        if (element.hasAttribute('bgcolor')) {
            let value = element.getAttribute('bgcolor');
            if (value.match(/^[0-9a-f]{3}$/i) || value.match(/^[0-9a-f]{6}$/i)) {
                value = `#${value}`;
            }
            setCustomProp('background-color', 'background-color', value);
        }
        if (element.hasAttribute('color')) {
            let value = element.getAttribute('color');
            if (value.match(/^[0-9a-f]{3}$/i) || value.match(/^[0-9a-f]{6}$/i)) {
                value = `#${value}`;
            }
            setCustomProp('color', 'color', value);
        }
        if (element instanceof SVGElement) {
            if (element.hasAttribute('fill')) {
                const SMALL_SVG_LIMIT = 32;
                const value = element.getAttribute('fill');
                let isBg = false;
                if (!(element instanceof SVGTextElement)) {
                    const { width, height } = element.getBoundingClientRect();
                    isBg = (width > SMALL_SVG_LIMIT || height > SMALL_SVG_LIMIT);
                }
                setCustomProp('fill', isBg ? 'background-color' : 'color', value);
            }
            if (element.hasAttribute('stop-color')) {
                setCustomProp('stop-color', 'background-color', element.getAttribute('stop-color'));
            }
        }
        if (element.hasAttribute('stroke')) {
            const value = element.getAttribute('stroke');
            setCustomProp('stroke', element instanceof SVGLineElement || element instanceof SVGTextElement ? 'border-color' : 'color', value);
        }
        element.style && iterateCSSDeclarations(element.style, (property, value) => {
            // Temporaty ignore background images
            // due to possible performance issues
            // and complexity of handling async requests
            if (property === 'background-image' && value.indexOf('url') >= 0) {
                return;
            }
            if (overrides.hasOwnProperty(property)) {
                setCustomProp(property, property, value);
            }
        });
        if (element.style && element instanceof SVGTextElement && element.style.fill) {
            setCustomProp('fill', 'color', element.style.getPropertyValue('fill'));
        }
        forEach(unsetProps, (cssProp) => {
            element.removeAttribute(overrides[cssProp].dataAttr);
        });
        inlineStyleCache.set(element, getInlineStyleCacheKey(element, theme));
    }

    const metaThemeColorName = 'theme-color';
    const metaThemeColorSelector = `meta[name="${metaThemeColorName}"]`;
    let srcMetaThemeColor = null;
    let observer = null;
    function changeMetaThemeColor(meta, theme) {
        srcMetaThemeColor = srcMetaThemeColor || meta.content;
        try {
            const color = parse(srcMetaThemeColor);
            meta.content = modifyBackgroundColor(color, theme);
        }
        catch (err) {
        }
    }
    function changeMetaThemeColorWhenAvailable(theme) {
        const meta = document.querySelector(metaThemeColorSelector);
        if (meta) {
            changeMetaThemeColor(meta, theme);
        }
        else {
            if (observer) {
                observer.disconnect();
            }
            observer = new MutationObserver((mutations) => {
                loop: for (let i = 0; i < mutations.length; i++) {
                    const { addedNodes } = mutations[i];
                    for (let j = 0; j < addedNodes.length; j++) {
                        const node = addedNodes[j];
                        if (node instanceof HTMLMetaElement && node.name === metaThemeColorName) {
                            observer.disconnect();
                            observer = null;
                            changeMetaThemeColor(node, theme);
                            break loop;
                        }
                    }
                }
            });
            observer.observe(document.head, { childList: true });
        }
    }
    function restoreMetaThemeColor() {
        if (observer) {
            observer.disconnect();
            observer = null;
        }
        const meta = document.querySelector(metaThemeColorSelector);
        if (meta && srcMetaThemeColor) {
            meta.content = srcMetaThemeColor;
        }
    }

    const themeCacheKeys$1 = [
        'mode',
        'brightness',
        'contrast',
        'grayscale',
        'sepia',
        'darkSchemeBackgroundColor',
        'darkSchemeTextColor',
        'lightSchemeBackgroundColor',
        'lightSchemeTextColor',
    ];
    function getThemeKey(theme) {
        return themeCacheKeys$1.map((p) => `${p}:${theme[p]}`).join(';');
    }
    const asyncQueue = createAsyncTasksQueue();
    function createStyleSheetModifier() {
        let renderId = 0;
        const rulesTextCache = new Map();
        const rulesModCache = new Map();
        let prevFilterKey = null;
        function modifySheet(options) {
            const rules = options.sourceCSSRules;
            const { theme, variables, ignoreImageAnalysis, force, prepareSheet, isAsyncCancelled } = options;
            let rulesChanged = (rulesModCache.size === 0);
            const notFoundCacheKeys = new Set(rulesModCache.keys());
            const themeKey = getThemeKey(theme);
            const themeChanged = (themeKey !== prevFilterKey);
            const modRules = [];
            iterateCSSRules(rules, (rule) => {
                const cssText = rule.cssText;
                let textDiffersFromPrev = false;
                notFoundCacheKeys.delete(cssText);
                if (!rulesTextCache.has(cssText)) {
                    rulesTextCache.set(cssText, cssText);
                    textDiffersFromPrev = true;
                }
                // Put CSS text with inserted CSS variables into separate <style> element
                // to properly handle composite properties (e.g. background -> background-color)
                let vars;
                let varsRule = null;
                if (variables.size > 0 || cssText.includes('var(')) {
                    const cssTextWithVariables = replaceCSSVariables(cssText, variables);
                    if (rulesTextCache.get(cssText) !== cssTextWithVariables) {
                        rulesTextCache.set(cssText, cssTextWithVariables);
                        textDiffersFromPrev = true;
                        vars = getTempCSSStyleSheet();
                        vars.insertRule(cssTextWithVariables);
                        varsRule = vars.cssRules[0];
                    }
                }
                if (textDiffersFromPrev) {
                    rulesChanged = true;
                }
                else {
                    modRules.push(rulesModCache.get(cssText));
                    return;
                }
                const modDecs = [];
                const targetRule = varsRule || rule;
                targetRule && targetRule.style && iterateCSSDeclarations(targetRule.style, (property, value) => {
                    const mod = getModifiableCSSDeclaration(property, value, rule, ignoreImageAnalysis, isAsyncCancelled);
                    if (mod) {
                        modDecs.push(mod);
                    }
                });
                let modRule = null;
                if (modDecs.length > 0) {
                    const parentRule = rule.parentRule;
                    modRule = { selector: rule.selectorText, declarations: modDecs, parentRule };
                    modRules.push(modRule);
                }
                rulesModCache.set(cssText, modRule);
                vars && vars.deleteRule(0);
            });
            notFoundCacheKeys.forEach((key) => {
                rulesTextCache.delete(key);
                rulesModCache.delete(key);
            });
            prevFilterKey = themeKey;
            if (!force && !rulesChanged && !themeChanged) {
                return;
            }
            renderId++;
            function setRule(target, index, rule) {
                const { selector, declarations } = rule;
                target.insertRule(`${selector} {}`, index);
                const style = target.cssRules[index].style;
                declarations.forEach(({ property, value, important, sourceValue }) => {
                    style.setProperty(property, value == null ? sourceValue : value, important ? 'important' : '');
                });
            }
            const asyncDeclarations = new Map();
            let asyncDeclarationCounter = 0;
            const rootReadyGroup = { rule: null, rules: [], isGroup: true };
            const groupRefs = new WeakMap();
            function getGroup(rule) {
                if (rule == null) {
                    return rootReadyGroup;
                }
                if (groupRefs.has(rule)) {
                    return groupRefs.get(rule);
                }
                const group = { rule, rules: [], isGroup: true };
                groupRefs.set(rule, group);
                const parentGroup = getGroup(rule.parentRule);
                parentGroup.rules.push(group);
                return group;
            }
            modRules.filter((r) => r).forEach(({ selector, declarations, parentRule }) => {
                const group = getGroup(parentRule);
                const readyStyleRule = { selector, declarations: [], isGroup: false };
                const readyDeclarations = readyStyleRule.declarations;
                group.rules.push(readyStyleRule);
                declarations.forEach(({ property, value, important, sourceValue }) => {
                    if (typeof value === 'function') {
                        const modified = value(theme);
                        if (modified instanceof Promise) {
                            const asyncKey = asyncDeclarationCounter++;
                            const asyncDeclaration = { property, value: null, important, asyncKey, sourceValue };
                            readyDeclarations.push(asyncDeclaration);
                            const promise = modified;
                            const currentRenderId = renderId;
                            promise.then((asyncValue) => {
                                if (!asyncValue || isAsyncCancelled() || currentRenderId !== renderId) {
                                    return;
                                }
                                asyncDeclaration.value = asyncValue;
                                asyncQueue.add(() => {
                                    if (isAsyncCancelled() || currentRenderId !== renderId) {
                                        return;
                                    }
                                    rebuildAsyncRule(asyncKey);
                                });
                            });
                        }
                        else {
                            readyDeclarations.push({ property, value: modified, important, sourceValue });
                        }
                    }
                    else {
                        readyDeclarations.push({ property, value, important, sourceValue });
                    }
                });
            });
            const sheet = prepareSheet();
            function buildStyleSheet() {
                function createTarget(group, parent) {
                    const { rule } = group;
                    if (rule instanceof CSSMediaRule) {
                        const { media } = rule;
                        const index = parent.cssRules.length;
                        parent.insertRule(`@media ${media.mediaText} {}`, index);
                        return parent.cssRules[index];
                    }
                    return parent;
                }
                function iterateReadyRules(group, target, styleIterator) {
                    group.rules.forEach((r) => {
                        if (r.isGroup) {
                            const t = createTarget(r, target);
                            iterateReadyRules(r, t, styleIterator);
                        }
                        else {
                            styleIterator(r, target);
                        }
                    });
                }
                iterateReadyRules(rootReadyGroup, sheet, (rule, target) => {
                    const index = target.cssRules.length;
                    rule.declarations
                        .filter(({ value }) => value == null)
                        .forEach(({ asyncKey }) => asyncDeclarations.set(asyncKey, { rule, target, index }));
                    setRule(target, index, rule);
                });
            }
            function rebuildAsyncRule(key) {
                const { rule, target, index } = asyncDeclarations.get(key);
                target.deleteRule(index);
                setRule(target, index, rule);
                asyncDeclarations.delete(key);
            }
            buildStyleSheet();
        }
        return { modifySheet };
    }

    const STYLE_SELECTOR = 'style, link[rel*="stylesheet" i]:not([disabled])';
    function shouldManageStyle(element) {
        return (((element instanceof HTMLStyleElement) ||
            (element instanceof SVGStyleElement) ||
            (element instanceof HTMLLinkElement &&
                element.rel &&
                element.rel.toLowerCase().includes('stylesheet') &&
                !element.disabled)) &&
            !element.classList.contains('darkreader') &&
            element.media !== 'print' &&
            !element.classList.contains('stylus'));
    }
    function getManageableStyles(node, results = [], deep = true) {
        if (shouldManageStyle(node)) {
            results.push(node);
        }
        else if (node instanceof Element || (isShadowDomSupported && node instanceof ShadowRoot) || node === document) {
            forEach(node.querySelectorAll(STYLE_SELECTOR), (style) => getManageableStyles(style, results, false));
            if (deep) {
                iterateShadowHosts(node, (host) => getManageableStyles(host.shadowRoot, results, false));
            }
        }
        return results;
    }
    const syncStyleSet = new WeakSet();
    const corsStyleSet = new WeakSet();
    function manageStyle(element, { update, loadingStart, loadingEnd }) {
        const prevStyles = [];
        let next = element;
        while ((next = next.nextElementSibling) && next.matches('.darkreader')) {
            prevStyles.push(next);
        }
        let corsCopy = prevStyles.find((el) => el.matches('.darkreader--cors') && !corsStyleSet.has(el)) || null;
        let syncStyle = prevStyles.find((el) => el.matches('.darkreader--sync') && !syncStyleSet.has(el)) || null;
        let corsCopyPositionWatcher = null;
        let syncStylePositionWatcher = null;
        let cancelAsyncOperations = false;
        const sheetModifier = createStyleSheetModifier();
        const observer = new MutationObserver(() => {
            update();
        });
        const observerOptions = { attributes: true, childList: true, characterData: true };
        function containsCSSImport() {
            return element instanceof HTMLStyleElement && element.textContent.trim().match(cssImportRegex);
        }
        function getRulesSync() {
            if (corsCopy) {
                return corsCopy.sheet.cssRules;
            }
            if (containsCSSImport()) {
                return null;
            }
            return safeGetSheetRules();
        }
        function insertStyle() {
            if (corsCopy) {
                if (element.nextSibling !== corsCopy) {
                    element.parentNode.insertBefore(corsCopy, element.nextSibling);
                }
                if (corsCopy.nextSibling !== syncStyle) {
                    element.parentNode.insertBefore(syncStyle, corsCopy.nextSibling);
                }
            }
            else if (element.nextSibling !== syncStyle) {
                element.parentNode.insertBefore(syncStyle, element.nextSibling);
            }
        }
        function createSyncStyle() {
            syncStyle = element instanceof SVGStyleElement ?
                document.createElementNS('http://www.w3.org/2000/svg', 'style') :
                document.createElement('style');
            syncStyle.classList.add('darkreader');
            syncStyle.classList.add('darkreader--sync');
            syncStyle.media = 'screen';
            syncStyleSet.add(syncStyle);
        }
        let isLoadingRules = false;
        let wasLoadingError = false;
        async function getRulesAsync() {
            let cssText;
            let cssBasePath;
            if (element instanceof HTMLLinkElement) {
                let [cssRules, accessError] = getRulesOrError();
                if ((!cssRules && !accessError) || isStillLoadingError(accessError)) {
                    try {
                        await linkLoading(element);
                    }
                    catch (err) {
                        wasLoadingError = true;
                    }
                    if (cancelAsyncOperations) {
                        return null;
                    }
                    [cssRules, accessError] = getRulesOrError();
                }
                if (cssRules != null) {
                    return cssRules;
                }
                cssText = await loadText(element.href);
                cssBasePath = getCSSBaseBath(element.href);
                if (cancelAsyncOperations) {
                    return null;
                }
            }
            else if (containsCSSImport()) {
                cssText = element.textContent.trim();
                cssBasePath = getCSSBaseBath(location.href);
            }
            else {
                return null;
            }
            if (cssText) {
                // Sometimes cross-origin stylesheets are protected from direct access
                // so need to load CSS text and insert it into style element
                try {
                    const fullCSSText = await replaceCSSImports(cssText, cssBasePath);
                    corsCopy = createCORSCopy(element, fullCSSText);
                }
                catch (err) {
                }
                if (corsCopy) {
                    corsCopyPositionWatcher = watchForNodePosition(corsCopy, 'prev-sibling');
                    return corsCopy.sheet.cssRules;
                }
            }
            return null;
        }
        function details() {
            const rules = getRulesSync();
            if (!rules) {
                if (isLoadingRules || wasLoadingError) {
                    return null;
                }
                isLoadingRules = true;
                loadingStart();
                getRulesAsync().then((results) => {
                    isLoadingRules = false;
                    loadingEnd();
                    if (results) {
                        update();
                    }
                }).catch((err) => {
                    isLoadingRules = false;
                    loadingEnd();
                });
                return null;
            }
            const variables = getCSSVariables(rules);
            return { variables };
        }
        let forceRenderStyle = false;
        function render(theme, variables, ignoreImageAnalysis) {
            const rules = getRulesSync();
            if (!rules) {
                return;
            }
            cancelAsyncOperations = false;
            function prepareOverridesSheet() {
                if (!syncStyle) {
                    createSyncStyle();
                }
                syncStylePositionWatcher && syncStylePositionWatcher.stop();
                insertStyle();
                // Firefox issue: Some websites get CSP warning,
                // when `textContent` is not set (e.g. pypi.org).
                // But for other websites (e.g. facebook.com)
                // some images disappear when `textContent`
                // is initially set to an empty string.
                if (syncStyle.sheet == null) {
                    syncStyle.textContent = '';
                }
                const sheet = syncStyle.sheet;
                for (let i = sheet.cssRules.length - 1; i >= 0; i--) {
                    sheet.deleteRule(i);
                }
                if (syncStylePositionWatcher) {
                    syncStylePositionWatcher.run();
                }
                else {
                    syncStylePositionWatcher = watchForNodePosition(syncStyle, 'prev-sibling', () => {
                        forceRenderStyle = true;
                        buildOverrides();
                    });
                }
                return syncStyle.sheet;
            }
            function buildOverrides() {
                const force = forceRenderStyle;
                forceRenderStyle = false;
                sheetModifier.modifySheet({
                    prepareSheet: prepareOverridesSheet,
                    sourceCSSRules: rules,
                    theme,
                    variables,
                    ignoreImageAnalysis,
                    force,
                    isAsyncCancelled: () => cancelAsyncOperations,
                });
            }
            buildOverrides();
        }
        function getRulesOrError() {
            try {
                if (element.sheet == null) {
                    return [null, null];
                }
                return [element.sheet.cssRules, null];
            }
            catch (err) {
                return [null, err];
            }
        }
        // NOTE: In Firefox, when link is loading,
        // `sheet` property is not null,
        // but `cssRules` access error is thrown
        function isStillLoadingError(error) {
            return error && error.message && error.message.includes('loading');
        }
        // Seems like Firefox bug: silent exception is produced
        // without any notice, when accessing <style> CSS rules
        function safeGetSheetRules() {
            const [cssRules, err] = getRulesOrError();
            if (err) {
                return null;
            }
            return cssRules;
        }
        let areSheetChangesPending = false;
        function subscribeToSheetChanges() {
            element.addEventListener('__darkreader__updateSheet', () => {
                if (areSheetChangesPending) {
                    return;
                }
                function handleSheetChanges() {
                    areSheetChangesPending = false;
                    if (cancelAsyncOperations) {
                        return;
                    }
                    update();
                }
                areSheetChangesPending = true;
                if (typeof queueMicrotask === 'function') {
                    queueMicrotask(handleSheetChanges);
                }
                else {
                    requestAnimationFrame(handleSheetChanges);
                }
            });
        }
        function pause() {
            observer.disconnect();
            cancelAsyncOperations = true;
            corsCopyPositionWatcher && corsCopyPositionWatcher.stop();
            syncStylePositionWatcher && syncStylePositionWatcher.stop();
        }
        function destroy() {
            pause();
            removeNode(corsCopy);
            removeNode(syncStyle);
            element.removeEventListener('__darkreader__updateSheet', update);
        }
        function watch() {
            observer.observe(element, observerOptions);
            if (element instanceof HTMLStyleElement) {
                subscribeToSheetChanges();
            }
        }
        const maxMoveCount = 10;
        let moveCount = 0;
        function restore() {
            if (!syncStyle) {
                return;
            }
            moveCount++;
            if (moveCount > maxMoveCount) {
                return;
            }
            const shouldForceRender = syncStyle.sheet == null || syncStyle.sheet.cssRules.length > 0;
            insertStyle();
            corsCopyPositionWatcher && corsCopyPositionWatcher.skip();
            syncStylePositionWatcher && syncStylePositionWatcher.skip();
            if (shouldForceRender) {
                forceRenderStyle = true;
                update();
            }
        }
        return {
            details,
            render,
            pause,
            destroy,
            watch,
            restore,
        };
    }
    function linkLoading(link) {
        return new Promise((resolve, reject) => {
            const cleanUp = () => {
                link.removeEventListener('load', onLoad);
                link.removeEventListener('error', onError);
            };
            const onLoad = () => {
                cleanUp();
                resolve();
            };
            const onError = () => {
                cleanUp();
                reject(`Link loading failed ${link.href}`);
            };
            link.addEventListener('load', onLoad);
            link.addEventListener('error', onError);
        });
    }
    function getCSSImportURL(importDeclaration) {
        return getCSSURLValue(importDeclaration.substring(8).replace(/;$/, ''));
    }
    async function loadText(url) {
        if (url.startsWith('data:')) {
            return await (await fetch(url)).text();
        }
        return await bgFetch({ url, responseType: 'text', mimeType: 'text/css' });
    }
    async function replaceCSSImports(cssText, basePath, cache = new Map()) {
        cssText = removeCSSComments(cssText);
        cssText = replaceCSSFontFace(cssText);
        cssText = replaceCSSRelativeURLsWithAbsolute(cssText, basePath);
        const importMatches = getMatches(cssImportRegex, cssText);
        for (const match of importMatches) {
            const importURL = getCSSImportURL(match);
            const absoluteURL = getAbsoluteURL(basePath, importURL);
            let importedCSS;
            if (cache.has(absoluteURL)) {
                importedCSS = cache.get(absoluteURL);
            }
            else {
                try {
                    importedCSS = await loadText(absoluteURL);
                    cache.set(absoluteURL, importedCSS);
                    importedCSS = await replaceCSSImports(importedCSS, getCSSBaseBath(absoluteURL), cache);
                }
                catch (err) {
                    importedCSS = '';
                }
            }
            cssText = cssText.split(match).join(importedCSS);
        }
        cssText = cssText.trim();
        return cssText;
    }
    function createCORSCopy(srcElement, cssText) {
        if (!cssText) {
            return null;
        }
        const cors = document.createElement('style');
        cors.classList.add('darkreader');
        cors.classList.add('darkreader--cors');
        cors.media = 'screen';
        cors.textContent = cssText;
        srcElement.parentNode.insertBefore(cors, srcElement.nextSibling);
        cors.sheet.disabled = true;
        corsStyleSet.add(cors);
        return cors;
    }

    const observers = [];
    let observedRoots;
    const undefinedGroups = new Map();
    let elementsDefinitionCallback;
    function collectUndefinedElements(root) {
        if (!isDefinedSelectorSupported) {
            return;
        }
        forEach(root.querySelectorAll(':not(:defined)'), (el) => {
            const tag = el.tagName.toLowerCase();
            if (!undefinedGroups.has(tag)) {
                undefinedGroups.set(tag, new Set());
                customElementsWhenDefined(tag).then(() => {
                    if (elementsDefinitionCallback) {
                        const elements = undefinedGroups.get(tag);
                        undefinedGroups.delete(tag);
                        elementsDefinitionCallback(Array.from(elements));
                    }
                });
            }
            undefinedGroups.get(tag).add(el);
        });
    }
    const resolvers$1 = new Map();
    function handleIsDefined(e) {
        if (resolvers$1.has(e.detail.tag)) {
            const resolve = resolvers$1.get(e.detail.tag);
            resolve();
        }
    }
    function customElementsWhenDefined(tag) {
        return new Promise((resolve) => {
            // `customElements.whenDefined` is not available in extensions
            // https://bugs.chromium.org/p/chromium/issues/detail?id=390807
            if (window.customElements && typeof window.customElements.whenDefined === 'function') {
                customElements.whenDefined(tag).then(resolve);
            }
            else {
                resolvers$1.set(tag, resolve);
                document.dispatchEvent(new CustomEvent('__darkreader__addUndefinedResolver', { detail: { tag } }));
            }
        });
    }
    function watchWhenCustomElementsDefined(callback) {
        elementsDefinitionCallback = callback;
    }
    function unsubscribeFromDefineCustomElements() {
        elementsDefinitionCallback = null;
        undefinedGroups.clear();
        document.removeEventListener('__darkreader__isDefined', handleIsDefined);
    }
    function watchForStyleChanges(currentStyles, update, shadowRootDiscovered) {
        stopWatchingForStyleChanges();
        const prevStyles = new Set(currentStyles);
        const prevStyleSiblings = new WeakMap();
        const nextStyleSiblings = new WeakMap();
        function saveStylePosition(style) {
            prevStyleSiblings.set(style, style.previousElementSibling);
            nextStyleSiblings.set(style, style.nextElementSibling);
        }
        function forgetStylePosition(style) {
            prevStyleSiblings.delete(style);
            nextStyleSiblings.delete(style);
        }
        function didStylePositionChange(style) {
            return (style.previousElementSibling !== prevStyleSiblings.get(style) ||
                style.nextElementSibling !== nextStyleSiblings.get(style));
        }
        currentStyles.forEach(saveStylePosition);
        function handleStyleOperations(operations) {
            const { createdStyles, removedStyles, movedStyles } = operations;
            createdStyles.forEach((s) => saveStylePosition(s));
            movedStyles.forEach((s) => saveStylePosition(s));
            removedStyles.forEach((s) => forgetStylePosition(s));
            createdStyles.forEach((s) => prevStyles.add(s));
            removedStyles.forEach((s) => prevStyles.delete(s));
            if (createdStyles.size + removedStyles.size + movedStyles.size > 0) {
                update({
                    created: Array.from(createdStyles),
                    removed: Array.from(removedStyles),
                    moved: Array.from(movedStyles),
                    updated: [],
                });
            }
        }
        function handleMinorTreeMutations({ additions, moves, deletions }) {
            const createdStyles = new Set();
            const removedStyles = new Set();
            const movedStyles = new Set();
            additions.forEach((node) => getManageableStyles(node).forEach((style) => createdStyles.add(style)));
            deletions.forEach((node) => getManageableStyles(node).forEach((style) => removedStyles.add(style)));
            moves.forEach((node) => getManageableStyles(node).forEach((style) => movedStyles.add(style)));
            handleStyleOperations({ createdStyles, removedStyles, movedStyles });
            additions.forEach((n) => {
                iterateShadowHosts(n, subscribeForShadowRootChanges);
                collectUndefinedElements(n);
            });
        }
        function handleHugeTreeMutations(root) {
            const styles = new Set(getManageableStyles(root));
            const createdStyles = new Set();
            const removedStyles = new Set();
            const movedStyles = new Set();
            styles.forEach((s) => {
                if (!prevStyles.has(s)) {
                    createdStyles.add(s);
                }
            });
            prevStyles.forEach((s) => {
                if (!styles.has(s)) {
                    removedStyles.add(s);
                }
            });
            styles.forEach((s) => {
                if (!createdStyles.has(s) && !removedStyles.has(s) && didStylePositionChange(s)) {
                    movedStyles.add(s);
                }
            });
            handleStyleOperations({ createdStyles, removedStyles, movedStyles });
            iterateShadowHosts(root, subscribeForShadowRootChanges);
            collectUndefinedElements(root);
        }
        function handleAttributeMutations(mutations) {
            const updatedStyles = new Set();
            const removedStyles = new Set();
            mutations.forEach((m) => {
                const { target } = m;
                if (target.isConnected) {
                    if (shouldManageStyle(target)) {
                        updatedStyles.add(target);
                    }
                    else if (target instanceof HTMLLinkElement && target.disabled) {
                        removedStyles.add(target);
                    }
                }
            });
            if (updatedStyles.size + removedStyles.size > 0) {
                update({
                    updated: Array.from(updatedStyles),
                    created: [],
                    removed: Array.from(removedStyles),
                    moved: [],
                });
            }
        }
        function observe(root) {
            const treeObserver = createOptimizedTreeObserver(root, {
                onMinorMutations: handleMinorTreeMutations,
                onHugeMutations: handleHugeTreeMutations,
            });
            const attrObserver = new MutationObserver(handleAttributeMutations);
            attrObserver.observe(root, { attributes: true, attributeFilter: ['rel', 'disabled', 'media'], subtree: true });
            observers.push(treeObserver, attrObserver);
            observedRoots.add(root);
        }
        function subscribeForShadowRootChanges(node) {
            const { shadowRoot } = node;
            if (shadowRoot == null || observedRoots.has(shadowRoot)) {
                return;
            }
            observe(shadowRoot);
            shadowRootDiscovered(shadowRoot);
        }
        observe(document);
        iterateShadowHosts(document.documentElement, subscribeForShadowRootChanges);
        watchWhenCustomElementsDefined((hosts) => {
            const newStyles = [];
            hosts.forEach((host) => push(newStyles, getManageableStyles(host.shadowRoot)));
            update({ created: newStyles, updated: [], removed: [], moved: [] });
            hosts.forEach((host) => {
                const { shadowRoot } = host;
                if (shadowRoot == null) {
                    return;
                }
                subscribeForShadowRootChanges(host);
                iterateShadowHosts(shadowRoot, subscribeForShadowRootChanges);
                collectUndefinedElements(shadowRoot);
            });
        });
        document.addEventListener('__darkreader__isDefined', handleIsDefined);
        collectUndefinedElements(document);
    }
    function resetObservers() {
        observers.forEach((o) => o.disconnect());
        observers.splice(0, observers.length);
        observedRoots = new WeakSet();
    }
    function stopWatchingForStyleChanges() {
        resetObservers();
        unsubscribeFromDefineCustomElements();
    }

    function hexify(number) {
        return ((number < 16 ? '0' : '') + number.toString(16));
    }
    function generateUID() {
        return Array.from(crypto.getRandomValues(new Uint8Array(16))).map((x) => hexify(x)).join('');
    }

    const adoptedStyleOverrides = new WeakMap();
    const overrideList = new WeakSet();
    function createAdoptedStyleSheetOverride(node) {
        let cancelAsyncOperations = false;
        function injectSheet(sheet, override) {
            const newSheets = [...node.adoptedStyleSheets];
            const sheetIndex = newSheets.indexOf(sheet);
            const existingIndex = newSheets.indexOf(override);
            if (sheetIndex === existingIndex - 1) {
                return;
            }
            if (existingIndex >= 0) {
                newSheets.splice(existingIndex, 1);
            }
            newSheets.splice(sheetIndex + 1, 0, override);
            node.adoptedStyleSheets = newSheets;
        }
        function destroy() {
            cancelAsyncOperations = true;
            const newSheets = [...node.adoptedStyleSheets];
            node.adoptedStyleSheets.forEach((adoptedStyleSheet) => {
                if (overrideList.has(adoptedStyleSheet)) {
                    const existingIndex = newSheets.indexOf(adoptedStyleSheet);
                    if (existingIndex >= 0) {
                        newSheets.splice(existingIndex, 1);
                    }
                    adoptedStyleOverrides.delete(adoptedStyleSheet);
                    overrideList.delete(adoptedStyleSheet);
                }
            });
            node.adoptedStyleSheets = newSheets;
        }
        function render(theme, globalVariables, ignoreImageAnalysis) {
            node.adoptedStyleSheets.forEach((sheet) => {
                if (overrideList.has(sheet)) {
                    return;
                }
                const rules = sheet.rules;
                const override = new CSSStyleSheet();
                function prepareOverridesSheet() {
                    for (let i = override.cssRules.length - 1; i >= 0; i--) {
                        override.deleteRule(i);
                    }
                    injectSheet(sheet, override);
                    adoptedStyleOverrides.set(sheet, override);
                    overrideList.add(override);
                    return override;
                }
                // TODO: Make each adoptedStyleSheet variable good for the respective `shadow-root scope`.
                const variables = globalVariables;
                getCSSVariables(sheet.cssRules).forEach((value, key) => variables.set(key, value));
                const sheetModifier = createStyleSheetModifier();
                sheetModifier.modifySheet({
                    prepareSheet: prepareOverridesSheet,
                    sourceCSSRules: rules,
                    theme,
                    variables,
                    ignoreImageAnalysis,
                    force: false,
                    isAsyncCancelled: () => cancelAsyncOperations,
                });
            });
        }
        return {
            render,
            destroy
        };
    }

    function injectProxy() {
        const addRuleDescriptor = Object.getOwnPropertyDescriptor(CSSStyleSheet.prototype, 'addRule');
        const insertRuleDescriptor = Object.getOwnPropertyDescriptor(CSSStyleSheet.prototype, 'insertRule');
        const deleteRuleDescriptor = Object.getOwnPropertyDescriptor(CSSStyleSheet.prototype, 'deleteRule');
        const removeRuleDescriptor = Object.getOwnPropertyDescriptor(CSSStyleSheet.prototype, 'removeRule');
        const cleanUp = () => {
            Object.defineProperty(CSSStyleSheet.prototype, 'addRule', addRuleDescriptor);
            Object.defineProperty(CSSStyleSheet.prototype, 'insertRule', insertRuleDescriptor);
            Object.defineProperty(CSSStyleSheet.prototype, 'deleteRule', deleteRuleDescriptor);
            Object.defineProperty(CSSStyleSheet.prototype, 'removeRule', removeRuleDescriptor);
            document.removeEventListener('__darkreader__cleanUp', cleanUp);
            document.removeEventListener('__darkreader__addUndefinedResolver', (e) => addUndefinedResolver(e));
        };
        const addUndefinedResolver = (e) => {
            customElements.whenDefined(e.detail.tag).then(() => {
                document.dispatchEvent(new CustomEvent('__darkreader__isDefined', { detail: { tag: e.detail.tag } }));
            });
        };
        document.addEventListener('__darkreader__cleanUp', cleanUp);
        document.addEventListener('__darkreader__addUndefinedResolver', (e) => addUndefinedResolver(e));
        const updateSheetEvent = new Event('__darkreader__updateSheet');
        function proxyAddRule(selector, style, index) {
            addRuleDescriptor.value.call(this, selector, style, index);
            if (this.ownerNode && !this.ownerNode.classList.contains('darkreader')) {
                this.ownerNode.dispatchEvent(updateSheetEvent);
            }
            // Should always returns -1 https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/addRule#Return_value.
            return -1;
        }
        function proxyInsertRule(rule, index) {
            const returnValue = insertRuleDescriptor.value.call(this, rule, index);
            if (this.ownerNode && !this.ownerNode.classList.contains('darkreader')) {
                this.ownerNode.dispatchEvent(updateSheetEvent);
            }
            return returnValue;
        }
        function proxyDeleteRule(index) {
            deleteRuleDescriptor.value.call(this, index);
            if (this.ownerNode && !this.ownerNode.classList.contains('darkreader')) {
                this.ownerNode.dispatchEvent(updateSheetEvent);
            }
        }
        function proxyRemoveRule(index) {
            removeRuleDescriptor.value.call(this, index);
            if (this.ownerNode && !this.ownerNode.classList.contains('darkreader')) {
                this.ownerNode.dispatchEvent(updateSheetEvent);
            }
        }
        Object.defineProperty(CSSStyleSheet.prototype, 'addRule', Object.assign({}, addRuleDescriptor, { value: proxyAddRule }));
        Object.defineProperty(CSSStyleSheet.prototype, 'insertRule', Object.assign({}, insertRuleDescriptor, { value: proxyInsertRule }));
        Object.defineProperty(CSSStyleSheet.prototype, 'deleteRule', Object.assign({}, deleteRuleDescriptor, { value: proxyDeleteRule }));
        Object.defineProperty(CSSStyleSheet.prototype, 'removeRule', Object.assign({}, removeRuleDescriptor, { value: proxyRemoveRule }));
    }

    const variables = new Map();
    const INSTANCE_ID = generateUID();
    const styleManagers = new Map();
    const adoptedStyleManagers = [];
    let filter = null;
    let fixes = null;
    let isIFrame = null;
    function createOrUpdateStyle(className, root = document.head || document) {
        let element = root.querySelector(`.${className}`);
        if (!element) {
            element = document.createElement('style');
            element.classList.add('darkreader');
            element.classList.add(className);
            element.media = 'screen';
        }
        return element;
    }
    function createOrUpdateScript(className, root = document.head || document) {
        let element = root.querySelector(`.${className}`);
        if (!element) {
            element = document.createElement('script');
            element.classList.add('darkreader');
            element.classList.add(className);
        }
        return element;
    }
    const nodePositionWatchers = new Map();
    function setupNodePositionWatcher(node, alias) {
        nodePositionWatchers.has(alias) && nodePositionWatchers.get(alias).stop();
        nodePositionWatchers.set(alias, watchForNodePosition(node, 'parent'));
    }
    function stopStylePositionWatchers() {
        forEach(nodePositionWatchers.values(), (watcher) => watcher.stop());
        nodePositionWatchers.clear();
    }
    function createStaticStyleOverrides() {
        const fallbackStyle = createOrUpdateStyle('darkreader--fallback', document);
        fallbackStyle.textContent = getModifiedFallbackStyle(filter, { strict: true });
        document.head.insertBefore(fallbackStyle, document.head.firstChild);
        setupNodePositionWatcher(fallbackStyle, 'fallback');
        const userAgentStyle = createOrUpdateStyle('darkreader--user-agent');
        userAgentStyle.textContent = getModifiedUserAgentStyle(filter, isIFrame, filter.styleSystemControls);
        document.head.insertBefore(userAgentStyle, fallbackStyle.nextSibling);
        setupNodePositionWatcher(userAgentStyle, 'user-agent');
        const textStyle = createOrUpdateStyle('darkreader--text');
        if (filter.useFont || filter.textStroke > 0) {
            textStyle.textContent = createTextStyle(filter);
        }
        else {
            textStyle.textContent = '';
        }
        document.head.insertBefore(textStyle, fallbackStyle.nextSibling);
        setupNodePositionWatcher(textStyle, 'text');
        const invertStyle = createOrUpdateStyle('darkreader--invert');
        if (fixes && Array.isArray(fixes.invert) && fixes.invert.length > 0) {
            invertStyle.textContent = [
                `${fixes.invert.join(', ')} {`,
                `    filter: ${getCSSFilterValue({
                ...filter,
                contrast: filter.mode === 0 ? filter.contrast : clamp(filter.contrast - 10, 0, 100),
            })} !important;`,
                '}',
            ].join('\n');
        }
        else {
            invertStyle.textContent = '';
        }
        document.head.insertBefore(invertStyle, textStyle.nextSibling);
        setupNodePositionWatcher(invertStyle, 'invert');
        const inlineStyle = createOrUpdateStyle('darkreader--inline');
        inlineStyle.textContent = getInlineOverrideStyle();
        document.head.insertBefore(inlineStyle, invertStyle.nextSibling);
        setupNodePositionWatcher(inlineStyle, 'inline');
        const overrideStyle = createOrUpdateStyle('darkreader--override');
        overrideStyle.textContent = fixes && fixes.css ? replaceCSSTemplates(fixes.css) : '';
        document.head.appendChild(overrideStyle);
        setupNodePositionWatcher(overrideStyle, 'override');
        const variableStyle = createOrUpdateStyle('darkreader--variables');
        const selectionColors = getSelectionColor(filter);
        const { darkSchemeBackgroundColor, darkSchemeTextColor, lightSchemeBackgroundColor, lightSchemeTextColor } = filter;
        variableStyle.textContent = [
            `:root {`,
            `   --darkreader-neutral-background: ${filter.mode === 0 ? lightSchemeBackgroundColor : darkSchemeBackgroundColor};`,
            `   --darkreader-neutral-text: ${filter.mode === 0 ? lightSchemeTextColor : darkSchemeTextColor};`,
            `   --darkreader-selection-background: ${selectionColors.backgroundColorSelection};`,
            `   --darkreader-selection-text: ${selectionColors.foregroundColorSelection};`,
            `}`
        ].join('\n');
        document.head.insertBefore(variableStyle, inlineStyle.nextSibling);
        setupNodePositionWatcher(variableStyle, 'variables');
        const proxyScript = createOrUpdateScript('darkreader--proxy');
        proxyScript.textContent = `(${injectProxy})()`;
        document.head.insertBefore(proxyScript, variableStyle.nextSibling);
    }
    const shadowRootsWithOverrides = new Set();
    function createShadowStaticStyleOverrides(root) {
        const inlineStyle = createOrUpdateStyle('darkreader--inline', root);
        inlineStyle.textContent = getInlineOverrideStyle();
        root.insertBefore(inlineStyle, root.firstChild);
        const overrideStyle = createOrUpdateStyle('darkreader--override', root);
        overrideStyle.textContent = fixes && fixes.css ? replaceCSSTemplates(fixes.css) : '';
        root.insertBefore(overrideStyle, inlineStyle.nextSibling);
        shadowRootsWithOverrides.add(root);
    }
    function replaceCSSTemplates($cssText) {
        return $cssText.replace(/\${(.+?)}/g, (m0, $color) => {
            try {
                const color = parseColorWithCache($color);
                return modifyColor(color, filter);
            }
            catch (err) {
                return $color;
            }
        });
    }
    function cleanFallbackStyle() {
        const fallback = document.querySelector('.darkreader--fallback');
        if (fallback) {
            fallback.textContent = '';
        }
    }
    function getIgnoreImageAnalysisSelectors() {
        return fixes && Array.isArray(fixes.ignoreImageAnalysis) ? fixes.ignoreImageAnalysis : [];
    }
    function createDynamicStyleOverrides() {
        cancelRendering();
        updateVariables(getElementCSSVariables(document.documentElement));
        const allStyles = getManageableStyles(document);
        const newManagers = allStyles
            .filter((style) => !styleManagers.has(style))
            .map((style) => createManager(style));
        const newVariables = newManagers
            .map((manager) => manager.details())
            .filter((details) => details && details.variables.size > 0)
            .map(({ variables }) => variables);
        if (newVariables.length === 0) {
            styleManagers.forEach((manager) => manager.render(filter, variables, getIgnoreImageAnalysisSelectors()));
            if (loadingStyles.size === 0) {
                cleanFallbackStyle();
            }
        }
        else {
            newVariables.forEach((variables) => updateVariables(variables));
            throttledRenderAllStyles(() => {
                if (loadingStyles.size === 0) {
                    cleanFallbackStyle();
                }
            });
        }
        newManagers.forEach((manager) => manager.watch());
        const inlineStyleElements = toArray(document.querySelectorAll(INLINE_STYLE_SELECTOR));
        iterateShadowHosts(document.documentElement, (host) => {
            createShadowStaticStyleOverrides(host.shadowRoot);
            const elements = host.shadowRoot.querySelectorAll(INLINE_STYLE_SELECTOR);
            if (elements.length > 0) {
                push(inlineStyleElements, elements);
            }
        });
        const ignoredInlineSelectors = fixes && Array.isArray(fixes.ignoreInlineStyle) ? fixes.ignoreInlineStyle : [];
        inlineStyleElements.forEach((el) => overrideInlineStyle(el, filter, getIgnoreImageAnalysisSelectors(), ignoredInlineSelectors));
        handleAdoptedStyleSheets(document);
    }
    let loadingStylesCounter = 0;
    const loadingStyles = new Set();
    function createManager(element) {
        const loadingStyleId = ++loadingStylesCounter;
        function loadingStart() {
            if (!isDOMReady() || !didDocumentShowUp) {
                loadingStyles.add(loadingStyleId);
                const fallbackStyle = document.querySelector('.darkreader--fallback');
                if (!fallbackStyle.textContent) {
                    fallbackStyle.textContent = getModifiedFallbackStyle(filter, { strict: false });
                }
            }
        }
        function loadingEnd() {
            loadingStyles.delete(loadingStyleId);
            if (loadingStyles.size === 0 && isDOMReady()) {
                cleanFallbackStyle();
            }
        }
        function update() {
            const details = manager.details();
            if (!details) {
                return;
            }
            if (details.variables.size === 0) {
                manager.render(filter, variables, getIgnoreImageAnalysisSelectors());
            }
            else {
                updateVariables(details.variables);
                throttledRenderAllStyles();
            }
        }
        const manager = manageStyle(element, { update, loadingStart, loadingEnd });
        styleManagers.set(element, manager);
        return manager;
    }
    function updateVariables(newVars) {
        if (newVars.size === 0) {
            return;
        }
        newVars.forEach((value, key) => {
            variables.set(key, value);
        });
        variables.forEach((value, key) => {
            variables.set(key, replaceCSSVariables(value, variables));
        });
    }
    function removeManager(element) {
        const manager = styleManagers.get(element);
        if (manager) {
            manager.destroy();
            styleManagers.delete(element);
        }
    }
    const throttledRenderAllStyles = throttle((callback) => {
        styleManagers.forEach((manager) => manager.render(filter, variables, getIgnoreImageAnalysisSelectors()));
        adoptedStyleManagers.forEach((manager) => manager.render(filter, variables, getIgnoreImageAnalysisSelectors()));
        callback && callback();
    });
    const cancelRendering = function () {
        throttledRenderAllStyles.cancel();
    };
    function onDOMReady() {
        if (loadingStyles.size === 0) {
            cleanFallbackStyle();
        }
    }
    let documentVisibilityListener = null;
    let didDocumentShowUp = !document.hidden;
    function watchForDocumentVisibility(callback) {
        const alreadyWatching = Boolean(documentVisibilityListener);
        documentVisibilityListener = () => {
            if (!document.hidden) {
                stopWatchingForDocumentVisibility();
                callback();
                didDocumentShowUp = true;
            }
        };
        if (!alreadyWatching) {
            document.addEventListener('visibilitychange', documentVisibilityListener);
        }
    }
    function stopWatchingForDocumentVisibility() {
        document.removeEventListener('visibilitychange', documentVisibilityListener);
        documentVisibilityListener = null;
    }
    function createThemeAndWatchForUpdates() {
        createStaticStyleOverrides();
        function runDynamicStyle() {
            createDynamicStyleOverrides();
            watchForUpdates();
        }
        if (document.hidden) {
            watchForDocumentVisibility(runDynamicStyle);
        }
        else {
            runDynamicStyle();
        }
        changeMetaThemeColorWhenAvailable(filter);
    }
    function handleAdoptedStyleSheets(node) {
        if (Array.isArray(node.adoptedStyleSheets)) {
            if (node.adoptedStyleSheets.length > 0) {
                const newManger = createAdoptedStyleSheetOverride(node);
                adoptedStyleManagers.push(newManger);
                newManger.render(filter, variables, getIgnoreImageAnalysisSelectors());
            }
        }
    }
    function watchForUpdates() {
        const managedStyles = Array.from(styleManagers.keys());
        watchForStyleChanges(managedStyles, ({ created, updated, removed, moved }) => {
            const stylesToRemove = removed;
            const stylesToManage = created.concat(updated).concat(moved)
                .filter((style) => !styleManagers.has(style));
            const stylesToRestore = moved
                .filter((style) => styleManagers.has(style));
            stylesToRemove.forEach((style) => removeManager(style));
            const newManagers = stylesToManage
                .map((style) => createManager(style));
            const newVariables = newManagers
                .map((manager) => manager.details())
                .filter((details) => details && details.variables.size > 0)
                .map(({ variables }) => variables);
            if (newVariables.length === 0) {
                newManagers.forEach((manager) => manager.render(filter, variables, getIgnoreImageAnalysisSelectors()));
            }
            else {
                newVariables.forEach((variables) => updateVariables(variables));
                throttledRenderAllStyles();
            }
            newManagers.forEach((manager) => manager.watch());
            stylesToRestore.forEach((style) => styleManagers.get(style).restore());
        } (shadowRoot) => {
            createShadowStaticStyleOverrides(shadowRoot);
            handleAdoptedStyleSheets(shadowRoot);
        });
        const ignoredInlineSelectors = fixes && Array.isArray(fixes.ignoreInlineStyle) ? fixes.ignoreInlineStyle : [];
        watchForInlineStyles((element) => {
            overrideInlineStyle(element, filter, ignoredInlineSelectors, getIgnoreImageAnalysisSelectors());
            if (element === document.documentElement) {
                const rootVariables = getElementCSSVariables(document.documentElement);
                if (rootVariables.size > 0) {
                    updateVariables(rootVariables);
                    throttledRenderAllStyles();
                }
            }
        } (root) => {
            createShadowStaticStyleOverrides(root);
            const inlineStyleElements = root.querySelectorAll(INLINE_STYLE_SELECTOR);
            if (inlineStyleElements.length > 0) {
                forEach(inlineStyleElements, (el) => overrideInlineStyle(el, filter, getIgnoreImageAnalysisSelectors(), ignoredInlineSelectors));
            }
        });
        addDOMReadyListener(onDOMReady);
    }
    function stopWatchingForUpdates() {
        styleManagers.forEach((manager) => manager.pause());
        stopStylePositionWatchers();
        stopWatchingForStyleChanges();
        stopWatchingForInlineStyles();
        removeDOMReadyListener(onDOMReady);
    }
    function createDarkReaderInstanceMarker() {
        const metaElement = document.createElement('meta');
        metaElement.name = 'darkreader';
        metaElement.content = INSTANCE_ID;
        document.head.appendChild(metaElement);
    }
    function isAnotherDarkReaderInstanceActive() {
        const meta = document.querySelector('meta[name="darkreader"]');
        if (meta) {
            if (meta.content !== INSTANCE_ID) {
                return true;
            }
            return false;
        }
        else {
            createDarkReaderInstanceMarker();
            return false;
        }
    }
    function createOrUpdateDynamicTheme(filterConfig, dynamicThemeFixes, iframe) {
        filter = filterConfig;
        fixes = dynamicThemeFixes;
        isIFrame = iframe;
        if (document.head) {
            if (isAnotherDarkReaderInstanceActive()) {
                return;
            }
            createThemeAndWatchForUpdates();
        }
        else {
            if (!isFirefox) {
                const fallbackStyle = createOrUpdateStyle('darkreader--fallback');
                document.documentElement.appendChild(fallbackStyle);
                fallbackStyle.textContent = getModifiedFallbackStyle(filter, { strict: true });
            }
            const headObserver = new MutationObserver(() => {
                if (document.head) {
                    headObserver.disconnect();
                    if (isAnotherDarkReaderInstanceActive()) {
                        removeDynamicTheme();
                        return;
                    }
                    createThemeAndWatchForUpdates();
                }
            });
            headObserver.observe(document, { childList: true, subtree: true });
        }
    }
    function removeProxy() {
        document.dispatchEvent(new CustomEvent('__darkreader__cleanUp'));
        removeNode(document.head.querySelector('.darkreader--proxy'));
    }
    function removeDynamicTheme() {
        cleanDynamicThemeCache();
        removeNode(document.querySelector('.darkreader--fallback'));
        if (document.head) {
            restoreMetaThemeColor();
            removeNode(document.head.querySelector('.darkreader--user-agent'));
            removeNode(document.head.querySelector('.darkreader--text'));
            removeNode(document.head.querySelector('.darkreader--invert'));
            removeNode(document.head.querySelector('.darkreader--inline'));
            removeNode(document.head.querySelector('.darkreader--override'));
            removeNode(document.head.querySelector('meta[name="darkreader"]'));
            removeProxy();
        }
        shadowRootsWithOverrides.forEach((root) => {
            removeNode(root.querySelector('.darkreader--inline'));
            removeNode(root.querySelector('.darkreader--override'));
        });
        shadowRootsWithOverrides.clear();
        forEach(styleManagers.keys(), (el) => removeManager(el));
        forEach(document.querySelectorAll('.darkreader'), removeNode);
        adoptedStyleManagers.forEach((manager) => {
            manager.destroy();
        });
        adoptedStyleManagers.splice(0);
    }
    function cleanDynamicThemeCache() {
        stopWatchingForDocumentVisibility();
        cancelRendering();
        stopWatchingForUpdates();
        cleanModificationCache();
    }

    function createOrUpdateStyle$1(css) {
        createNodeAsap({
            selectNode: () => document.getElementById('dark-reader-style'),
            createNode: (target) => {
                const style = document.createElement('style');
                style.id = 'dark-reader-style';
                style.type = 'text/css';
                style.textContent = css;
                target.appendChild(style);
            }
            updateNode: (existing) => {
                if (css.replace(/^\s+/gm, '') !== existing.textContent.replace(/^\s+/gm, '')) {
                    existing.textContent = css;
                }
            }
            selectTarget: () => document.head,
            createTarget: () => {
                const head = document.createElement('head');
                document.documentElement.insertBefore(head, document.documentElement.firstElementChild);
                return head;
            }
            isTargetMutation: (mutation) => mutation.target.nodeName.toLowerCase() === 'head',
        });
    }
    function removeStyle() {
        removeNode(document.getElementById('dark-reader-style'));
    }

    function getDynamicThemeFixesFor(url, frameURL, fixes, enabledForPDF) {
        if (fixes.length === 0 || fixes[0].url[0] !== '*') {
            return null;
        }
        const common = {
            url: fixes[0].url,
            invert: fixes[0].invert || [],
            css: fixes[0].css || [],
            ignoreInlineStyle: fixes[0].ignoreInlineStyle || [],
            ignoreImageAnalysis: fixes[0].ignoreImageAnalysis || [],
        };
        if (enabledForPDF) {
            common.invert = common.invert.concat('embed[type="application/pdf"]');
        }
        const sortedBySpecificity = fixes
            .slice(1)
            .map((theme) => {
            return {
                specificity: isURLInList(frameURL || url, theme.url) ? theme.url[0].length : 0,
                theme
            };
        })
            .filter(({ specificity }) => specificity > 0)
            .sort((a, b) => b.specificity - a.specificity);
        if (sortedBySpecificity.length === 0) {
            return common;
        }
        const match = sortedBySpecificity[0].theme;
        return {
            url: match.url,
            invert: common.invert.concat(match.invert || []),
            css: [common.css, match.css].filter((s) => s).join('\n'),
            ignoreInlineStyle: common.ignoreInlineStyle.concat(match.ignoreInlineStyle || []),
            ignoreImageAnalysis: common.ignoreImageAnalysis.concat(match.ignoreImageAnalysis || []),
        };
    }

    var dynamicFixes = [
        {
            "url": [
                "*"
            ],
            "invert": [
                ".jfk-bubble.gtx-bubble",
                ".captcheck_answer_label > input + img"
            ],
            "css": ".vimvixen-hint {\n    background-color: ${#ffd76e} !important;\n    border-color: ${#c59d00} !important;\n    color: ${#302505} !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}"
        },
        {
            "url": [
                "*.stackexchange.com",
                "askubuntu.com",
                "mathoverflow.net",
                "serverfault.com",
                "stackapps.com",
                "stackexchange.com",
                "stackoverflow.com",
                "superuser.com"
            ],
            "invert": [
                "._glyph",
                ".favicon-mathoverflow",
                ".favicon-mathoverflowmeta",
                ".favicon-stackoverflowmeta",
                ".h-auto[alt=\"Academia\"]",
                ".h-auto[alt=\"Anime & Manga\"]",
                ".h-auto[alt=\"Ask Different\"]",
                ".h-auto[alt=\"Aviation\"]",
                ".h-auto[alt=\"Code Review\"]",
                ".h-auto[alt=\"Electrical Engineering\"]",
                ".h-auto[alt=\"English Language Learners\"]",
                ".h-auto[alt=\"Japanese Language\"]",
                ".h-auto[alt=\"MathOverflow\"]",
                ".h-auto[alt=\"Mathematics\"]",
                ".h-auto[alt=\"Server Fault\"]",
                ".h-auto[alt=\"Skeptics\"]",
                ".h-auto[alt=\"Software Engineering\"]",
                ".h-auto[alt=\"Stack Apps\"]",
                ".h-auto[alt=\"Super User\"]",
                ".h-auto[alt=\"The Workplace\"]",
                ".h-auto[alt=\"Theoretical Computer Science\"]",
                ".h-auto[alt=\"Unix & Linux\"]",
                ".h-auto[alt=\"Web Applications\"]",
                "a.js-gps-track::before",
                "img[alt=\"The Stack Exchange Network\"]"
            ],
            "css": "body {\n    background-image: none !important;\n}\n.profile-cards--graph {\n    background-image: repeating-linear-gradient(0deg, transparent, transparent 13px, ${#e4e6e8} -13px, ${#e4e6e8} 21px) !important;\n}\n.c-pointer {\n    color: grey;\n}\n.js-accepted-answer-indicator.fc-green-500 {\n    color: var(--green) !important;\n}"
        },
        {
            "url": [
                "01net.com"
            ],
            "css": "html, body {\n    color: ${#090702} !important;\n}"
        },
        {
            "url": [
                "10fastfingers.com"
            ],
            "css": "#speedtest-main .hide-time {\n    color: transparent !important;\n}\n#inputfield {\n    background: var(--darkreader-neutral-background) !important;\n    color: var(--darkreader-neutral-text) !important;\n}\nbody,\n.container-modified > .row,\n#practice-main,\n#top1000-index-container,\n#text-practice,\n#content-bg {\n    background: var(--darkreader-neutral-background) !important;\n}\n#main-content-trenner {\n    background: var(--darkreader-neutral-background) !important;\n    border-bottom: 1px solid rgb(151, 141, 127) !important;\n}"
        },
        {
            "url": [
                "163.com"
            ],
            "invert": [
                ".m-playbar .wrap .btns"
            ],
            "css": "body,\n.s-bg,\n.g-bd1,\n.n-bilst,\n.m-playbar .bg {\n   background: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "1917.com"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "2gis.*"
            ],
            "invert": [
                "#map"
            ]
        },
        {
            "url": [
                "3.basecamp.com"
            ],
            "css": "body, .nav__main {\n    background-color: ${white};\n}\n@media screen and (min-width: 768px){\n    .panel--perma, .panel--project {\n        box-shadow: rgba(0, 0, 0, 0.05) 0px -1px 10px, rgba(0, 0, 0, 0.1) 0px 1px 4px, rgb(24, 26, 27) 0px 10px 30px;\n    }\n}"
        },
        {
            "url": [
                "4pda.ru"
            ],
            "css": ".catend {\n    background: ${#e8e8e8} !important;\n}\ndiv.description > span {\n    display: none;\n}"
        },
        {
            "url": [
                "abandonia.com"
            ],
            "css": ".alt1G2 {\n    background-image: none !important;\n}\n.alt2G2 {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "abiturma.de"
            ],
            "invert": [
                "div.formula",
                "amp-img.latex-inline"
            ]
        },
        {
            "url": [
                "ableton.com"
            ],
            "invert": [
                ".main-footer__basics__logo",
                ".main-footer__secondary__signature__logo"
            ]
        },
        {
            "url": [
                "academic.microsoft.com"
            ],
            "invert": [
                ".loader"
            ],
            "css": ".legend > rect:nth-child(1) {\n    fill: unset !important;\n}"
        },
        {
            "url": [
                "accounts.google.com"
            ],
            "invert": [
                "img[src$=\"signin_tapyes.gif\"]"
            ],
            "css": "#countryList div[role=\"option\"][data-value] > div > div > div[style] {\n    background-image: url('//ssl.gstatic.com/i18n/flags/48x32/nobevel/66bdb7a1bbbdbf86a67de382fac49ecc/flags.png') !important;\n}"
        },
        {
            "url": [
                "accounts.magister.net"
            ],
            "css": ".splash-container {\n    z-index: 0 !important;\n}"
        },
        {
            "url": [
                "acer.com"
            ],
            "invert": [
                ".firstHeader .logos"
            ],
            "css": ".contSectionBen img {\n    filter: brightness(50%) sepia(40%) !important;\n}\n.contSectionBen .textOverBen {\n    position: inherit !important;\n}"
        },
        {
            "url": [
                "addons.mozilla.org"
            ],
            "ignoreImageAnalysis": [
                ".Icon-youtube",
                "span.Permission-description:before"
            ]
        },
        {
            "url": [
                "adguard.com"
            ],
            "invert": [
                "a.header__logo",
                "svg.reviews__icon-topic",
                ".article__section--list-ico .md__list .md__img",
                ".article__content--title-ico .article__section .md__title .md__img",
                ".p-header-logo.p-header-logo--image img"
            ]
        },
        {
            "url": [
                "ai2.appinventor.mit.edu"
            ],
            "css": ".blocklyDraggable text {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "aiming.pro"
            ],
            "invert": [
                "#left_side_bar > div.logo > a > img"
            ]
        },
        {
            "url": [
                "akademy.kde.org",
                "dot.kde.org",
                "forum.kde.org"
            ],
            "css": "body {\n    background: ${rgb(225, 227, 228)} !important;\n}"
        },
        {
            "url": [
                "akinator.com"
            ],
            "invert": [
                ".bubble",
                ".bubble-body"
            ],
            "css": ".bubble {\n    background-color: ${black} !important;\n    color: ${white} !important;\n}\n.bubble-body {\n    background-color: ${white} !important;\n    color: ${black} !important;\n}\n.question-number {\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "alexpage.de"
            ],
            "css": "#page {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "alipay.com"
            ],
            "invert": [
                ".alipay-logo",
                "#J_logoHomeUrl",
                ".global-logo"
            ],
            "css": ".qrcode-detail-img {\n    background-color: white !important;\n}"
        },
        {
            "url": [
                "aljazeera.com"
            ],
            "invert": [
                "#site-logo > img",
                ".navbar-brand > img",
                "#navbar-hamburger-mobile"
            ]
        },
        {
            "url": [
                "allegro.pl"
            ],
            "css": "#opbox-listing--base i {\n    background-size: 100% 100% !important;\n}"
        },
        {
            "url": [
                "amap.com"
            ],
            "invert": [
                ".amap-info",
                ".amap-menu",
                ".logo-img",
                "#subway-svg",
                "#themap",
                ".title01-logo > a > img"
            ]
        },
        {
            "url": [
                "amazon.*",
                "amazon.*.*"
            ],
            "invert": [
                "#banner-image",
                "#ordersContainer .a-box.order-attributes img",
                "div.a-section.vse-lb-video-metadata",
                "div.vse-video-content",
                ".a-icon-arrow.a-icon-small.arrow-icon",
                ".a-icon-close",
                ".a-icon-extender-expand",
                ".a-icon-popover"
            ],
            "css": ".banner-border {\n    background-image: none !important;\n    background-color: ${white} !important;\n}\n\ndiv.milestone.notReached .milestone-marker::before {\n    border-color: var(--darkreader-neutral-text);\n}\n\nspan.milestone-bar {\n    z-index: 0;\n}\n\nspan.milestone-bar_foreground {\n    background-color: #4DC2B4;\n}\n\nspan.milestone-bar_background {\n    background-image: linear-gradient(var(--darkreader-neutral-text) 40%, #181a1b00 0px);\n}\n\nimg {\n    border-radius: 5% !important;\n}"
        },
        {
            "url": [
                "amazon.cn"
            ],
            "invert": [
                "#nav-logo"
            ],
            "css": "#nav-main,\n.nav-search-scope {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "androidcentral.com"
            ],
            "css": ".lazy-loaded {\n    mix-blend-mode: normal !important;\n}"
        },
        {
            "url": [
                "angrymetalguy.com"
            ],
            "invert": [
                ".plbrand"
            ],
            "css": ".thepage {\n    background-color: ${white} !important;\n}\n.content-pad {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "anilist.co"
            ],
            "css": ":root {\n    --color-background: 39,44,56 !important;\n    --color-foreground: 31,35,45 !important;\n    --color-foreground-grey: 25,29,38 !important;\n    --color-foreground-grey-dark: 16,20,25 !important;\n    --color-foreground-blue: 25,29,38 !important;\n    --color-foreground-blue-dark: 19,23,29 !important;\n    --color-text: 159,173,189 !important;\n    --color-text-light: 129,140,153 !important;\n    --color-text-lighter: 133,150,165 !important;\n}"
        },
        {
            "url": [
                "answers.opencv.org"
            ],
            "css": "#header,\nbody,\n#question-list,\n.short-summary,\n#ground {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "answers.unity.com"
            ],
            "ignoreImageAnalysis": [
                "header.section-header div.shard:before"
            ]
        },
        {
            "url": [
                "api.kde.org"
            ],
            "invert": [
                ".center",
                ".image"
            ],
            "css": ".memdoc, .memproto {\n    background-image: initial !important;\n}"
        },
        {
            "url": [
                "app.codesignal.com"
            ],
            "css": ".monaco-editor .cursor {\n   background-color: var(--darkreader-selection-text) !important;\n}"
        },
        {
            "url": [
                "app.datadoghq.com"
            ],
            "invert": [
                ".HostMap-canvas"
            ],
            "css": ".log-dt-event.active, .log-dt-event.active:hover, .log-dt-event:hover {\n    background-color: rgb(37, 45, 58) !important;\n}\nsvg text.time_cursor {\n    fill: ${black} !important;\n}"
        },
        {
            "url": [
                "app.grammarly.com"
            ],
            "css": "[class*=\"-alerts-markSelectedHigh\"], span[class*=\"markSelectedFocused\"] {\n    color: rgb(14, 16, 26) !important;\n}"
        },
        {
            "url": [
                "app.mysms.com"
            ],
            "css": ".message a {\n     color: grey;\n}"
        },
        {
            "url": [
                "app.timelyapp.com"
            ],
            "invert": [
                ".Clock__clock_css_icon___LfBr6",
                ".Clock__stopwatch___2G-CB"
            ],
            "css": ".Day__container___1Fpnl.Day__showBackground___3CXnw {\n     background-image: none;\n}"
        },
        {
            "url": [
                "app.youneedabudget.com"
            ],
            "css": "[data-darkreader-inline-fill] {\n    fill: ${black} !important;\n}"
        },
        {
            "url": [
                "arstechnica.com"
            ],
            "css": ".listing, .video-thumbnail {\n    background-blend-mode: initial !important;\n}\n.article-single figure img {\n    mix-blend-mode: initial !important;\n}"
        },
        {
            "url": [
                "artofproblemsolving.com"
            ],
            "invert": [
                ".latex",
                ".latexcenter"
            ]
        },
        {
            "url": [
                "arxiv.org"
            ],
            "css": ".abstract {\n     background-color: transparent !important;\n}"
        },
        {
            "url": [
                "asana.com"
            ],
            "invert": [
                ".DatePickerCalendarDate--today .DatePickerCalendarDate-button::after"
            ]
        },
        {
            "url": [
                "asus.com"
            ],
            "invert": [
                "span.mobile-menu-toggle.mobile",
                "em#searchopen.icon-search",
                "#af-header .af-inner .logo"
            ],
            "ignoreImageAnalysis": [
                "#af-header .af-inner .logo",
                "li.nav-Rog a"
            ]
        },
        {
            "url": [
                "atcoder.jp"
            ],
            "css": "#fixed-server-timer {\n    color: #333;\n}"
        },
        {
            "url": [
                "atlas.herzen.spb.ru",
                "guide.herzen.spb.ru",
                "job.herzen.spb.ru"
            ],
            "invert": [
                "img[src=\"/images/logo.png\"]",
                "hr"
            ],
            "css": "body, .body, table, tbody, tr, td, .corner_bottom {\n    background: none !important;\n}"
        },
        {
            "url": [
                "atlassian.net"
            ],
            "css": "#jira-issue-header, #jira-issue-header-actions {\n    background-color: transparent !important;\n}"
        },
        {
            "url": [
                "avito.ru"
            ],
            "invert": [
                ".logo-logo-3ugdk",
                ".logo-logo-2YITg",
                ".item-extended-phone",
                ".item-price-old::before",
                ".contacts-phone-3KtSI",
                ".button-content-phone_size_l-1O5VB",
                "._39EVKDP-9p1BREJQ3fhILl._2sPEvPi-1aWpcq1ggVph1C._4wLX_6jxKYoWRyE1U1WcZ"
            ]
        },
        {
            "url": [
                "aws.amazon.com"
            ],
            "invert": [
                "a.lb-trigger",
                ".img-wrapper",
                "img[alt^=\"WEB_FreeTier\"]",
                ".lb-is-lazyloaded",
                ".lb-none-v-margin.lb-img"
            ],
            "css": ".header-background {\n  fill: none !important;\n}"
        },
        {
            "url": [
                "bab.la"
            ],
            "invert": [
                ".logo-flash"
            ]
        },
        {
            "url": [
                "baike.baidu.com"
            ],
            "invert": [
                ".formula"
            ]
        },
        {
            "url": [
                "bbb*.",
                "demo*.bigbluebutton.org"
            ],
            "css": "div[class*=\"scrollableList\"] {\n    background: none;\n}"
        },
        {
            "url": [
                "bbc.co.uk/weather",
                "bbc.com/weather"
            ],
            "invert": [
                ".orb-nav-section.orb-nav-blocks",
                ".orb-icon.orb-icon-arrow"
            ],
            "css": ".wr-icon-weather-type__svg-background,\n.wr-icon-rain__svg-background,\n.wr-icon-wind-direction__svg-background,\n.wr-icon-gel__svg-background {\n    opacity: 0% !important;\n}\n\n.wr-value--windspeed {\n    color: ${#dad7d2} !important;\n}\n\n.wr-c-environmental-data__icon-text {\n    color: ${#dcd9d4} !important;\n}"
        },
        {
            "url": [
                "bbc.com/news",
                "bbc.com/sport",
                "bbc.com/travel",
                "bbc.com/capital",
                "bbc.com/autos",
                "bbc.com/culture",
                "bbc.com/future",
                "bbc.com/sounds",
                "bbc.com/food",
                "bbc.com/bitesize",
                "bbc.com/earth"
            ],
            "invert": [
                ".orb-nav-section.orb-nav-blocks",
                ".orb-icon.orb-icon-arrow"
            ]
        },
        {
            "url": [
                "bbs.chinauos.com",
                "bbs.deepin.org"
            ],
            "invert": [
                ".post_tip"
            ],
            "css": "div[style^=\"all: initial;\"] {\n    all: unset !important;\n}"
        },
        {
            "url": [
                "bbs.thinkpad.com",
                "club.lenovo.com.cn"
            ],
            "css": "body[style] {\n    box-shadow: inset 0px 0px 0px 9999px var(--darkreader-neutral-background);\n}"
        },
        {
            "url": [
                "bestbuy.ca"
            ],
            "invert": [
                ".centerContainer",
                "[class^=\"facetName\"]",
                "[class^=\"title\"]",
                "[class^=\"sortLabel\"]",
                "[class^=\"headerText\"]",
                "[class^=\"subTitle\"]"
            ],
            "css": "div[class*=\"backgroundContainer\"] {\n    z-index: 0 !important;\n}\n\nbody {\n    background-image: initial; !important;\n}"
        },
        {
            "url": [
                "beta.protonmail.com"
            ],
            "css": ".label-stack-item {\n    background-color: var(--color,currentColor) !important;\n}\n.items-column-list-inner {\n    border: solid var(--bordercolor-input) !important;\n}"
        },
        {
            "url": [
                "bfi.org.uk"
            ],
            "invert": [
                "img[src$=\"bfi_logo_transp.png\"]",
                "img[src$=\"national-lottery-logo-color.png\"]",
                "img[src*=\"sight-and-sound-logo-280x69.png\"]"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "bgp.he.net"
            ],
            "invert": [
                "img[src=\"/helogo.gif\"]",
                "img[src*=\"chart.googleapis.com\"]",
                "img[src^=\"/graphs/\"]"
            ]
        },
        {
            "url": [
                "bigocheatsheet.com"
            ],
            "invert": [
                ".gray"
            ],
            "css": ".green,\n.orange,\n.yellow,\n.yellow-green {\n    color: black !important;\n}"
        },
        {
            "url": [
                "bing.com"
            ],
            "invert": [
                "canvas[id^=\"Microsoft.Maps.Imagery.Road\"]"
            ],
            "css": ".b_searchboxForm {\n    box-shadow: ${rgba(0, 0, 0, 0.1)} 0px 0px 0px 1px !important;\n}\n.b_searchboxForm:hover {\n    box-shadow: ${rgba(0, 0, 0, 0.1)} 0px 0px 0px 1px !important;\n}\n.b_focus .b_searchboxForm {\n    box-shadow: ${rgba(0, 0, 0, 0.1)} 0px 0px 0px 1px !important;\n}\n#sw_as #sa_ul:not(:empty) {\n    box-shadow: ${rgba(0, 0, 0, 0.1)} 0px 0px 0px 1px !important;\n}\n#b_results > li.b_ans.b_topborder, #b_results > li.b_ans.b_topborder.b_tophb.b_topshad {\n    box-shadow: ${rgba(13, 13, 13, 0.05)} 0px 0px 0px 1px !important;\n}"
        },
        {
            "url": [
                "bitbucket.org"
            ],
            "invert": [
                "a[href=\"/product\"]",
                ".registration-hero .form-prompt"
            ],
            "css": "span[label=\"Comment\"] > span {\n    color: var(--darkreader-neutral-text) !important;\n}\nspan.code {\n    background-color: rgba(255, 247, 218, 0.08) !important;\n}"
        },
        {
            "url": [
                "bitwit.tech"
            ],
            "css": ".svg-primary {\n    fill: #375D69 !important;\n}\n.svg-primary-light {\n    fill: #4A7F8F !important;\n}\n.svg-primary-dark {\n    fill: #28444D !important;\n}\n.svg-secondary {\n    fill: #B88399 !important;\n}\n.svg-secondary-light {\n    fill: #E8A9C4 !important;\n}\n.svg-secondary-dark {\n    fill: #825F6E !important;\n}\n.svg-light {\n    fill: #ADCED9 !important;\n}\n.svg-outline {\n    fill: none !important;\n    stroke: #000000 !important;\n}\n.svg-primary-outline {\n    fill: none !important;\n    stroke: #ADCED9 !important;\n}\n.svg-secondary-outline {\n    fill: none !important;\n    stroke: #375D69 !important;\n}\n.theme-light {\n    display: none !important;\n}\n.theme-dark {\n    display: none !important;\n}\n.theme-darkreader {\n    display: block !important;\n}"
        },
        {
            "url": [
                "blog.cloudflare.com"
            ],
            "css": "body#main-body {\n    color: ${black} !important;\n    background-color: ${white} !important;\n}\n.dn {\n    color: ${white} !important;\n}\n#nav {\n    background-color: ${white} !important;\n}\nmain#post {\n    background-color: ${white} !important;\n}\narticle.post-full {\n    background-color: ${white} !important;\n}\narticle p {\n    color: ${gray} !important;\n}\ncode {\n    color: ${black} !important;\n}\nnav.pagination {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "blog.doist.com"
            ],
            "invert": [
                ".db-header__logo-img"
            ]
        },
        {
            "url": [
                "blogger.com"
            ],
            "invert": [
                ".gb_ua",
                ".feedflare"
            ]
        },
        {
            "url": [
                "blogs.windows.com"
            ],
            "css": ".c-logo .c-image {\n    background: ${white} !important;\n}"
        },
        {
            "url": [
                "blueberryroasters.pl"
            ],
            "invert": [
                "div#logo"
            ]
        },
        {
            "url": [
                "bol.com"
            ],
            "css": ".skeleton-image[loaded] .skeleton-image__img {\n    mix-blend-mode: normal !important;\n}"
        },
        {
            "url": [
                "booking.com"
            ],
            "invert": [
                ".bui-calendar__control",
                ".-iconset-close",
                ".-iconset-navarrow_left",
                ".-iconset-navarrow_right",
                ".sort_more_options__button",
                ".mb-ico",
                ".-iconset-review_great",
                ".-iconset-review_poor",
                ".-iconset-chat_bubbles",
                ".location_section_icon",
                ".hp-date-picker-icon",
                ".-streamline-info_sign",
                ".-streamline-person",
                ".-streamline-chat_bubbles",
                ".hp-policies-calendar-icon",
                ".-iconset-moon_crescent"
            ]
        },
        {
            "url": [
                "boredpanda.com"
            ],
            "invert": [
                ".logotype"
            ]
        },
        {
            "url": [
                "br.de"
            ],
            "css": "article h4, article h3, article p, article .css-lip0i6, article h5, .asso-gtm, .css-18ckx31 {\n    color: ${#323232} !important;\n}\narticle, article section, article footer, .css-1fzo8jw, .css-efdc07, article .css-fhbsai, main h3, section.css-3copat section {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "brainly.com"
            ],
            "invert": [
                ".brn-rich-content > p > img"
            ]
        },
        {
            "url": [
                "brainly.pl"
            ],
            "invert": [
                "[id^=\"TexFormula\"]",
                "div.brn-qpage-next-answer-box__content > div > div > div img:not(.brn-qpage-next-attachments-viewer-image-preview__image)"
            ]
        },
        {
            "url": [
                "bugs.chromium.org"
            ],
            "css": "button[type=\"submit\"] {\n   border-color: var(--darkreader-neutral-text) !important;\n   border-left: var(--darkreader-neutral-text) solid 1px !important;\n}\n\ninput#searchq {\n   color: var(--darkreader-neutral-text) !important;\n   border-color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "caiyunapp.com"
            ],
            "invert": [
                "#icon_current",
                "#logo-name[src=\"/imgs/logo/logo-website.png\"]",
                "#map_canvas"
            ]
        },
        {
            "url": [
                "calendar.google.com"
            ],
            "css": "div[role=\"checkbox\"] > div > div > div {\n    border: 1px solid ${black} !important;\n}",
            "ignoreInlineStyle": [
                "div[role=\"checkbox\"]"
            ]
        },
        {
            "url": [
                "calibre-ebook.com"
            ],
            "ignoreImageAnalysis": [
                ".tooltip",
                "#content-wrapper"
            ]
        },
        {
            "url": [
                "carmax.com"
            ],
            "css": ".recall__placeholder,\n.vehicle-history__placeholder {\n    background-color: ${yellow} !important;\n}\n#recall .recall__header *,\n#recall .recall--link span {\n    color: #2a343d !important;\n}\n#recall svg,\n.vehicle-history__placeholder .vehicle-history a svg {\n    fill: #053361 !important;\n}\n#recall a,\n.vehicle-history__placeholder .vehicle-history a {\n    color: #004487 !important;\n}"
        },
        {
            "url": [
                "castbox.fm"
            ],
            "invert": [
                ".nav-item.right.msg",
                ".nav-item.right.upload",
                ".nav-item.right.search",
                ".userNav-img[src=\"https://s3.castbox.fm/webstatic/images/userIcon.06c408dc.png\"]",
                ".heart",
                ".playbackRate.timing.icon"
            ]
        },
        {
            "url": [
                "cdp.contentdelivery.nu"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "cheapshark.com"
            ],
            "css": ".header {\n    border-top: 10px solid #000 !important;\n}"
        },
        {
            "url": [
                "chess.com"
            ],
            "ignoreImageAnalysis": [
                ".piece"
            ]
        },
        {
            "url": [
                "chilkatsoft.com"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "chinadigitaltimes.net"
            ],
            "invert": [
                ".show-menu-button span"
            ],
            "css": "#main-header-wrapper {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "chinauos.com"
            ],
            "invert": [
                ".brand"
            ],
            "css": ".choose {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "chtoes.li"
            ],
            "invert": [
                ".illustration",
                ".menu-page",
                ".menu-item"
            ]
        },
        {
            "url": [
                "citymapper.com"
            ],
            "invert": [
                "#map"
            ]
        },
        {
            "url": [
                "classroom.google.com"
            ],
            "invert": [
                "img[src$=\"dark_create_class_arrow.svg\"]"
            ]
        },
        {
            "url": [
                "cleantechnica.com"
            ],
            "css": "body {\n    background-image: none !important;\n\tbackground-color: #1d1e1f !important;\n}"
        },
        {
            "url": [
                "clever.com"
            ],
            "css": "img[alt=\"i-Ready icon\"], img[alt=\"Google Meet icon\"], img[alt=\"Google icon\"] {\n    background-color: white !important;\n}"
        },
        {
            "url": [
                "cloud.databricks.com",
                "pages.databricks.com",
                "*.azuredatabricks.net"
            ],
            "invert": [
                ".figure",
                "#sparkui-iframe-body #plan-viz-graph svg g.cluster rect",
                "#sparkui-iframe-body #plan-viz-graph svg g.node rect"
            ],
            "css": "text {\n    fill: ${black};\n}\n\n.cm-string {\n    color: rgb(132, 179, 235) !important;\n}\n\n.cm-keyword {\n    color: rgb(232, 121, 172) !important;\n}\n\n.cm-variable-2 {\n    color: rgb(97, 215, 255) !important;\n}\n\nli.CodeMirror-hint {\n    font-family: Source Code Pro, Menlo, monospace;\n}\n\nspan[role=\"presentation\"] {\n    color: ${black} !important;\n}\n\n.CodeMirror-cursor {\n    border-left-color: ${black} !important;\n}\n\n.ansiout {\n    color: ${rgb(85, 85, 85)} !important;\n}"
        },
        {
            "url": [
                "code.qt.io"
            ],
            "invert": [
                "div#cgit",
                "td[class=\"logo\"]",
                "select",
                "input"
            ]
        },
        {
            "url": [
                "code.visualstudio.com"
            ],
            "css": ".home.linux .jumbotron .screenshot {\n background-image:url(\"/assets/home/home-screenshot-linux.png\");\n padding-bottom:82.65802%\n}\n@media only screen and (min-width: 1200px) {\n .home.linux .jumbotron .screenshot {\n  background-image:url(\"/assets/home/home-screenshot-linux-lg.png\");\n  padding-bottom:68%\n }"
        },
        {
            "url": [
                "codecademy.com"
            ],
            "invert": [
                ".CodeMirror-cursors",
                ".CodeMirror-selected",
                "span[class^=\"burger\"]"
            ]
        },
        {
            "url": [
                "codeforces.com"
            ],
            "invert": [
                ".roundbox-lt",
                ".roundbox-rt",
                ".roundbox-lb",
                ".roundbox-rb",
                ".delete-resource-link",
                "a.contestParticipantCountLinkMargin > img"
            ]
        },
        {
            "url": [
                "colorhunt.co"
            ],
            "ignoreInlineStyle": [
                ".palette > div"
            ]
        },
        {
            "url": [
                "community.ntppool.org"
            ],
            "invert": [
                "#site-logo"
            ]
        },
        {
            "url": [
                "compass.pressekompass.net"
            ],
            "invert": [
                ".logo-holder .brand-logo"
            ],
            "ignoreInlineStyle": [
                "text"
            ]
        },
        {
            "url": [
                "computerhope.com"
            ],
            "invert": [
                "#text-tool > p > img"
            ]
        },
        {
            "url": [
                "confectioneryproduction.com"
            ],
            "invert": [
                "#mainLogo img"
            ]
        },
        {
            "url": [
                "confluence.*"
            ],
            "invert": [
                ".gliffy-text-with-shape-parent-primary",
                ".gliffy-text-with-shape-parent-secondary",
                ".gliffy-text-with-shape-parent-tertiary",
                ".gliffy-text-with-shape-parent-highlight"
            ],
            "css": ".geDiagramContainer rect,\n.geDiagramContainer path {\n    filter: brightness(60%);\n}"
        },
        {
            "url": [
                "cookiepedia.co.uk"
            ],
            "invert": [
                ".main-logo",
                ".footer-logo"
            ]
        },
        {
            "url": [
                "coolblue.be",
                "coolblue.nl",
                "hotorangemedia.nl"
            ],
            "ignoreInlineStyle": [
                ".header__logo-image > path"
            ]
        },
        {
            "url": [
                "coolors.co"
            ],
            "css": ".generator_color {\n    color: #fff !important;\n}\n.generator_color.is-light {\n    color: #000 !important;\n}",
            "ignoreInlineStyle": [
                "#generator*"
            ]
        },
        {
            "url": [
                "coopgames.eu"
            ],
            "invert": [
                "img[alt=\"Online Co-Op\"]",
                "img[alt=\"Local Co-Op\"]",
                "img[title=\"PS2\"]",
                "img[title=\"PS3\"]",
                "img[title=\"PS4\"]",
                "img[title=\"PSP\"]",
                "img[title=\"PS Vita\"]",
                "img[title=\"DS\"]",
                "img[title=\"3DS\"]",
                "img[title=\"Switch\"]"
            ]
        },
        {
            "url": [
                "copitosystem.com"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "courses.fit.cvut.cz"
            ],
            "css": "body {\n    color: #909090;\n}\n\n.App.in-search {\n    background-color: #212121 !important;\n}\n\n.UserMenu .user-initials {\n    background-color: #616161 !important;\n}\n\n.CoursesItem .column-info > a:hover {\n    color: #58c1ffba;\n}\n\nheader {\n    background-color: #212121 !important;\n}\n\npre {\n    color: #a8a6ab\n}\n\n.header {\n    background: none;\n    border-bottom: 1px solid #676767;\n}\n\nmain img {\n    opacity: 0.8;\n}\n\na {\n    color: #58c1ffba\n}"
        },
        {
            "url": [
                "cplusplus.com"
            ],
            "css": "#I_mid, #I_top {\n    background-image: none;\n}\nimg[src$=\".png\"] {\n    background-color: white;\n}"
        },
        {
            "url": [
                "cqksy.cn"
            ],
            "invert": [
                "td[background=\"image/Index_QI_CenterBar.gif\"]"
            ],
            "css": "table {\n    background-color: var(--darkreader-neutral-background) !important;\n}\ntd[background=\"image/Index_QI_CenterBar.gif\"],\ntd[background=\"image/Index_QI_CenterBar.gif\"] a {\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "cs61a.org"
            ],
            "css": "table#calendar td {\n    border-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "cynkra.com"
            ],
            "invert": [
                ".btn-outline-dark",
                ".shadow",
                ".navbar-dark .navbar-brand",
                ".cynkra-logo-font"
            ],
            "css": ".btn-outline-secondary {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "daily.afisha.ru"
            ],
            "invert": [
                ".sprite-logo-daily",
                ".headline__open",
                ".search-icon",
                ".sprite-search-black-26",
                "mark"
            ]
        },
        {
            "url": [
                "dailydot.com"
            ],
            "invert": [
                "h1.u-about-pitch"
            ],
            "css": "svg.main-logo.inline-flex g g[fill=\"#110133\"] {\n    --darkreader-inline-fill: ${#110133} !important;\n}"
        },
        {
            "url": [
                "dailywritingtips.com"
            ],
            "css": "blockquote {\n    z-index: 0 !important;\n}"
        },
        {
            "url": [
                "darcs.net"
            ],
            "invert": [
                "#header > a > img"
            ]
        },
        {
            "url": [
                "darksky.net"
            ],
            "invert": [
                ".currentLocationButton",
                ".searchButton",
                "span[class^=\"skycon swip\"]",
                "#right-arrow",
                "#left-arrow"
            ]
        },
        {
            "url": [
                "datacamp.com"
            ],
            "css": "video#vjs_video_3_html5_api.vjs-tech {\n    transform: translate(0px, 0px) !important;\n    background-color: rgb(175, 175, 175, 0.5);\n}"
        },
        {
            "url": [
                "daum.net"
            ],
            "css": ".txt_pctop,\n.bg_login {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "debian.org"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "debijbel.nl"
            ],
            "invert": [
                ".siteLogo",
                ".filter-item__link > img"
            ]
        },
        {
            "url": [
                "decathlon.pl"
            ],
            "invert": [
                ".dkt_logo",
                ".benefit-icon"
            ],
            "ignoreImageAnalysis": [
                "*"
            ]
        },
        {
            "url": [
                "deccanchronicle.com"
            ],
            "invert": [
                "img[src$=\"logo.png\"]"
            ]
        },
        {
            "url": [
                "deepl.com"
            ],
            "invert": [
                ".dl_ad_pro__features_item::before"
            ]
        },
        {
            "url": [
                "deeplearningbook.org"
            ],
            "invert": [
                ".opened > img[src]"
            ],
            "css": "body {\n    background-color: transparent !important;\n}\n\n#page-container {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "deezer.com"
            ],
            "css": ".slider-track .gradient-default {\n    background-image: linear-gradient(1deg, var(--color-dark-grey-800) 13%, var(--color-white));\n}"
        },
        {
            "url": [
                "dennisbareis.com"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "deno.land"
            ],
            "invert": [
                "img[src=\"/logo.svg\"]"
            ]
        },
        {
            "url": [
                "designobserver.com"
            ],
            "invert": [
                ".dologo"
            ]
        },
        {
            "url": [
                "desmos.com"
            ],
            "invert": [
                ".dcg-grapher"
            ]
        },
        {
            "url": [
                "dev.dota2.com"
            ],
            "css": ".navtabs li a.navtab:hover,\n.navtabs li.selected a.navtab {\n    color: black !important;\n}"
        },
        {
            "url": [
                "dev.to"
            ],
            "invert": [
                "img[src$=\".svg\"]"
            ],
            "css": "body, h1, h2, h3,\nh4, h5, h6, a,\n.content-classification-text {\n    color: #e8e6e3 !important;\n}"
        },
        {
            "url": [
                "developer.chrome.com"
            ],
            "css": "mark, pre b {\n    background-color: ${yellow} !important;\n}"
        },
        {
            "url": [
                "developer.mozilla.org"
            ],
            "invert": [
                "mark",
                ".icon-thumbs-down-alt",
                ".bc-head-icon-edge::before",
                ".last-modified::before",
                ".newsletter-hide > svg"
            ]
        },
        {
            "url": [
                "dianping.com"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "dict.cc"
            ],
            "css": "#langbar {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "dictionary.cambridge.org"
            ],
            "invert": [
                ".cb.hao.lpt-2",
                ".cb.hv-2.lmr-10"
            ]
        },
        {
            "url": [
                "digg.com"
            ],
            "css": ".digg-story__title-link {\n    color: ${black} !important;\n}\n.digg-story__description {\n    color: ${black} !important;\n}"
        },
        {
            "url": [
                "discord.com"
            ],
            "invert": [
                "div[class^=\"botPermissions\"] > ul > li > div > div > span::after"
            ],
            "css": "div[class^=\"pill\"][class*=\"wrapper\"] > span[class^=\"item\"],\ndiv[class*=\"modeUnread\"] > div[class^=\"unread\"] {\n    background-color: var(--darkreader-neutral-text) !important;\n}\nnav[aria-label=\"Servers sidebar\"] foreignObject {\n    mask: none !important;\n    border-radius: 100% !important;\n    transition: all .5s;\n}\nnav[aria-label=\"Servers sidebar\"] foreignObject:hover {\n    border-radius: 30% !important;\n}\npath[class^=\"wavePath\"] {\n    fill: ${rgb(226, 224, 220)} !important;\n}"
        },
        {
            "url": [
                "discover.manjaro.org"
            ],
            "css": "html, body {\n    background-image: url(\"/static/images/tux.svg\") !important;\n    background-repeat: no-repeat !important;\n    background-position: bottom 0 left -12px !important;\n    background-size: 60px !important;\n    background-attachment: fixed !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}",
            "ignoreImageAnalysis": [
                "body"
            ]
        },
        {
            "url": [
                "ditu.baidu.com",
                "map.baidu.com"
            ],
            "invert": [
                ".BMap_contextMenu",
                ".BMap_simple_bubble_pop",
                ".c-title",
                ".icon",
                "#maps",
                "#mapType-wrapper",
                ".poidetail-widget-generalInfo",
                ".toolscontainer"
            ]
        },
        {
            "url": [
                "dlagentlemana.pl"
            ],
            "invert": [
                "div.f-grid-3.logo-column > a > img",
                "div.opineo-side-slider-widget > button",
                ".logo-bar img"
            ]
        },
        {
            "url": [
                "dmit.io"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "dndbeyond.com"
            ],
            "css": ".mon-stat-block,\n.mon-stat-block::before,\n.mon-stat-block::after,\nbody {\n     background-image: none !important;\n}\n.more-info::after,\n.details-container::after {\n     border-image: none !important;\n}"
        },
        {
            "url": [
                "dnslytics.com"
            ],
            "invert": [
                "img[src*=\"logo.png\"]"
            ]
        },
        {
            "url": [
                "docs.codacy.com"
            ],
            "invert": [
                "div.footer-logo > img[alt=\"Codacy\"]"
            ]
        },
        {
            "url": [
                "docs.google.com"
            ],
            "invert": [
                ".docs-icon",
                ".punch-filmstrip-controls-icon",
                "#docs-editor canvas",
                ".docs-homescreen-icon",
                ".kix-equation-toolbar-icon",
                ".kix-equation-toolbar-palette-icon",
                ".cell-input",
                ".formula-content",
                ".docs-instant-button-bubble-icon-container",
                ".docs-gm .docs-dialog .modal-dialog-title-close::after",
                ".docs-preview-palette-item",
                ".goog-menuitem-checkbox",
                ".goog-dimension-picker-unhighlighted",
                ".goog-dimension-picker-highlighted",
                "#docs-star",
                ".rs-role-icon",
                ".toggle-link-icon",
                ".link-management-drop-down-icon",
                ".vs-icon",
                ".vpc-icon",
                ".docs-analytics-img",
                ".share-butter-copy-icon",
                ".doc-previews-indicator-popover .docs-link-bubble-mime-icon",
                "img[src$=\"googlelogo_dark_clr_74x24px.svg\"]",
                ".exportUnderline",
                ".freebirdMaterialIconIconEl",
                ".quantumWizTogglePapercheckboxCheckMark",
                "#docs-titlebar-share-client-button .scb-button-icon:not([class*=\"white\"])",
                "body[itemtype*=\"PresentationObject\"] #docs-titlebar-share-client-button .scb-button-icon"
            ],
            "css": ".docs-preview-palette-item {\n    border: transparent !important\n}\n.cell-input {\n    background-color: ${black} !important;\n    color: ${white} !important;\n}\n.cell-input > span, .cell-input > font {\n    --darkreader-inline-color: ${white} !important;\n}\n.kix-cursor-caret {\n    border-color: ${black} !important;\n}\n.ia-invite-controls-area {\n    background-color: transparent !important\n}\n.docs-gm .docs-revisions-switch .apps-ui-material-slide-toggle-thumb {\n    background-color: rgb(43, 46, 48) !important;\n}\n.docs-gm .docs-revisions-switch.apps-ui-material-slide-toggle-container-checked .apps-ui-material-slide-toggle-thumb {\n    background-color: rgb(9, 64, 155) !important;\n}\n.docs-text-ui-cursor-blink {\n    fill: ${black} !important;\n}\n.ndfHFb-c4YZDc.ndfHFb-c4YZDc-i5oIFb .ndfHFb-c4YZDc-Bz112c:not([onclick]):not(:link):not(:visited) {\n    background-image: url('//ssl.gstatic.com/docs/common/viewer/v3/v-sprite26.svg') !important;\n}\n.docs-title-input-label:not([style*=\"pointer-events: auto\"]) > #docs-title-input-label-inner {\n    visibility: hidden !important;\n}"
        },
        {
            "url": [
                "dotaunderlords.gamepedia.com",
                "dota2.gamepedia.com"
            ],
            "css": "#right-navigation {\n    background-image: none !important;\n}",
            "ignoreImageAnalysis": [
                "#left-navigation"
            ]
        },
        {
            "url": [
                "downloads.khinsider.com"
            ],
            "css": "body {\n    background: none !important;\n}\n#faux {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "drive.google.com"
            ],
            "invert": [
                "img[src$=\"google_gsuite\"]",
                "div[role=\"menuitem\"] svg"
            ],
            "css": "div[role=\"toolbar\"] div[role=\"button\"] > div[class*='-']:not([onclick]):not(:link):not(:visited):not([style*=\"background-image\"]):first-child,\ndiv[role=\"toolbar\"] div[role=\"button\"] > div[class*='-']:not([onclick]):not(:link):not(:visited) > :nth-child(2) > div {\n    background-image: url('//ssl.gstatic.com/docs/common/viewer/v3/v-sprite33.svg') !important;\n}",
            "ignoreInlineStyle": [
                "div[role=\"presentation\"] svg"
            ]
        },
        {
            "url": [
                "droid-life.com"
            ],
            "css": ".collection-posts__list .preview__picture {\n    mix-blend-mode: normal !important;\n}"
        },
        {
            "url": [
                "dropbox.com"
            ],
            "invert": [
                ".dl-dropbox",
                ".drops-empty-page-header-image",
                ".restorations-education__df-help__image",
                ".search__view--empty img",
                ".plan-status-section__icon img"
            ],
            "ignoreInlineStyle": [
                ".home__suggest_image path",
                ".selection-preview-pane__icon path"
            ]
        },
        {
            "url": [
                "drupal.org"
            ],
            "css": "input[type=\"image\"] {\n  background: none;\n}"
        },
        {
            "url": [
                "dtf.ru"
            ],
            "invert": [
                "mark"
            ]
        },
        {
            "url": [
                "duckduckgo.com"
            ],
            "ignoreInlineStyle": [
                "#color_picker_container .sample",
                ".zci--color_codes .circle"
            ]
        },
        {
            "url": [
                "duo.google.com"
            ],
            "invert": [
                ".gb_se .gb_ye:not(.gb_Ae)"
            ]
        },
        {
            "url": [
                "duolingo.com"
            ],
            "invert": [
                ".Z392z",
                "._24NNT"
            ],
            "css": "._2OVuy{\n  opacity: 0.3;\n}"
        },
        {
            "url": [
                "dw.com"
            ],
            "css": "#bodyMover {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "ea.com"
            ],
            "css": "img[src*=\"white-bg-ea-bg-global-white\"] {\n    display: none !important;\n}"
        },
        {
            "url": [
                "easypost.com"
            ],
            "invert": [
                ".logo",
                ".progress-bar"
            ]
        },
        {
            "url": [
                "ebooks.cpm.org"
            ],
            "invert": [
                "img[alt=\"Review and Preview problems below\"]"
            ]
        },
        {
            "url": [
                "education.github.com"
            ],
            "invert": [
                "img[alt=\"GitHub Education\"]",
                ".octicon-logo-github"
            ]
        },
        {
            "url": [
                "eff.org"
            ],
            "css": "select > optgroup,\nselect > optgroup > option {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "elearning.utdallas.edu"
            ],
            "invert": [
                ".contentBox.contentBox-edit",
                ".content.clearfix"
            ]
        },
        {
            "url": [
                "electrical-symbols.com"
            ],
            "invert": [
                ".table-striped img"
            ]
        },
        {
            "url": [
                "elp.northumbria.ac.uk"
            ],
            "invert": [
                ".selected-answer"
            ]
        },
        {
            "url": [
                "emacswiki.org"
            ],
            "css": "body {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "endomondo.com"
            ],
            "invert": [
                ".header-shop-logo",
                ".footer-shop-logo",
                ".eoFeedWorkout-map-image",
                ".workoutMap img[src*=\"maps\"]"
            ],
            "css": ".highcharts-background{\n    fill: rgb(24, 26, 27) !important;\n}\n.highcharts-data-labels text{\n    text-shadow: none !important;\n}"
        },
        {
            "url": [
                "enduhub.com"
            ],
            "css": ".navbar .nav > li > a {\n    text-shadow: rgb(40, 43, 54) 0px 1px 0px !important;\n}"
        },
        {
            "url": [
                "enjen.net"
            ],
            "css": "body {\n    background-image: none !important;\n}\ninput.input-medium {\n    background-image: none !important;\n}\nselect.input-small {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "eshop-switch.com"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "eshot.gov.tr"
            ],
            "css": "a.navbar-brand img {\n    filter: hue-rotate(90deg) invert(1) hue-rotate(90deg) saturate(15);\n}\n#heading .left, #heading .sub-menu .left-xs, #heading .sub-menu .right-xs {\n    background-color: transparent !important;\n    background-image: none !important;\n}\nsection#announcements-area .container {\n    background-image: none;\n}"
        },
        {
            "url": [
                "etsy.com"
            ],
            "invert": [
                ".banner-container",
                ".secondary-banner-title"
            ]
        },
        {
            "url": [
                "evernote.com"
            ],
            "invert": [
                ".global-logo svg"
            ]
        },
        {
            "url": [
                "exmo.me"
            ],
            "invert": [
                "canvas"
            ]
        },
        {
            "url": [
                "explainxkcd.com"
            ],
            "invert": [
                ".mwe-math-element",
                ".mw-ext-score",
                ".main-footer-menuToggle",
                "img[src*=\"Loudspeaker.svg\"]",
                "img[alt=\"The Signpost\"]"
            ],
            "css": ".diff-addedline .diffchange {\n    background-color: ${lightblue} !important;\n}\n.diff-deletedline .diffchange {\n    background-color: ${#feeec8} !important;\n}",
            "ignoreInlineStyle": [
                ".legend-color",
                ".infobox > tbody > tr > td[style*=\"background-color\"]"
            ]
        },
        {
            "url": [
                "expressjs.com"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "facebook.com"
            ],
            "invert": [
                "._2o89",
                "._2q08",
                ".sx_af7fe0",
                ".sx_7ed17e",
                ".sx_a4a936",
                ".sx_4d607f",
                ".sx_aca067",
                ".sx_77228a",
                ".sx_51302f",
                "._2yu5",
                "._3iiv",
                "._3pao",
                ".kv0qyzoi",
                ".sx_426ea6",
                ".sx_b77acf",
                "._2gb3",
                "._7sjb",
                ".sx_b9f33b",
                ".sx_2e7846",
                ".sx_6d18f4",
                ".monochrome",
                ".repliedLast",
                ".sx_73ef60",
                "._81u_ .img",
                "._3ffs li",
                "#profile_intro_card_bio i",
                ".uiScrollableAreaWrap .uiList button[type=\"submit\"] i._3-8_",
                ".editPhoto i._3-8_",
                ".sx_08856a",
                ".sx_ac12f7",
                ".sp_hk4DJV_EEeW",
                ".sp_V53xxlprDHX_1_5x",
                ".sp_V53xxlprDHX_2x",
                "#pagelet_ego_pane button .img._3-8_",
                "#homepage_panel_promote_footer_pagelet button .img._3-8_",
                "#event_tabs #reaction_units span img",
                ".fbPlaceFlyoutWrap img",
                "._83aj",
                "._7xv1",
                "._83ak",
                "._8g4q"
            ],
            "css": ".fbNubButton {\n    background-image: none !important;\n}\n.jewelItemNew ._33e {\n    background-color: ${#d0d1d3} !important;\n}\n._5qxm {\n    background-color: rgba(0, 0, 0, 0.25);\n    background-blend-mode: color;\n}\n.sx_cf4e6b {\n    filter: brightness(250%) !important;\n}\n._34k2 {\n    filter: brightness(1000%) !important;\n}\n._3hx- ._4tdt,\n._3hx- ._5wd4,\n._3hx- ._6vu5 ._5w-5,\n._3hx- ._1aa6::after,\n._3hx- ._6vu5 ._31o4,\n._3hx- ._2cnu:only-of-type ._5wdf,\n._3hx- ._5w0o,\n._3hx- ._5z-5,\n._3hx- ._16ys._3e7u,\n._3hx- ._49or .__6j,\n._3hx- ._324d .__6j,\n._llj {\n    border-color: ${#eee} !important;\n}\n._3hx- ._ua1,\n._3hx- ._40qi,\n._3hx- ._5ye6,\n._3hx- ._llj,\n._3hx- ._1a6y,\n._31o4,\n._3_bp,\n._4gd0,\n._49or,\n._40fu {\n    background-color: ${#eee} !important;\n}\n.fbNub._50mz .fbNubFlyoutFooter::after {\n    background-color: ${rgba(0, 0, 0, .15)} !important;\n}\n.fbNub._50mz .fbNubFlyoutInner,\n._4cd8 ._69pt,\n._4mq3 .fbNubFlyout,\n._4mq3 .fbNubButton {\n    box-shadow: 0 0 0 1px ${rgba(0, 0, 0, .15)} !important;\n}\n:root, .__fb-light-mode {\n    --filter-disabled-icon: invert(100%) opacity(30%) !important;\n    --filter-placeholder-icon: invert(59%) sepia(11%) saturate(200%) saturate(135%) hue-rotate(176deg) brightness(96%) contrast(94%) !important;\n    --filter-primary-icon: invert(100%) !important;\n    --filter-secondary-icon: invert(62%) sepia(98%) saturate(12%) hue-rotate(175deg) brightness(90%) contrast(96%) !important;\n    --filter-warning-icon: invert(77%) sepia(29%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(128%) hue-rotate(359deg) brightness(102%) contrast(107%) !important;\n    --filter-blue-link-icon: invert(73%) sepia(29%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(103.25%) hue-rotate(189deg) brightness(101%) contrast(101%) !important;\n    --filter-positive: invert(37%) sepia(61%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(115%) hue-rotate(91deg) brightness(97%) contrast(105%) !important;\n    --filter-negative: invert(25%) sepia(33%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(200%) saturate(110%) hue-rotate(345deg) brightness(132%) contrast(96%) !important;\n}\ndiv[role=article] div.k4urcfbm[aria-hidden=\"true\"] {\n    background-color: rgba(0, 0, 0, 0.25);\n    background-blend-mode: color;\n    --darkreader-inline-bgcolor: none !important;\n}\ndiv[data-pagelet=\"Stories\"] .ha302278 {\n    background-color: rgba(0, 0, 0, 0.4) !important;\n}\ndiv[aria-label=\"Change volume\"] .ha302278,\ndiv[aria-label=\"Change Position\"] .ha302278,\n._3paq {\n    background-color: rgba(255, 255, 255, 0.4) !important;\n}\n.r4vyqqch {\n    background-color: var(--fds-white-alpha-50) !important;\n}\n.lyi53s4r {\n    background-color: rgba(88,144,255,.9) !important;\n}\n.tdjehn4e, .oo1teu6h {\n    background-color: rgba(255, 255, 255, 0.1) !important;\n}\n.tdjehn4e:hover, .ovq5dppa:hover {\n    background-color: rgba(255, 255, 255, 0.2) !important;\n}\n.k19f6yf2 {\n    background-color: var(--press-overlay) !important;\n}\n.cxbav39q {\n    background-color: rbga(0, 0, 0, 0.8) !important;\n}\n.rnr61an3 {\n    background-color: var(--hover-overlay) !important;\n}\n.qbubdy2e {\n    fill: none !important;\n}\n.s1i5eluu {\n    background-color: var(--primary-button-background) !important;\n}\n.q66pz984 {\n    color: var(--accent);\n}\n.esnais5j, ._8bb_ img, ._8bb_ i,\n._8bb_ video, ._8bb_ ._w80, ._8bb_ ._7umt ._47yj,\n._8bb_ [style*='background-image: url'] {\n    filter: none !important;\n}\ndiv[role=\"button\"] > i.hu5pjgll:not(.sp_Jc8OKpJq5NW, .sp_T89CCTT7d9Z),\na[role=\"link\"] > i.hu5pjgll, ._3w97 {\n    filter: var(--filter-secondary-icon) !important;\n}\n._2yua, ._3pas {\n    background-color: #888 !important;\n}\n._2yu8 {\n    background-color: rgba(255, 255, 255, .5) !important;\n}\nimg[src*=\"/map\"], [style*=\"map\"],\n._8bb_ img[src*=\"/map\"], ._8bb_ [style*=\"map\"],\nimg[src*=\"mapy.cz\"], ._8bb_ img[src*=\"mapy.cz\"],\nimg[src*=\"%2Fmap\"], ._8bb_ img[src*=\"%2Fmap\"],\nimg[src*=\"map.php\"], ._8bb_ img[src*=\"map.php\"],\nimg[src*=\"www.traseo.pl%2Froute\"], ._8bb_ img[src*=\"www.traseo.pl%2Froute\"] {\n    filter: invert(100%) hue-rotate(180deg) !important;\n}\n.q2y6ezfg, .mkbloq8g {\n    background-color: var(--always-white) !important;\n}\n.j7vl6m33 {\n    fill: var(--always-white) !important;\n}",
            "ignoreInlineStyle": [
                "[role=\"button\"] svg",
                "[role=\"button\"] svg line",
                "div svg[viewBox=\"0 0 36 36\"] mask path",
                "mask > rect",
                "mask > circle",
                "g > rect"
            ],
            "ignoreImageAnalysis": [
                "*"
            ]
        },
        {
            "url": [
                "fanatical.com"
            ],
            "invert": [
                ".trustpilot > .logo-container > a > img"
            ],
            "ignoreInlineStyle": [
                "div.drm-container svg g"
            ]
        },
        {
            "url": [
                "fandom.com"
            ],
            "invert": [
                ".wds-global-navigation__logo-fandom"
            ],
            "ignoreInlineStyle": [
                ".wds-global-navigation__logo-image g path",
                ".wds-global-footer__header-logo g path",
                ".wds-global-footer__link svg g path"
            ]
        },
        {
            "url": [
                "fantasy.premierleague.com"
            ],
            "invert": [
                ".ism-table"
            ]
        },
        {
            "url": [
                "farside.ph.utexas.edu",
                "mathpages.com",
                "mathprofi.ru",
                "mathprofi.net",
                "mathworld.wolfram.com",
                "reference.wolfram.com",
                "terrytao.wordpress.com",
                "wolframalpha.com"
            ],
            "invert": [
                "img:not([src^=\"/_next/static/images/\"])"
            ]
        },
        {
            "url": [
                "fast.com"
            ],
            "invert": [
                "div.logo",
                "div.powered-by"
            ],
            "ignoreImageAnalysis": [
                "div.logo",
                "div.powered-by"
            ]
        },
        {
            "url": [
                "fastmail.com/mail"
            ],
            "css": ".app-listItem.is-focused,\n.app-source.is-selected {\n    background-color: ${lightgray} !important;\n}\n.app-source.is-focused {\n    background-color: ${lightblue} !important;\n    color: ${black} !important;\n}\n.v-MailboxItem-unreadbadge {\n    background-color: ${darkblue} !important;\n}\n.v-Message-body {\n    border-color: transparent !important;\n}"
        },
        {
            "url": [
                "fedex.com"
            ],
            "css": ".fx-global-prelog-link.fx-showlogin span {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "feynmanlectures.caltech.edu"
            ],
            "invert": [
                ".figure > img[src$=\".svgz\"]"
            ]
        },
        {
            "url": [
                "ffmpeg.zeranoe.com"
            ],
            "invert": [
                ".active"
            ]
        },
        {
            "url": [
                "fibermap.it"
            ],
            "invert": [
                "img[src$=\"assets/images/bg-cloud.png\"]"
            ]
        },
        {
            "url": [
                "figma.com"
            ],
            "ignoreInlineStyle": [
                "div[class*=\"paint_panels--chit\"]",
                "div[class*=\"modal--modalShadow\"] div"
            ]
        },
        {
            "url": [
                "filmweb.pl"
            ],
            "invert": [
                ".ribbonLbl",
                ".isInit.ribbon[data-state=\"1\"]::after",
                ".isInit.ribbon[data-state=\"2\"]::after",
                ".isInit.ribbon[data-state=\"3\"]::after",
                ".isInit.ribbon[data-state=\"4\"]::after",
                ".isInit.ribbon[data-state=\"5\"]::after",
                ".isInit.ribbon[data-state=\"6\"]::after",
                ".isInit.ribbon[data-state=\"7\"]::after",
                ".isInit.ribbon[data-state=\"8\"]::after",
                ".isInit.ribbon[data-state=\"9\"]::after",
                ".isInit.ribbon[data-state=\"10\"]::after"
            ],
            "css": ".filmInfo__info {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "filterlists.com"
            ],
            "ignoreInlineStyle": [
                "header.ant-layout-header img"
            ]
        },
        {
            "url": [
                "firebase.google.com"
            ],
            "invert": [
                ".devsite-site-logo"
            ]
        },
        {
            "url": [
                "fivethirtyeight.com"
            ],
            "invert": [
                ".logo",
                ".site-logo",
                "#searchform",
                ".header-espn-link"
            ]
        },
        {
            "url": [
                "flightfinder.fi"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "flow.polar.com"
            ],
            "invert": [
                ".brand",
                ".detail-data-panel__icon",
                ".sleep-chart-yaxis.end",
                ".supergraph-canvas"
            ],
            "css": ".highcharts-container svg {\n    fill: ${#3f3f3f} !important;\n}\n.card__item-icon--rounded img {\n    background-color: rgba(255, 255, 255, 0.15) !important;\n    background-blend-mode: color;\n}\n.altitudetitle, .altdescmax, .altdescmin, \n.zonedesctitle, .zonedescmax, .zonedesclight, \n.maxhighlightval, .maxhighlightname {\n    color: rgb(0, 0, 0) !important;\n}",
            "ignoreInlineStyle": [
                ".zonebox",
                ".zonestartbox"
            ]
        },
        {
            "url": [
                "flowkey.com"
            ],
            "invert": [
                "body.front #zone-branding-wrapper"
            ],
            "css": "body.html #page.page #subslogan {\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "flyzipline.com"
            ],
            "invert": [
                "#logo"
            ],
            "ignoreImageAnalysis": [
                "#logo"
            ]
        },
        {
            "url": [
                "fontsinuse.com"
            ],
            "invert": [
                ".fiu-header__branding",
                ".fiu-sample-list__item img",
                ".fiu-gallery-head__text img"
            ]
        },
        {
            "url": [
                "fontspring.com"
            ],
            "invert": [
                ".grid6 .fullwidth"
            ]
        },
        {
            "url": [
                "fontsquirrel.com"
            ],
            "invert": [
                ".fontlistitem"
            ]
        },
        {
            "url": [
                "foobar2000.org"
            ],
            "invert": [
                "img[src=\"/foobarlogo.png\"]"
            ]
        },
        {
            "url": [
                "foolcontrol.org"
            ],
            "css": "html {\n    background-color: transparent !important;\n}"
        },
        {
            "url": [
                "forum.miranda-ng.org"
            ],
            "css": ".firstlevel {\n    color: ${#666666} !important;\n}"
        },
        {
            "url": [
                "forum.p300.it"
            ],
            "css": ".ipsReact_reactCount > a {\n    background-color: var(--darkreader-neutral-background);\n    border-color: var(--darkreader-neutral-text); !important;\n}\n\n.ipsType_normal {\n    border-color: rgb(48,52,54);\n}\n\n.ipsMenu_headerBar,\n.ipsMenu_footerBar,\n.ipsEmoticons_category,\n.ipsMenu_innerContent,\nul.ipsMenu, .ipsMenu > ul,\na[data-mentionid],\n.cUserHovercard {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "forums.tomshardware.com"
            ],
            "invert": [
                "img[src=\"/styles/tomshardware/tomshardware/toms-hardware-logo.png\"]",
                "div.trophyShowcase.trophyShowcase--postbit"
            ]
        },
        {
            "url": [
                "forvo.com"
            ],
            "invert": [
                "img[src$=\"layout/logo.svg\"]"
            ]
        },
        {
            "url": [
                "funpay.ru"
            ],
            "invert": [
                ".logo-color",
                ".logo"
            ]
        },
        {
            "url": [
                "furrychina.com"
            ],
            "invert": [
                ".main_logo"
            ]
        },
        {
            "url": [
                "fusoya.eludevisibility.org"
            ],
            "css": "body {\n    background-image: none !important;\n}\ntd {\n    color: var(--darkreader-neutral-text) !important;\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "garmin.com"
            ],
            "invert": [
                ".gh__logo"
            ]
        },
        {
            "url": [
                "gazeta.pl",
                "plotek.pl"
            ],
            "invert": [
                ".column"
            ],
            "css": ".top_section_bg, .bottom_section_bg {\n    background-color: ${#e5e5e5} !important;\n}"
        },
        {
            "url": [
                "geizhals.*",
                "skinflint.co.uk",
                "cenowarka.pl"
            ],
            "css": "img.listview__image, img.galleryview__image, .variant__header__dropdown__item__icon img  {\n    mix-blend-mode: normal !important;\n}"
        },
        {
            "url": [
                "genius.com"
            ],
            "invert": [
                ".texmath"
            ]
        },
        {
            "url": [
                "geogebra.org"
            ],
            "invert": [
                ".icon-m",
                ".elemText canvas",
                ".gwt-Image",
                ".gwt-StackPanelItem img",
                ".GeoGebraMenuImage.menuImg",
                ".menuImg",
                ".buttonContent.stylebarButton",
                ".EuclidianPanel > canvas"
            ]
        },
        {
            "url": [
                "get.google.*",
                "get.google.*.*"
            ],
            "invert": [
                "a[href*=\"about/products\"]",
                "span[aria-label=\"Settings\"][role=\"menuitem\"] path",
                "span[aria-label=\"About Album Archive\"][role=\"menuitem\"] path",
                "span[aria-label=\"Download photo\"][role=\"menuitem\"] path",
                "span[aria-label=\"Manage in Google Photos\"][role=\"menuitem\"] path"
            ]
        },
        {
            "url": [
                "get.todoist.help"
            ],
            "css": ".dth-page-body.dth-bg-contain.dth-bg-top-center.dth-bg-repeat-x {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "gg.pl"
            ],
            "invert": [
                ".chat-btns",
                ".profile-close i",
                ".settings-close i"
            ],
            "css": ".sr-contact-name span {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "git-scm.com"
            ],
            "invert": [
                "img[alt=\"Git\"]"
            ],
            "css": "body, #masthead {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "github.blog"
            ],
            "invert": [
                "a[href=\"https://github.com\"]",
                ".site-branding > svg"
            ]
        },
        {
            "url": [
                "github.com",
                "github.*.com"
            ],
            "css": ".markdown-body code,\n.markdown-body pre {\n    background-color: ${rgba(27, 31, 35, 0.1)} !important;\n}\n.markdown-body pre code {\n    background-color: transparent !important;\n}\n.refined-github .dashboard .js-all-activity-header + div {\n    background-color: ${#e4e5e9} !important;\n    border-color: ${#bbc1c9} !important;\n}\n.refined-github .dashboard-rollup-items .body {\n    border-top-color: ${#bbc1c9} !important;\n}\n.refined-github .reaction-summary-item a {\n    box-shadow: 0 0 0 2px ${white} !important;\n}\n.refined-github button.reaction-summary-item {\n    border-top-color: rgb(52, 59, 68) !important;\n    border-bottom: rgb(77, 172, 253) !important;\n}\n.js-site-search-form {\n    background-color: #ffffff1a !important;\n    border-radius: 2pt !important;\n}\n.blob-num:not(.cc-coverage-covered-border):not(.cc-coverage-missed-border) {\n    border-right: 0 !important;\n}\n.cc-issue-description {\n    color: #24292e !important;\n}\n.cc-readup-background {\n    background-color: rgb(28, 30, 31) !important\n}\n.cc-readup-content {\n    border-left: 1px solid grey !important;\n    color: rgb(216, 214, 208) !important;\n}\n.cc-readup-content blockquote {\n    border-left: 3px solid dimgrey !important;\n}\n.cc-pr__link-text {\n    color: darkgrey !important;\n}\n.cc-pr__tooltip {\n    background-color: rgb(28, 30, 31) !important;\n    color: darkgrey !important;\n}\n.jfk-bubble, .octotree-sidebar, .cc-pr__logo, .cc-octicon, #network canvas, img.network-tree {\n    filter: invert(94.4%) hue-rotate(180deg) contrast(90%) !important;\n}\n.blob-code-inner, .blob-code-inner > *, .CodeMirror pre > span, .CodeMirror-linenumber {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace !important;\n}\n#commit-activity-detail > svg {\n    fill: ${black} !important;\n}\n:root {\n    --color-previewable-comment-form-bg: var(--darkreader-neutral-background) !important;\n    --color-calendar-graph-day-bg: ${#ebedf0} !important;\n    --color-calendar-graph-day-L1-bg: ${#9be9a8} !important;\n    --color-calendar-graph-day-L2-bg: ${#40c463} !important;\n    --color-calendar-graph-day-L3-bg: ${#30a14e} !important;\n    --color-calendar-graph-day-L4-bg: ${#216e39} !important;\n}\n.Box,\n.form-select,\n.menu,\n.color-bg-primary,\n.bg-white,\n.page-responsive .HeaderMenu--logged-out,\n.markdown-body table tr,\n.markdown-body img,\n.Box--overlay,\n.gh-header,\n.gh-header .gh-header-sticky.is-stuck+.gh-header-shadow,\n.timeline-comment,\n.new-discussion-timeline .composer .comment-form-head.tabnav,\n.discussion-timeline-actions,\n.pagination-loader-container,\n.pagehead-tabs-item.selected,\n.reponav-item.selected,\n.steps li.current,\n#subtasks.is-comment-editing,\n.advisory-form .form-actions,.advisory-form .form-control,.advisory-form .previewable-comment-form,\n.credit-card.normal .signature,\n.billing-addon-items tr.total-row,\n.billing-credit-card .javascript-disabled-overlay,\n.plan-choice.open,.plan-choice.selected,\n.CopyBlock:active,.CopyBlock:focus,.CopyBlock:hover,\n.CodeMirror-hints,\n.branch-action-body,\n.coupons .coupon-form-body,\n.dashboards-overview-cards .blankslate,\n.file .image .border-wrap,\n.MarketplaceSideNav,\n.news .alert .gravatar,\n.news .commits li img,\n.thread-subscription-status,\n.auto-search-group .spinner,\n.manage-repo-access-group,\n.manage-memberships-tabs-item.selected,\n.theme-picker,\n.theme-picker-spinner,\n.page-preview,\n.project-header,\n.projects-comment-form .comment-form-head .toolbar-commenting,\n.user-profile-nav,\n.pr-toolbar.is-stuck,\n.diffbar,\n.review-comment .is-comment-editing,\n.review-thread-reply .inline-comment-form,\n.review-summary-form-wrapper,\n.is-bad-file .repo-file-upload-errors,.is-empty .repo-file-upload-errors,.is-failed .repo-file-upload-errors,.is-hidden-file .repo-file-upload-errors,.is-too-big .repo-file-upload-errors,.is-too-many .repo-file-upload-errors,\n.setup-info-module,\n.orgs-help-item-octicon,\n.sponsors-goals-avatar-border,\n.business-sso .business-sso-panel,.business-sso .org-sso-panel,.org-sso .business-sso-panel,.org-sso .org-sso-panel,\n.user-status-circle-badge,\n.hx_flex-avatar-stack-item .avatar,\n.tabnav--responsive .tabnav-tab.selected,.tabnav--responsive .tabnav-tab[aria-selected=true] {\n    background-color: var(--darkreader-neutral-background) !important;\n}\nmark,\n[data-color-mode],\nbody,\n.Box-row-link,\n.breadcrumb-item-selected,.breadcrumb-item[aria-current]:not([aria-current=false]),\n.close-button:hover,\n.social-count,\n.form-control,.form-select,\np.explain strong,\n.radio-label,\n.Link--primary,.link-gray-dark,\n.menu-item,\n.tabnav-tab.selected,.tabnav-tab[aria-current]:not([aria-current=false]),.tabnav-tab[aria-selected=true],\n.tabnav-tab:focus,.tabnav-tab:hover,\n.SideNav-item,\n.SideNav-subItem:focus,.SideNav-subItem:hover,\n.SideNav-subItem[aria-current]:not([aria-current=false]),.SideNav-subItem[aria-selected=true],\n.subnav-item,\n.pagination a,.pagination em,.pagination span,\n.color-text-primary,\n.text-gray-dark,\n.text-emphasized,\n.session-authentication .auth-form-header,\n.page-responsive .HeaderMenu--logged-out .header-search-input,\n.page-responsive .HeaderMenu-link:hover,\n.page-responsive .HeaderMenu-details[open] .HeaderMenu-link,\n.header-nav-current-user .user-profile-link,\n.jump-to-field-active,\n.autocomplete-item,\n.dropdown-item,\n.markdown-body h1 .octicon-link,.markdown-body h2 .octicon-link,.markdown-body h3 .octicon-link,.markdown-body h4 .octicon-link,.markdown-body h5 .octicon-link,.markdown-body h6 .octicon-link,\n.markdown-body span.frame span span,\n.SelectMenu-item,\n.SelectMenu-tab[aria-selected=true],\n.SelectMenu-item[aria-checked=true],\n.SelectMenu-closeButton:hover,body:not(.intent-mouse) .SelectMenu-closeButton:focus,\n.SelectMenu-tab:hover,\n.SelectMenu-tab:not([aria-selected=true]):active,\n.list-group-item-link,\n.select-menu-modal,\n.select-menu-divider,.select-menu-header .select-menu-title,\n.select-menu-tabs .select-menu-tab-nav:hover,.select-menu-tabs a:hover,\n.select-menu-tabs .select-menu-tab-nav.selected,.select-menu-tabs .select-menu-tab-nav[aria-selected=true],.select-menu-tabs a.selected,.select-menu-tabs a[aria-selected=true],\n.select-menu-blankslate h3,\n.select-menu-item.selected,details-menu .select-menu-item[aria-checked=true],details-menu .select-menu-item[aria-selected=true],\n.select-menu-item.selected>.octicon,details-menu .select-menu-item[aria-checked=true]>.octicon,details-menu .select-menu-item[aria-selected=true]>.octicon,\n.table-list-header-toggle .btn-link:hover,\n.table-list-header-toggle .btn-link.selected,.table-list-header-toggle .btn-link.selected:hover,\n.table-list-header-toggle .select-menu-button.selected,.table-list-header-toggle .select-menu-button.selected:hover,.table-list-header-toggle .select-menu-button:hover,\n.breadcrumb strong.final-path,\n.commit-author-section,\n.commits-list-item .commit-title,\n.signed-commit-signer-name .signer,\n.toc-select .select-menu-item-heading,.toc-select .select-menu-item-text,\n.blob-code-inner,\n.timeline-comment,\n.team-mention,.user-mention,\n.pagehead-actions>li,\n.pagehead-tabs-item:hover,\n.pagehead-tabs-item.selected,\n.reponav-item:focus,.reponav-item:hover,\n.reponav-item.selected,\n.steps li.current,\n.prose-diff.collapsed .rich-diff-level-zero.expandable:only-child:hover:before,\n.protip strong,\n.billing-addon-items td.black,\n.CodeMirror-hint,\n[data-color-mode=dark] .CheckRunContainer.bg-gray-dark .text-white,\n[data-color-mode=auto] .CheckRunContainer.bg-gray-dark .text-white,\n[data-color-mode=dark] .CheckStep-header-dropdown-menu .dropdown-item,\n[data-color-mode=auto] .CheckStep-header-dropdown-menu .dropdown-item,\n[data-color-mode=dark] .CheckStep[open] .CheckStep-header,\n[data-color-mode=auto] .CheckStep[open] .CheckStep-header,\n[data-color-mode=dark] .CheckStep[open] .CheckStep-header-label,\n[data-color-mode=auto] .CheckStep[open] .CheckStep-header-label,\n[data-color-mode=dark] .CheckRun-header .btn-link:hover:not([disabled]),[data-color-mode=dark] .CheckRun-header .btn.btn-link:hover:not([disabled]) .octicon,\n[data-color-mode=auto] .CheckRun-header .btn-link:hover:not([disabled]),[data-color-mode=auto] .CheckRun-header .btn.btn-link:hover:not([disabled]) .octicon,\n[data-color-mode=dark] .CheckRun-log-title,\n[data-color-mode=auto] .CheckRun-log-title,\n.CheckRun-search-input:focus,\n[data-color-mode=dark] .CheckRun-header .CheckRun-search-input:focus,\n[data-color-mode=auto] .CheckRun-header .CheckRun-search-input:focus,\n[data-color-mode=dark] .CheckStep-line:hover,\n[data-color-mode=auto] .CheckStep-line:hover,\n[data-color-mode=dark] .CheckStep-line.selected,\n[data-color-mode=auto] .CheckStep-line.selected,\n.CheckStep-line .dt-fm,\n.CommunityTemplate-highlight,\n.dashboard-notice h2,\n.icon-discussion-gray,\n.emoji-tab[role=tab][aria-selected=true],\n.exploregrid-item-title,\n.select-menu-item.navigation-focus>.octicon.label-options-icon,.select-menu-item[aria-selected=true]>.octicon.label-options-icon,\n.repository-lang-stats ol.repository-lang-stats-numbers li .lang,\n.marketplace-plan-emphasis,\n.topic-tag-contrast .delete-topic-link,\n.merge-branch-heading,\n.notifications-list-item.notification-unread .notification-list-item-link,\n.notifications-list-item:hover .notification-list-item-link,\n.notifications-list-item.navigation-focus .notification-list-item-link,\n.oauth-permissions-details .permission-title,\n.oauth-org-access-details .oauth-org-item.on strong,\n.oauth-application-whitelist .request-info strong,\n.oauth-application-info .application-title,\n.developer-app-item .developer-app-name,\n.orghead,\n.add-member-team-list .team-info,\n.manage-repo-access-not-active,\n.manage-memberships-tabs-item.selected,\n.btn:not(.btn-outline),\n.review-comment,\n.repo-file-upload-tree-target,\n.access-token .token-description,\n.token-scope,\n.repository-settings-actions [role=tab][aria-selected=true],\n.shelf-dismiss .close-button:hover,\n.typeahead-result,\n.user-status-message-wrapper,\n.actions-workflow-navigation .row-child:hover,\n.hx_breadcrumb-header-dropdown .dropdown-item:hover {\n    color: var(--darkreader-neutral-text) !important;\n}\n.Box-row--yellow {\n    background-color: ${#fffbdd} !important;\n}",
            "ignoreInlineStyle": [
                "a[href^=\"https://apps.apple.com/app/\"] g",
                "a[href^=\"https://apps.apple.com/app/\"] path"
            ]
        },
        {
            "url": [
                "github.myshopify.com"
            ],
            "invert": [
                ".site-header__logo-image",
                ".column-gh.column-full>svg"
            ]
        },
        {
            "url": [
                "githubstatus.com"
            ],
            "css": ".illo-desktop-header {\n    z-index: 0 !important;\n}"
        },
        {
            "url": [
                "gitlab.com"
            ],
            "invert": [
                ".js-contrib-calendar"
            ],
            "css": ":root {\n    --svg-status-bg: #181a1b;\n}\n.avatar, .avatar-container {\n    border: none !important;\n}"
        },
        {
            "url": [
                "giveawayoftheday.com"
            ],
            "invert": [
                ".header_lang .curr_lang::before",
                ".header_logo",
                ".header_nav_trig",
                ".header_search",
                ".header_search .button"
            ],
            "ignoreImageAnalysis": [
                ".countdown-amount .diggit"
            ]
        },
        {
            "url": [
                "gls-pakete.de"
            ],
            "css": ".tracking--status .status-box::before, .tracking--status .status-box::after {\n    z-index: 0 !important;\n}\n\n.tracking--status .status-box.status--complete.status--lastcomplete .status-box--tooltip, .tracking--status .status-box.status--current .status-box--tooltip {\n    transform: none !important;\n    position: absolute !important;\n    margin-bottom: 0px !important;\n    margin-top: -10px !important;\n    bottom: 0 !important;\n}"
        },
        {
            "url": [
                "gnu.org"
            ],
            "invert": [
                "#gnu-banner img",
                "#search-icon"
            ]
        },
        {
            "url": [
                "gog.com"
            ],
            "invert": [
                "i.icn.icn--close"
            ],
            "ignoreImageAnalysis": [
                ".menu-anonymous__shelf"
            ]
        },
        {
            "url": [
                "google.*/maps",
                "google.*.*/maps"
            ],
            "invert": [
                "#app-container.vasquette:not(.app-imagery-mode):not(.app-globe-mode) .widget-scene-canvas",
                "#app-container.vasquette:not(.app-imagery-mode):not(.app-globe-mode) .canvas-container > canvas",
                "#app-container.vasquette:not(.app-imagery-mode):not(.app-globe-mode) .full-screen > img",
                ".widget-settings-button-icon",
                ".searchbox-button",
                ".searchbox-searchbutton",
                ".searchbox-hamburger::before",
                ".maps-sprite-settings-chevron-left",
                "a.ita-kd-icon-button > span",
                "li.ita-kd-menuitem > span.ita-kd-menuitem-inputtool-icon",
                "li.ita-kd-menuitem > span.ita-kd-checkbox",
                "div.maps-sprite-common-chevron-left",
                "span.maps-sprite-common-chevron-right",
                "span.section-destination-via-line-icon",
                "div.section-directions-trip-travel-mode-icon",
                "div.goog-menu-button-dropdown",
                "button.searchbox-hamburger.white-foreground",
                "label.kd-radio-label:before",
                "label.kd-checkbox-label:before",
                "label.kd-checkbox-label:after",
                "button.section-directions-details-action-button",
                "div.section-loading-spinner",
                "a.gb_b > div",
                "a.gb_xc",
                ".gm-style img[role=\"presentation\"]:not([src*=\"v=\"])",
                ".i4ewOd-xl07Ob",
                ".i4ewOd-LQLjdd li::before",
                ".un1lmc-j4gsHd",
                ".maps-sprite-settings-languages",
                "a[href*=\"about/products\"]",
                ".google-logo",
                ".watermark",
                ".section-review-action-menu",
                ".section-review-interaction-button",
                ".section-directions-trip-travel-mode-icon",
                ".renderable-component-icon"
            ]
        },
        {
            "url": [
                "goplay.anontpp.com"
            ],
            "invert": [
                "img[src*=\"download.svg\"]",
                "img[src*=\"cast.png\"]",
                "img[src*=\"bookmark.png\"]",
                ".jw-slider-container",
                ".jw-time-tip::after"
            ]
        },
        {
            "url": [
                "gorod.gov.spb.ru"
            ],
            "invert": [
                ".header__logo",
                ".reason__icon",
                ".map-with-address",
                ".problem-details__map",
                ".problem-map-page__map"
            ]
        },
        {
            "url": [
                "gramota.ru"
            ],
            "invert": [
                "img[src*=\"logo-gramota\"]",
                ".caret",
                "td > strong"
            ]
        },
        {
            "url": [
                "grubhub.com"
            ],
            "css": ".s-checkbox-filler {\n    color: rgb(24, 26, 27) !important;\n}\n\nlabel, h5, h6, header, .h5 {\n    color: ${black};\n}"
        },
        {
            "url": [
                "gsuite.google.com"
            ],
            "invert": [
                ".header--logo img"
            ]
        },
        {
            "url": [
                "guitarcenter.pl"
            ],
            "invert": [
                "tr > td > img",
                "p.standard_price",
                "p.promo_price"
            ]
        },
        {
            "url": [
                "habr.com"
            ],
            "invert": [
                "img[src*=\"//tex.s2cms.ru/\"]"
            ],
            "css": "html {\n    text-shadow: none !important;\n}"
        },
        {
            "url": [
                "hackerrank.com"
            ],
            "invert": [
                ".badge-title",
                ".badge-star"
            ],
            "css": ".monaco-editor .cursor {\n    background-color: ${black} !important;\n}"
        },
        {
            "url": [
                "hbr.org"
            ],
            "invert": [
                ".hamburger-icon",
                ".top-header--logo",
                ".search-icon",
                ".footer-logo"
            ]
        },
        {
            "url": [
                "hdgo.cc",
                "vio.to"
            ],
            "invert": [
                ".hdplayer .big_play_button div",
                ".hdplayer .hdgo_controls div.hdgo_pause_control div",
                ".hdplayer .hdgo_controls div.hdgo_play_control div"
            ]
        },
        {
            "url": [
                "heritage.org/index"
            ],
            "invert": [
                ".bar"
            ],
            "css": ".content-container {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "hh.ru"
            ],
            "css": "html {\n    text-shadow: none !important;\n}"
        },
        {
            "url": [
                "hindustantimes.com"
            ],
            "invert": [
                ".menu.noti-dot",
                ".searchHolder .search",
                "img[src$=\"logo-big-cm.png\"]",
                "img[src$=\"logo-ht.png\"]",
                "img[src$=\"htlogo.png\"]"
            ]
        },
        {
            "url": [
                "homebrewery.naturalcrit.com"
            ],
            "css": ".CodeMirror-scroll {\n  background-color: #444;\n}\nspan[role=\"presentation\"] {\n  color: white;\n}\n\nspan[role=\"presentation\"] > .cm-header {\n  color: rgb(50, 150, 250);\n}\n\nspan[role=\"presentation\"] > .cm-variable-2 {\n  color: rgb(50, 150, 250);\n}\n\n.phb blockquote {\n  background-color: #e0e5c1 !important;\n}\n\n.phb h3, .phb h2, .phb h1 {\n  color: #58180D;\n}\n\n.phb p {\n  color: black;\n}\n\n.cm-link,.cm-attribute {\n  color: rgb(90, 140, 255) !important;\n}\n\n.cm-url,.cm-string {\n  color: rgb(200, 50, 50) !important;\n}\n\n.cm-quote,.cm-tag {\n  color: rgb(50, 200, 50) !important;\n}"
        },
        {
            "url": [
                "hootsuite.com"
            ],
            "invert": [
                "img[src$=\"hootsuite_white_form3.png\"]"
            ]
        },
        {
            "url": [
                "howbuy.com"
            ],
            "invert": [
                ".bottomStar",
                ".cpBottomWord",
                ".logo",
                ".navList dt",
                ".phCon",
                ".title",
                "#valuationChar"
            ]
        },
        {
            "url": [
                "hypixel.net"
            ],
            "invert": [
                ".p-nav-inner",
                ".message-avatar::after"
            ],
            "css": ".p-navEl-link, .p-header-playNow .p-header-playNow-button, .p-navgroup-link--search {\n    color: ${rgb(214, 210, 205)} !important;\n}"
        },
        {
            "url": [
                "iett.istanbul"
            ],
            "css": ".LineTimeDuyuru > li:nth-child(1) {\n    display:none;\n}\n.LineTimeDuyuru::before {\n    content: \"Kırmızı renkli seferler ÖHO ve OAŞ'a, beyaz renkli seferler İETT'ye aittir.\"\n}\n.DetailTable img {\n    filter: invert(100%) hue-rotate(180deg) !important;\n}"
        },
        {
            "url": [
                "ikea.*"
            ],
            "css": ".range-revamp-ratings-bar__star--empty path,\n.range-revamp-ratings-bar__star--half path:first-child  {\n    fill: ${rgb(246, 245, 244)} !important;\n}",
            "ignoreInlineStyle": [
                ".gpr__color-dot"
            ]
        },
        {
            "url": [
                "iliad.it"
            ],
            "ignoreImageAnalysis": [
                ".background"
            ]
        },
        {
            "url": [
                "ilyabirman.*"
            ],
            "invert": [
                "img[src*=\"layout-win\"]"
            ],
            "css": "body {\n    background: none !important;\n}"
        },
        {
            "url": [
                "imdb.com"
            ],
            "invert": [
                ".a-icon"
            ],
            "css": "#wrapper {\n    background: ${#e3e2dd} !important;\n}"
        },
        {
            "url": [
                "infinitysearch.co"
            ],
            "invert": [
                "img[src$=\"github.ico\"]",
                "img[src$=\"unsplash.png\"]",
                "img[src$=\"boardreader.ico\"]",
                "#logo_img_home[src$=\"logo_text_black.png\"]"
            ]
        },
        {
            "url": [
                "inoreader.com"
            ],
            "css": ".article_expanded {\n    background-color: rgb(31, 35, 38) !important;\n}"
        },
        {
            "url": [
                "instagram.com"
            ],
            "invert": [
                ".s4Iyt",
                ".coreSpriteActivityHeart",
                ".coreSpriteAppStoreButton",
                ".coreSpriteCall",
                ".coreSpriteCheck",
                ".coreSpriteCi",
                ".coreSpriteClose",
                ".coreSpriteDesktopNavDirect",
                ".coreSpriteDesktopProfileSaveActive",
                ".coreSpriteDesktopProfileTaggedActive",
                ".coreSpriteDirectHeart",
                ".coreSpriteDownload",
                ".coreSpriteDropdownArrowGrey9",
                ".coreSpriteGallery",
                ".coreSpriteGooglePlayButton",
                ".coreSpriteKeyhole",
                ".coreSpriteLockSmall",
                ".coreSpriteLoggedOutWordmark",
                ".coreSpriteMobileNavDirect",
                ".coreSpriteMobileNavTypeLogo",
                ".coreSpriteNavBack",
                ".coreSpriteNotificationLeftChevron",
                ".coreSpriteNullProfile",
                ".coreSpriteOptionsEllipsis",
                ".coreSpritePagingChevron",
                ".coreSpriteProfileCamera",
                ".coreSpriteReload",
                ".coreSpriteSaveNull",
                ".coreSpriteSpinstaStory",
                ".coreSpriteStoryCreation",
                ".coreSpriteTaggedNull",
                ".coreSpriteVideoNux",
                ".coreSpriteWindowsStoreButton",
                ".coreSpriteWordmark",
                ".glyphsSpriteAdd__outline__24__grey_9",
                ".glyphsSpriteAdd_friend__outline__96",
                ".glyphsSpriteApp_instagram__outline__24__grey_9",
                ".glyphsSpriteApp_messenger__outline__24__grey_9",
                ".glyphsSpriteApp_twitter__outline__24__grey_9",
                ".glyphsSpriteApp_whatsapp__outline__24__grey_9",
                ".glyphsSpriteCall__outline__24__grey_9",
                ".glyphsSpriteCamera__outline__24__grey_9",
                ".glyphsSpriteChevron_down__outline__24__grey_9",
                ".glyphsSpriteChevron_left__outline__24__grey_9",
                ".glyphsSpriteChevron_up__outline__24__grey_9",
                ".glyphsSpriteCircle_add__outline__24__grey_9",
                ".glyphsSpriteComment__outline__24__grey_9",
                ".glyphsSpriteContact_import",
                ".glyphsSpriteContact_import_sm",
                ".glyphsSpriteDirect__outline__24__grey_9",
                ".glyphsSpriteDirect__outline__96",
                ".glyphsSpriteDownload_2FAC",
                ".glyphsSpriteError__outline__24__grey_9",
                ".glyphsSpriteError__outline__96",
                ".glyphsSpriteFacebook__outline__24__grey_9",
                ".glyphsSpriteFb_brand_center_grey",
                ".glyphsSpriteForward__outline__24__grey_9",
                ".glyphsSpriteFriend_Follow",
                ".glyphsSpriteGlyph_chevron_right",
                ".glyphsSpriteHashtag__outline__24__grey_9",
                ".glyphsSpriteHeart__filled__16__grey_9",
                ".glyphsSpriteHeart__filled__24__grey_9",
                ".glyphsSpriteHeart__outline__24__grey_9",
                ".glyphsSpriteHome__filled__24__grey_9",
                ".glyphsSpriteHome__outline__24__grey_9",
                ".glyphsSpriteInfo__filled__16__grey_9",
                ".glyphsSpriteLink__outline__24__grey_9",
                ".glyphsSpriteLocation__outline__24__grey_9",
                ".glyphsSpriteLock__outline__24__grey_9",
                ".glyphsSpriteLock__outline__96",
                ".glyphsSpriteMail__outline__24__grey_9",
                ".glyphsSpriteMenu__outline__24__grey_9",
                ".glyphsSpriteMore_horizontal__outline__24__grey_9",
                ".glyphsSpriteNew_post__outline__24__grey_9",
                ".glyphsSpritePaging_chevron",
                ".glyphsSpritePlay__filled__16__grey_9",
                ".glyphsSpriteSave__filled__24__grey_9",
                ".glyphsSpriteSave__outline__24__grey_9",
                ".glyphsSpriteSearch__filled__24__grey_9",
                ".glyphsSpriteSearch__outline__24__grey_9",
                ".glyphsSpriteSettings__outline__24__grey_9",
                ".glyphsSpriteShare__outline__24__grey_9",
                ".glyphsSpriteShopping__outline__16__grey_9",
                ".glyphsSpriteStar_filled_24",
                ".glyphsSpriteStar_half_filled_24",
                ".glyphsSpriteStory__outline__24__grey_9",
                ".glyphsSpriteUser__filled__24__grey_9",
                ".glyphsSpriteUser__outline__24__grey_9",
                ".glyphsSpriteUser_follow__filled__24__grey_9",
                ".glyphsSpriteUser_follow__outline__24__grey_9",
                ".glyphsSpriteUsers__outline__24__grey_9",
                ".glyphsSpriteVideo_chat__outline__24__grey_9",
                ".glyphsSpriteWhatsapp__outline__24__grey_9",
                ".glyphsSpriteX__outline__24__grey_9",
                "span.LikeSprite.embedSpriteHeartOpen",
                "span.hideText.embedSpriteComment",
                "span.hideText.embedSpriteShare",
                "span.hideText.embedSpriteSaveOpen",
                "span.Sprite.embedSpriteGlyph.hideText",
                ".-Nmqg"
            ],
            "css": ".tlZCJ:checked ~ .mwD2G::before {\n    border-bottom-color: ${rgb(56, 56, 56)} !important;\n    border-left-color: ${rgb(56, 56, 56)} !important;\n}"
        },
        {
            "url": [
                "instructure.com"
            ],
            "invert": [
                ".equation_image"
            ]
        },
        {
            "url": [
                "ipko.pl"
            ],
            "invert": [
                ".ZLc3L",
                "._1IGN3",
                "a.x-logo"
            ],
            "css": "._1IGN3 {\n    background-size: 75px 56px !important;\n}\n._3cnGx::before {\n    background-size: 112px 80px !important;\n}"
        },
        {
            "url": [
                "isbgpsafeyet.com"
            ],
            "css": "h1, h2, h3,\nh4, h5, h6 {\n    color: rgb(255, 255, 255) !important;\n}\n.Hero, .Footer {\n    background: None !important;\n}\n.Button-is-primary {\n    background: var(--primary-background-color);\n}"
        },
        {
            "url": [
                "itch.io"
            ],
            "invert": [
                ".header_widget .mobile_nav_btn"
            ]
        },
        {
            "url": [
                "jailbreak.fce365.info"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "jamboard.google.com"
            ],
            "invert": [
                ".docs-icon-img-container",
                ".jam-button-content",
                ".jam-icon-palette-black",
                ".jam-icon-sticky-note-black"
            ]
        },
        {
            "url": [
                "java.com"
            ],
            "invert": [
                "html #jvc0v2.bg1 .jvc0w1",
                "html #jvc0v2.bg3 .jvc0w1",
                "html #jvc0v2.bg5 .jvc0w1"
            ]
        },
        {
            "url": [
                "jira.*.com"
            ],
            "invert": [
                ".aui-dropdown2-trigger::after"
            ]
        },
        {
            "url": [
                "jisho.org"
            ],
            "invert": [
                "h1.logo"
            ]
        },
        {
            "url": [
                "jobs.github.com"
            ],
            "css": "#page {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "journal.tinkoff.ru"
            ],
            "invert": [
                ".g2tvv",
                "._3aEco",
                "._1Dhxk",
                ".uVy35.V6dif::before",
                "._38Vkx.FrrKu::after",
                "._3LO60._4GqdT::after",
                ".PwECA",
                ".best-authors__arrow.best-authors__arrow--active",
                ".best-authors__arrow"
            ]
        },
        {
            "url": [
                "jpl.nasa.gov"
            ],
            "css": ".brand_area {\n   background-image: url(\"https://www.jpl.nasa.gov/assets/images/logo_nasa_trio_white@2x.png\") !important;\n}"
        },
        {
            "url": [
                "jsdelivr.com"
            ],
            "invert": [
                ".navbar-brand > img"
            ]
        },
        {
            "url": [
                "juejin.im"
            ],
            "invert": [
                ".equation"
            ]
        },
        {
            "url": [
                "justhost.ru"
            ],
            "invert": [
                ".header__logo"
            ]
        },
        {
            "url": [
                "kaggle.com",
                "kaggleusercontent.com"
            ],
            "css": "div.output_png img {\n    background-color: ${black} !important;\n}",
            "ignoreInlineStyle": [
                "div.output_png img"
            ]
        },
        {
            "url": [
                "kaytrip.com"
            ],
            "invert": [
                ".date",
                ".jd_ss",
                ".liuchengt",
                ".nApp",
                ".nTel",
                ".n_app",
                ".tt_t",
                ".wmap"
            ],
            "css": "#imageField {\n    background-color: transparent !important;\n}\n.jd_xl {\n    filter: none !important;\n}"
        },
        {
            "url": [
                "keep.google.com"
            ],
            "invert": [
                ".gb_oe",
                ".gb_je",
                ".gb_ef",
                ".gb_hc"
            ]
        },
        {
            "url": [
                "keepa.com"
            ],
            "invert": [
                "div#loadingIcon",
                "div.pLText"
            ]
        },
        {
            "url": [
                "kenh14.vn"
            ],
            "css": ".kbwcb-left, .kbwcb-left::before {\n  background-image: none !important;\n}"
        },
        {
            "url": [
                "kfccoupons.co.nz"
            ],
            "css": ".img-container {\n    z-index: 0 !important;\n}\n.img-container > img {\n    filter: brightness(50%) sepia(40%) !important;\n}"
        },
        {
            "url": [
                "kinoart.ru"
            ],
            "invert": [
                "main > div > svg",
                "header > a > svg",
                "footer > div > svg",
                "header > div > a > svg"
            ]
        },
        {
            "url": [
                "knife.media"
            ],
            "invert": [
                "svg[class$=\"logo-image\"]",
                ".explorer__header-close"
            ]
        },
        {
            "url": [
                "komputerswiat.pl"
            ],
            "invert": [
                ".serviceIcon"
            ]
        },
        {
            "url": [
                "krita.org"
            ],
            "css": ".container {\n    background: none !important;\n}"
        },
        {
            "url": [
                "lambda-the-ultimate.org"
            ],
            "css": "a {\n    color: #3391ff !important;\n}"
        },
        {
            "url": [
                "languagetool.org"
            ],
            "invert": [
                "#checktext_ifr"
            ]
        },
        {
            "url": [
                "laptopmag.com"
            ],
            "invert": [
                "div#publisherDetails.logo",
                ".qc-cmp-publisher-logo"
            ]
        },
        {
            "url": [
                "last.fm"
            ],
            "invert": [
                ".resource-external-link--homepage::before"
            ],
            "css": ".user-dashboard-loved-tracks .user-dashboard-big-datapoint-value a {\n    color: ${#666666} !important;\n}\n.user-dashboard-catalogue-item-total a {\n    color: ${#666666} !important;\n}\n.highcharts-text-outline {\n    stroke: none !important;\n}\n.user-dashboard-scalable-content span {\n    color: ${#666666} !important;\n}",
            "ignoreImageAnalysis": [
                ".masthead-logo-loading",
                ".masthead-logo"
            ]
        },
        {
            "url": [
                "lastpass.com"
            ],
            "invert": [
                ".lp-header__logo--link"
            ]
        },
        {
            "url": [
                "launchpad.net"
            ],
            "invert": [
                ".edit-controls",
                "#launchpad-logo-and-name"
            ]
        },
        {
            "url": [
                "leetcode.com",
                "leetcode-cn.com"
            ],
            "invert": [
                ".cursor",
                ".CodeMirror-cursor",
                ".user-story-chapter-base .companies-showcase-base .logo"
            ],
            "css": "[class^=question-picker-detail] {\n    background: none !important;\n}\n.monaco-editor, .monaco-editor-background, .monaco-editor .margin {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "lenovo.com"
            ],
            "invert": [
                ".m-megaMenu"
            ],
            "css": ".m-mastheadUtilityLinks {\n    background: none !important;\n}"
        },
        {
            "url": [
                "lesbonscomptes.com"
            ],
            "css": ".important {\n    background-color: rgb(92, 92, 61) !important;\n}"
        },
        {
            "url": [
                "lichess.org"
            ],
            "ignoreImageAnalysis": [
                ".is2d .bishop.black",
                ".is2d .king.black",
                ".is2d .knight.black",
                ".is2d .pawn.black",
                ".is2d .queen.black",
                ".is2d .rook.black"
            ]
        },
        {
            "url": [
                "lightning.force.com"
            ],
            "css": ".slds-brand-band,\n.slds-brand-band:after,\n.slds-brand-band_cover,\n.slds-brand-band_medium,\n.slds-page-header,\n.slds-clearfix {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.slds-card {\n    background-color: #333333 !important;\n}\n.slds-button_neutral,\n.slds-button--neutral {\n    color: rgb(20, 150, 20) !important;\n}"
        },
        {
            "url": [
                "linkedin.com"
            ],
            "invert": [
                "img[src*=\"company-logo\"]"
            ],
            "css": ":root {\n    --color-text-low-emphasis: ${rgba(0,0,0,0.6)};\n}\n.js-job-card-company-logo {\n    background-color: rgba(255, 255, 255, 0.20);\n    background-blend-mode: color;\n}\n.global-footer-compact__linkedin-logo,\nli-icon[type=\"linkedin-logo\"],\n.bug-text-color {\n    fill: ${black} !important;\n}\n.pds-ge-entry-card__card {\n  background: linear-gradient(to bottom, var(--color-action, var(--blue-70, #0073b1)), var(--color-action, var(--blue-70, #0073b1)) 4px, var(--darkreader-neutral-background, #fff) 4px, var(--darkreader-neutral-background, #fff)) !important;\n}\n.vjs-load-progress {\n    background-color: hsla(0,0%,100%,.3) !important;\n}\n.vjs-play-progress, .vjs-play-progress::before,\n.vjs-volume-level::before, .vjs-volume-level {\n    background-color: #fff !important;\n}\n.vjs-volume-bar {\n    background-color: hsla(0,0%,100%,.4) !important;\n}\n.ghost-company,\n.ghost-person {\n    background-size: 100% 100% !important;\n}\n.artdeco-pill {\n    background-color: ${#ccc} !important;\n}"
        },
        {
            "url": [
                "linode.com"
            ],
            "invert": [
                ".c-identity__image"
            ],
            "css": ".o-form__input {\n    background-color: rgb(41, 44, 46) !important;\n    border-color: rgb(232, 230, 227) !important;\n    color: rgb(232, 230, 227) !important;\n}\n\n.o-form__input:hover {\n    background: transparent !important;\n}\n\n.o-form__icon::before {\n    color: rgb(232, 230, 227) !important;\n}\n\n.o-form__input::placeholder {\n   color: rgb(232, 230, 227) !important;\n}\n\n.o-button, o-button--secondary {\n    background-color: rgb(41, 44, 46) !important;\n    border-color: rgb(232, 230, 227) !important;\n    color: rgb(232, 230, 227) !important;\n}\n\n.o-button:hover {\n    background: transparent !important;\n}"
        },
        {
            "url": [
                "linotype.com"
            ],
            "invert": [
                "#logo"
            ]
        },
        {
            "url": [
                "linuxgrandma.blogspot.com"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "linuxmint.com"
            ],
            "css": "body {\n   background-color: #e4ffc9 !important;\n}",
            "ignoreImageAnalysis": [
                "#wrapper"
            ]
        },
        {
            "url": [
                "lirc.org"
            ],
            "css": "body {\n    background: none !important;\n}"
        },
        {
            "url": [
                "livemint.com"
            ],
            "invert": [
                "div.icoMenu",
                "a.icoSearch.iconSprite",
                "a.icoBell.iconSprite",
                "a.icoBookmark2.iconSprite",
                "a.icoBookmark3.iconSprite",
                "a.icoTwit.iconSprite",
                "div.icoShare.iconSprite"
            ]
        },
        {
            "url": [
                "lkml.org"
            ],
            "invert": [
                "img[src*=\"corner\"]"
            ],
            "css": "body {\n    background-image: none !important;\n}\ntd.c {\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "login.live.com"
            ],
            "invert": [
                "div[id$=\"Proofs\"] .tile-img"
            ]
        },
        {
            "url": [
                "login.yahoo.com"
            ],
            "invert": [
                ".social-login",
                "label[for=persistent]::before"
            ],
            "ignoreImageAnalysis": [
                ".social-login"
            ]
        },
        {
            "url": [
                "lowes.com"
            ],
            "css": "img {\n    mix-blend-mode: normal !important;\n}"
        },
        {
            "url": [
                "m.dianping.com"
            ],
            "invert": [
                ".flash-screen",
                ".header-download-img"
            ]
        },
        {
            "url": [
                "m.slashdot.org"
            ],
            "css": ".slashbar,\n.story-prop,\n#discussion,\n#filler {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "madshi.net"
            ],
            "css": "body,\ntr,\ntd {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "magazine.skyeng.ru"
            ],
            "invert": [
                ".header__logo__img"
            ]
        },
        {
            "url": [
                "magazynbieganie.pl"
            ],
            "invert": [
                ".logo-box"
            ]
        },
        {
            "url": [
                "magic.freizeitspieler.de"
            ],
            "invert": [
                "img[src=\"pics/MtG-Freizeitspieler.gif\"]"
            ],
            "css": "body {\n    background-image: none !important\n}"
        },
        {
            "url": [
                "mail.google.com"
            ],
            "invert": [
                "img.Hl",
                "img.Hk",
                "img.Ha",
                ".asor_t0",
                ".asor_i4",
                ".ita-icon-0",
                ".d-Na-Jo.d-Na-N-ax3",
                ".RK-QJ-Jk",
                ".RK-Mo.RK-Qq-LF",
                "#ita-st-id-cs",
                ".d-Na-N-M7-JX.d-Na-J3",
                ".gb_df",
                "img[src$=\"google_gsuite\"]",
                "img[src$=\"profile_mask2.png\"]",
                ".rY>.sa",
                ".buh",
                ".qj.qr::before",
                ".qj.qr::after"
            ],
            "css": "@media (min-resolution: 144dpi), (-webkit-min-device-pixel-ratio: 1.5) {\n    .buk {\n        background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_default_v1_2x.png) !important;\n    }\n    .bui {\n        background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_comfortable_v1_2x.png) !important;\n    }\n    .buj {\n        background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_compact_v1_2x.png) !important;\n    }\n}\n.buk {\n    background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_default_v1_1x.png) !important;\n}\n.bui {\n    background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_comfortable_v1_1x.png) !important;\n}\n.buj {\n    background-image: url(//ssl.gstatic.com/ui/v1/icons/mail/rfr/density_compact_v1_1x.png) !important;\n}\n::-webkit-scrollbar-thumb {\n    background-color: #424242 !important;\n}\n::-webkit-scrollbar {\n    background-color: transparent !important\n}",
            "ignoreInlineStyle": [
                ".at",
                ".au",
                ".av",
                ".qj",
                ".hU.hM",
                ".hV.hM",
                ".ajZ-Jt",
                ".aH5",
                ".JA-Kn-Jr-Kw-Jt"
            ]
        },
        {
            "url": [
                "mail.protonmail.com"
            ],
            "css": ".customCheckbox-input + .customCheckbox-mask {\n    background: #262829 !important;\n}"
        },
        {
            "url": [
                "manjaro.org"
            ],
            "css": ".page-header-image {\n    z-index: 0 !important;\n}"
        },
        {
            "url": [
                "mapa-turystyczna.pl"
            ],
            "invert": [
                ".ts-map svg"
            ]
        },
        {
            "url": [
                "maps.metager.de"
            ],
            "invert": [
                ".map canvas"
            ]
        },
        {
            "url": [
                "marginalrevolution.com"
            ],
            "invert": [
                ".logo-mobile",
                ".logo-desktop",
                "img[src$=\"mru-logo-450.png\"]"
            ],
            "css": "nav {\n  background-color: #288d73 !important;\n}"
        },
        {
            "url": [
                "marinij.com"
            ],
            "invert": [
                ".custom-logo.logo > a > img"
            ]
        },
        {
            "url": [
                "marketplace.visualstudio.com"
            ],
            "css": ".ux-updated-date {\n    color: ${rgb(55, 255, 0)} !important;\n}\n.ms-Grid-row {\n    color: ${rgba(0, 0, 0, .8)} !important;\n}"
        },
        {
            "url": [
                "marktplaats.nl"
            ],
            "invert": [
                ".mp-Header-logo",
                ".mp-svg-messages",
                ".mp-svg-notification",
                ".mp-svg-profile",
                ".svg-icon-block"
            ]
        },
        {
            "url": [
                "mastarti.com",
                "streamguard.cc"
            ],
            "invert": [
                ".fp-play-icon div",
                ".fp-pause-icon .fp-pause-block div",
                ".fp-volumebar em.fp-color",
                ".fp-fullscreen-line",
                ".fp-fullscreen-dot"
            ]
        },
        {
            "url": [
                "mathsisfun.com"
            ],
            "css": "#searchFld {\n    background-color: var(--darkreader-neutral-background) !important;\n    border-color: black !important;\n}\n\n#searchBtn {\n    border-color: black !important;\n    background-color: var(--darkreader-neutral-background) !important;                                                                                                       \n}\n\n#content h1 {\n    color: var(--darkreader-neutral-text) !important;\n}\n\n#hdr {\n    opacity: 0.2;\n}\n\n#menuWide li{\n    background-color: rgb(64, 99, 255) !important;\n    color: white !important;\n}\n\n#menuWide li:hover {\n    background-color: rgb(18, 35, 112) !important;\n}"
        },
        {
            "url": [
                "matrix.org"
            ],
            "invert": [
                ".mxnavbar__logo",
                ".mxnavsection__icon",
                ".mxgrid__item__bg__img",
                ".mxblock__explore__item__img"
            ]
        },
        {
            "url": [
                "matsci.org"
            ],
            "invert": [
                ".d-header #site-logo"
            ],
            "css": ".category-logo.aspect-image img {\n  background-color: white !important;\n}"
        },
        {
            "url": [
                "matters.news"
            ],
            "css": "section[class$=\"container\"][style^=\"background-image\"] {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "medium.com"
            ],
            "invert": [
                ".svgIcon",
                ".svgIcon-use"
            ],
            "css": "a {\n  text-decoration-line: underline !important;\n}"
        },
        {
            "url": [
                "medium.freecodecamp.org"
            ],
            "css": "span.markup--quote.markup--p-quote.is-other {\n    background-image: linear-gradient(rgba(14, 255, 167, 0.2), rgba(14, 255, 167, 0.2)) !important;\n}"
        },
        {
            "url": [
                "meet.google.com"
            ],
            "ignoreInlineStyle": [
                "svg[preserveAspectRatio*=\"meet\"] *"
            ]
        },
        {
            "url": [
                "mega.nz"
            ],
            "invert": [
                "a.fm-files-view-icon",
                "a.top-icon.menu",
                "div.checkdiv.megaapp-download.checkboxOff.switches",
                "div.fm-dialog-close.medium",
                "div.nw-tree-panel-arrows.icons-sprite",
                "i.small-icon.context",
                "i.small-icon.dialog-sprite.arrows-to-bottom",
                "i.small-icon.dialog-sprite.arrows-to-top",
                "i.small-icon.download-as-zip",
                "i.small-icon.icons-sprite.tiny-grey-tick",
                "i.small-icon.import-to-cloud",
                "i.top-menu-icon.menus-sprite",
                "i.transfer-progress-icon",
                "span.top-icon.language"
            ],
            "css": ".files-grid-view.fm .column-settings {\n    background-color: ${#181a1b} !important;\n}"
        },
        {
            "url": [
                "meituan.com"
            ],
            "invert": [
                ".dpLogo",
                ".header-title",
                ".site-logo"
            ]
        },
        {
            "url": [
                "messages.android.com"
            ],
            "invert": [
                ".x4Tquc",
                ".QrWqSe",
                ".XCHXxd",
                ".pXeIKc"
            ]
        },
        {
            "url": [
                "messages.google.com"
            ],
            "invert": [
                ".x4Tquc",
                ".QrWqSe",
                ".XCHXxd",
                ".pXeIKc"
            ],
            "css": ".input-background {\n  --input-bg-fade-color: #202124 !important;\n}"
        },
        {
            "url": [
                "messenger.com"
            ],
            "invert": [
                "._4rv6",
                "a._4ce_"
            ],
            "css": "._8rsr {\n  fill: #0098ff !important;\n}\n._576q mask path {\n  fill: white !important;\n}\n._576q mask rect {\n  fill: black !important;\n}\n._576q div {\n  background-color: transparent !important;\n}\n.j7vl6m33 {\n    fill: var(--always-white) !important;\n}"
        },
        {
            "url": [
                "microsoft.com",
                "answers.microsoft.com"
            ],
            "invert": [
                "img[src*=\"img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4sQDc\"]",
                "img[src*=\"img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4pxBu\"]",
                "img[src*=\"img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4pkvE\"]",
                "img[src*=\"/static/images/inreplyto.svg\"]",
                "img[src*=\"img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4pndL\"]"
            ],
            "css": ".c-logo .c-image {\n    background: ${white} !important;\n}"
        },
        {
            "url": [
                "midkar.com"
            ],
            "css": "body {\n    background-image: unset !important;\n}"
        },
        {
            "url": [
                "miktex.org"
            ],
            "invert": [
                ".icon-bar"
            ],
            "css": "body,\n.site-footer {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "mixcloud.com"
            ],
            "invert": [
                ".cQABPj"
            ],
            "ignoreInlineStyle": [
                "path[fill=\"none\"]",
                "path[fill-rule=\"evenodd\"]"
            ]
        },
        {
            "url": [
                "mnt.ee"
            ],
            "css": "#zone-content-wrapper {\n    color: var(--darkreader-neutral-text) !important;\n}\n\n#zone-content {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "mobiel.nl"
            ],
            "invert": [
                ".credit-warning__image",
                ".dt-carousel-home__dots",
                ".spec__network",
                "img[alt=\"Tele2\"]",
                "img[alt=\"hollandsnieuwe\"]",
                ".header-main__icon",
                ".spec__network-ready"
            ],
            "ignoreInlineStyle": [
                ".version-without-subscription-row__color",
                ".gEJLdA"
            ]
        },
        {
            "url": [
                "moegirl.org.cn"
            ],
            "css": "span.heimu a.external,\nspan.heimu a.external:visited,\nspan.heimu a.extiw,\nspan.heimu a.extiw:visited {\n    color: #dadada !important;\n}\n.heimu,\n.heimu a,\na .heimu,\n.heimu a.new {\n    background-color: #dadada !important;\n    color: #dadada !important;\n}\nbody:not(.heimu_toggle_on) .heimu:hover,\nbody:not(.heimu_toggle_on) .heimu:active,\nbody:not(.heimu_toggle_on) .heimu.off {\n    color: black !important;\n}\nbody:not(.heimu_toggle_on) .heimu:hover a,\nbody:not(.heimu_toggle_on) a:hover .heimu,\nbody:not(.heimu_toggle_on) .heimu.off a,\nbody:not(.heimu_toggle_on) a:hover .heimu.off {\n    color: darkblue !important;\n}\nbody:not(.heimu_toggle_on) .heimu.off .new,\nbody:not(.heimu_toggle_on) .heimu.off .new:hover,\nbody:not(.heimu_toggle_on) .new:hover .heimu.off,\nbody:not(.heimu_toggle_on) .heimu.off .new,\nbody:not(.heimu_toggle_on) .heimu.off .new:hover,\nbody:not(.heimu_toggle_on) .new:hover .heimu.off {\n    color: #BA0000 !important;\n}"
        },
        {
            "url": [
                "monstercat.com"
            ],
            "css": ".volume-slider-outer {\n  z-index: -99999999999;\n  background-color: ${#4d4d4d} !important;\n}\n.volume-slider-inner{\n  background-color: ${#1873cc} !important;\n}\n.volume-slider-handle {\n  background-color: ${#1d1d1d} !important;\n}\n.title, h3, .line-bottom, .line-top, a, .one-line-ellipsis {\n  color: ${#4b4e50} !important;\n}"
        },
        {
            "url": [
                "moodle.herzen.spb.ru"
            ],
            "invert": [
                ".img-responsive"
            ]
        },
        {
            "url": [
                "moovitapp.com"
            ],
            "invert": [
                ".map",
                ".logo"
            ]
        },
        {
            "url": [
                "morele.net"
            ],
            "invert": [
                ".h-logo.col",
                ".h-control-btn > [src=\"/static/img/shop/icon-bezpieczna-dostawa.svg\"]",
                ".swiper-slide-visible.mx-auto.swiper-slide > .d-flex.img-container",
                "div.cn-different-frontend.cn-menu-item-hover.cn-shop > .cn-main-name.cn-name > .cn-name-value > span:nth-of-type(1)"
            ]
        },
        {
            "url": [
                "moto.pl"
            ],
            "invert": [
                "img[src=\"https://bi.im-g.pl/im/0/24525/m24525630.png\"]"
            ],
            "css": ".main_wrapper,\n.top_section_bg, .bottom_section_bg {\n    background-color: ${#e5e5e5} !important;\n}"
        },
        {
            "url": [
                "mozilla.org"
            ],
            "invert": [
                "img.sidebar-icon"
            ],
            "css": "div.mzp-c-navigation-logo {\n    background: ${black} !important;\n}"
        },
        {
            "url": [
                "mp.weixin.qq.com"
            ],
            "invert": [
                ".audio_card_progress",
                ".audio_card_progress_handle"
            ]
        },
        {
            "url": [
                "msmgtoolkit.in"
            ],
            "css": ".cid-r89gzwx5mR .mbr-section-title {\n    color: ${white};\n}\n.cid-r89gzwx5mR .mbr-section-subtitle {\n    color: ${white};\n}"
        },
        {
            "url": [
                "msys2.org"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "mullvad.net"
            ],
            "css": "#bg {\n    fill: #192E45;\n}"
        },
        {
            "url": [
                "music.163.com"
            ],
            "invert": [
                ".logo"
            ],
            "css": ".n-myinfo {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "music.amazon.*"
            ],
            "css": ".listViewStatusButtonInLibrary .add,\n.listViewStatusButtonInLibrary .added {\n    background-color: ${black} !important;\n}\n\n.slider .scrubber,\n.slider .scrubberHandle,\n.slider .sliderTrackRemainder {\n    background-color: ${black} !important;\n}"
        },
        {
            "url": [
                "my.bible.com"
            ],
            "css": ".nav-title {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "my.nextdns.io"
            ],
            "invert": [
                "img[src*=\"/static/media/logo-large\"]",
                "img[src*=\"/static/media/samsung\"]",
                "img[src*=\"/static/media/sonos\"]",
                "a.d-none.d-md-inline"
            ],
            "css": ".text-right[style*=\"opacity: 0.3\"] {\n    opacity: 0.6 !important;\n}"
        },
        {
            "url": [
                "my.nintendo.com"
            ],
            "css": ".Layout-app,\n.signUpButton {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "myaccount.google.com"
            ],
            "invert": [
                "c-wiz ul img"
            ]
        },
        {
            "url": [
                "myaccount.suse.com"
            ],
            "invert": [
                ".auth-org-logo",
                ".logo"
            ]
        },
        {
            "url": [
                "natemat.pl"
            ],
            "invert": [
                ".header__brand",
                ".header__box__list--social--search",
                ".header__facebook",
                ".header__hamburger"
            ]
        },
        {
            "url": [
                "nature.com"
            ],
            "invert": [
                ".header-logo"
            ]
        },
        {
            "url": [
                "nbc12.com"
            ],
            "invert": [
                "div.logo.logo-slim",
                "div.logo.logo-large.logo-footer"
            ],
            "ignoreImageAnalysis": [
                ".logo"
            ]
        },
        {
            "url": [
                "neowin.net"
            ],
            "css": ".select option {\n    background-color: #1c1e1f !important;\n    color: white !important;\n}"
        },
        {
            "url": [
                "netzpolitik.org"
            ],
            "invert": [
                "img[src*=\"/wp-content/themes/liebefeld/images/netzpolitik_logo.svg\"]",
                "img[src*=\"/wp-content/themes/liebefeld/images/palasthotel.svg\"]",
                "a.menu__canvas--toggle"
            ]
        },
        {
            "url": [
                "news.mynavi.jp"
            ],
            "invert": [
                ".itsearch-head .logo",
                ".site-header__bnr",
                ".site-header__logo"
            ]
        },
        {
            "url": [
                "news.ycombinator.com"
            ],
            "invert": [
                ".votearrow"
            ]
        },
        {
            "url": [
                "newyorker.com"
            ],
            "invert": [
                ".responsive-image__image"
            ]
        },
        {
            "url": [
                "nexojornal.com.br"
            ],
            "invert": [
                ".g-aiImg"
            ]
        },
        {
            "url": [
                "nextdns.io"
            ],
            "css": ".index .key-features .feature.blocklists {\n    background-image: none !important;\n}",
            "ignoreInlineStyle": [
                "path.rsm-geography"
            ],
            "ignoreImageAnalysis": [
                ".index .hero .content .logo"
            ]
        },
        {
            "url": [
                "ngrok.com"
            ],
            "invert": [
                ".customer-logos"
            ],
            "css": ".browser path[fill=\"#BBB\"], .browser g[fill=\"#BBB\"] {\n    fill: #BBB !important;\n}\n.terminal tspan[fill=\"#FFF\"] {\n    fill: #FFF !important;\n}\n.terminal tspan[fill=\"#BBB\"] {\n    fill: #BBB !important;\n}"
        },
        {
            "url": [
                "nicehash.com"
            ],
            "invert": [
                ".chart"
            ]
        },
        {
            "url": [
                "nirsoft.net"
            ],
            "css": ".menub1 a:link, .menub1 a:visited{\n    color: #0040ff;\n}\n.menub1 a:hover {\n    color: #ffffd0;\n}"
        },
        {
            "url": [
                "nokia.com"
            ],
            "css": ".pds-background-cover > .pds-background-image-set {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.pds-background-cover video {\n    filter: brightness(50%) sepia(40%) !important;\n}"
        },
        {
            "url": [
                "notion.so"
            ],
            "css": ".notion-divider-block div div {\n    border-bottom: 1px solid ${rgba(55, 53, 47, 0.4)} !important;\n}"
        },
        {
            "url": [
                "npmjs.com"
            ],
            "invert": [
                "header a[href=\"/\"] svg",
                "#orgs_panel img.h2",
                "#enterprise_detail_panel img.h2",
                "#customers_panel img[src*=\"adobe.full.png\"]",
                "#customers_panel img[src*=\"bbc.full.png\"]",
                "#customers_panel img[src*=\"conde-nast.full.png\"]",
                "#customers_panel img[src*=\"netflix.full.png\"]",
                "#customers_panel img[src*=\"visa.full.png\"]",
                "._5532dff2",
                "._93bbf0b4"
            ]
        },
        {
            "url": [
                "ntlite.com"
            ],
            "css": ".fr-wrapper *::selection {\n    background-color: dodgerblue !important;\n}"
        },
        {
            "url": [
                "numpy.org"
            ],
            "invert": [
                ".math"
            ]
        },
        {
            "url": [
                "nvidia.com",
                "nvidia.in"
            ],
            "invert": [
                "svg.global-footer__logo",
                "a.brandLink"
            ],
            "css": "div.nvidia a svg {\n    fill: ${black} !important;\n}\ndiv.brand-container a svg {\n    fill: ${black} !important;\n}"
        },
        {
            "url": [
                "nytimes.com"
            ],
            "invert": [
                ".svelte-1v1dl99"
            ],
            "css": ".css-oylsik,\n.css-nhjhh0 svg,\n.css-18z7m18 svg,\n.css-1q2j1fr svg,\na[data-testid] > svg {\n    fill: ${black} !important;\n}\n\n.headline-link div {\n    color: ${black} !important;\n}\n\n.headline-link div:hover {\n    color: ${#555} !important;\n}\n\n.svelte-15nnlbj {\n    font-weight: bold !important;\n}"
        },
        {
            "url": [
                "nzbget.*"
            ],
            "invert": [
                ".icon-top",
                ".icon-bottom",
                ".icon-up",
                ".icon-down"
            ]
        },
        {
            "url": [
                "nzz.ch"
            ],
            "invert": [
                ".logo"
            ],
            "css": ".logo {\n    background-color: unset !important;\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "olx.pl"
            ],
            "ignoreImageAnalysis": [
                ".cat-icon-628",
                ".cat-icon-87"
            ]
        },
        {
            "url": [
                "omnicalculator.com"
            ],
            "invert": [
                ".GenericText"
            ]
        },
        {
            "url": [
                "omnivox.ca"
            ],
            "invert": [
                "td[style*=\"/cvir/UI\"]",
                "img[src^=\"/cvir/UI/Theme/Lea_Defaut/Images/Accueil_LEA\"]",
                "img[src=\"/cvir/UI/Theme/Lea_Defaut/Images/mesclasses_cg_subtop.jpg\"]",
                "img[src^=\"/cvir/UI/Theme/Lea_Defaut/Images/accueil_\"]",
                "img[src$=\"/bas_du_menu.jpg\"]",
                "img[src$=\"tile.jpg\"]",
                ".cgSelect",
                ".mioLinks",
                ".calendrier",
                ".servLinks",
                ".descSection"
            ],
            "css": ".cgSelect > table > tbody > tr > td:nth-child(1) > a > font {\n    color: green !important;\n}\n.calendrier > table > tbody > tr,\n.calendrier > table > tbody > tr > td > img,\n.calendrier > table > tbody > tr > td > table > tbody > tr > td > img\n{\n    filter: invert(100%) hue-rotate(180deg) contrast(100%) !important;\n}\n\ntable[style*=\"/cvir/UI\"],\n.cgBg\n{\n    background-image: none !important\n}"
        },
        {
            "url": [
                "onet.pl"
            ],
            "invert": [
                ".websiteLogo",
                ".serviceIcon",
                ".serviceLogo",
                ".sheet",
                ".logoImage",
                ".locationName svg",
                ".logoImageRight",
                ".weatherBox .iconNow",
                ".forecast img",
                ".weatherIcon",
                "ul.contentList img.icon",
                "._3ZySwSLi_pur0unnAQO2No",
                ".WeatherDay_tempIcon__3Uzdm"
            ],
            "css": ".mainBoxBgHolder {\n    background-color: rgba(0, 0, 0, 0.25);\n    background-blend-mode: color;\n}\n.weatherMap .mapLayer .fil0, #weatherChartsHolder .chartValue {\n    fill: rgb(128, 128, 128) !important;\n}"
        },
        {
            "url": [
                "online.noordhoff.nl"
            ],
            "invert": [
                "#EAGABA img"
            ]
        },
        {
            "url": [
                "online.rbb.bg"
            ],
            "invert": [
                ".has-context:hover",
                ".active",
                ".btn"
            ]
        },
        {
            "url": [
                "op.gg"
            ],
            "invert": [
                ".Level",
                ".ranking-highest__icon .ranking-highest__level"
            ]
        },
        {
            "url": [
                "openai.com"
            ],
            "invert": [
                "figure.release-cover>div:first-of-type>img"
            ],
            "css": "body {\n    background: initial !important;\n}\nheader[style*=\"background-image\"],\n.bg-cover[style*=\"background-image\"] {\n    background: none !important;\n}\n.is-below-fold .header--cover .nav,\n.is-below-fold .post-header--cover .nav {\n    background: ${white} !important;\n    color: ${black} !important;\n}\nsection, div, div.d-flex, ol>li::before, ul>li::before, p, text, a, span:not(.token), table, th, td, time {\n    color: ${black} !important;\n}\nspan.token.comment {\n    color: ${#aaa} !important;\n}\nspan.token.punctuation {\n    color: ${#777} !important;\n}\na.btn:not(.fade), button.btn {\n    background: ${rgba(5, 5, 38, 0.05)} !important;\n    color: ${#050526} !important;\n}\nbutton.btn:hover {\n    color: ${#b0b0b0} !important;\n}\nfigcaption, .caption {\n    color: ${rgba(5,5,38,0.5)} !important;\n}\n.content .timeline > li::before, .timeline > li::before {\n    color: ${black} !important;\n}\n.content .timeline > li::after, .timeline > li::after {\n    background-color: ${black} !important;\n}\n.switch-input:checked + .switch-label {\n    color: ${rgba(0, 0, 0, 0.7)} !important;\n}"
        },
        {
            "url": [
                "opencollective.com"
            ],
            "invert": [
                "img[alt=\"Open collective\"]"
            ],
            "css": "#section-contributors > div {\n    background-image: unset !important;\n}"
        },
        {
            "url": [
                "openebooks.net"
            ],
            "invert": [
                "img[src=\"images/home_banner.png\"]"
            ]
        },
        {
            "url": [
                "opengeofiction.net",
                "openstreetmap.org"
            ],
            "invert": [
                ".map-layout #map"
            ],
            "css": "div[dir=\"ltr\", id=\"map\"] {\n    filter: none !important;\n    background: #000 !important;\n}\n.map-layout #map {\n    background-color: ${#1b1b1b} !important;\n}"
        },
        {
            "url": [
                "openwall.com"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "orf.at/corona/*"
            ],
            "invert": [
                ".bg",
                ".annotation",
                ".sparkline--fill"
            ]
        },
        {
            "url": [
                "overleaf.com"
            ],
            "invert": [
                ".pdf-page-container"
            ]
        },
        {
            "url": [
                "ozbargain.com.au"
            ],
            "css": "div.comment-op {\n    background-image: linear-gradient(#000000, #212121) !important;\n}"
        },
        {
            "url": [
                "p30download.com"
            ],
            "css": ".article-wrapper {\n    color: ${#090702} !important;\n}"
        },
        {
            "url": [
                "paulgraham.com"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "pcpartpicker.com"
            ],
            "ignoreInlineStyle": [
                ".price-history-legend-color"
            ]
        },
        {
            "url": [
                "peardeck.com"
            ],
            "invert": [
                ".boxy-svg"
            ]
        },
        {
            "url": [
                "peonaviveu.blogspot.com"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "pgatour.com"
            ],
            "css": ".score-card tr td.birdie {\n    background-image: initial;\n    background-color: rgb(1, 76, 181);\n}"
        },
        {
            "url": [
                "pixiv.net"
            ],
            "css": ".jAENWx,\n.iYRMgo {\n    color: ${aliceblue} !important;\n}"
        },
        {
            "url": [
                "pl.glosbe.com"
            ],
            "invert": [
                "footer > div > div > a > img"
            ]
        },
        {
            "url": [
                "play.golang.org"
            ],
            "css": "#wrap {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "play.google.com"
            ],
            "invert": [
                ".bUWb7c",
                ".WF1WQd",
                "img[src=\"https://www.gstatic.com/android/market_images/web/play_prism_hlock_2x.png\"]",
                "a[href*=\"about/products\"]"
            ]
        },
        {
            "url": [
                "play.google.com/apps/publish"
            ],
            "invert": [
                ".IXNAUGB-u-e",
                ".IXNAUGB-U-g img",
                ".IXNAUGB-U-g",
                "img[src^=\"data:image/png;\"]",
                ".LTMPNY-u-e"
            ]
        },
        {
            "url": [
                "play.google.com/music"
            ],
            "invert": [
                ".music-logo",
                "a[title=\"Google apps\"]",
                ".song-row .rating-container"
            ]
        },
        {
            "url": [
                "plus.google.com"
            ],
            "invert": [
                "a.gb_b > div",
                "a[href*=\"about/products\"]"
            ]
        },
        {
            "url": [
                "polar.com"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "polskabiega.sport.pl"
            ],
            "css": ".main_wrapper {\n    background-color: #181a1b !important;\n}"
        },
        {
            "url": [
                "polskatimes.pl"
            ],
            "invert": [
                ".componentsNavigationNavbar__logo"
            ]
        },
        {
            "url": [
                "portal.qiniu.com"
            ],
            "invert": [
                ".global-loading-content img"
            ]
        },
        {
            "url": [
                "postnauka.ru"
            ],
            "invert": [
                ".m-header__logo"
            ]
        },
        {
            "url": [
                "praca.money.pl"
            ],
            "css": ".dynks {\n    color: ${#666666} !important;\n}"
        },
        {
            "url": [
                "praca.pl"
            ],
            "invert": [
                "img[alt=\"Praca.pl\"]",
                ".listing__logo",
                ".app-offer__logo-img",
                ".company__img",
                ".employer-profile-header .logo img",
                ".company-job-list .logo img",
                ".epc-other-employers .logo img"
            ],
            "css": ".app-offer__content {\n    background-color: rgb(25, 26, 27) !important;\n}\n.szcont .f1top,\n.szcont .f1template_content {\n    background-color: rgba(0, 0, 0, 0.25) !important;\n    background-blend-mode: color;\n}\n.company__img {\n    padding: 0 0 !important;\n}",
            "ignoreImageAnalysis": [
                ".szcont .f1top",
                ".szcont .f1template_content"
            ]
        },
        {
            "url": [
                "prajwalkoirala.com"
            ],
            "invert": [
                "svg"
            ]
        },
        {
            "url": [
                "pressgazette.co.uk"
            ],
            "invert": [
                ".site-logo"
            ]
        },
        {
            "url": [
                "pro-run.pl"
            ],
            "invert": [
                ".td-main-logo"
            ]
        },
        {
            "url": [
                "procyclingstats.com"
            ],
            "ignoreImageAnalysis": [
                ".flag",
                ".flag.w32",
                ".flag.c16"
            ]
        },
        {
            "url": [
                "producthunt.com"
            ],
            "invert": [
                "[class=\"icon_f5f81\"]"
            ]
        },
        {
            "url": [
                "projectstream.it"
            ],
            "css": "body {\n    background: none !important;\n}"
        },
        {
            "url": [
                "prostovpn.org"
            ],
            "css": "body {\n    background: none !important;\n}"
        },
        {
            "url": [
                "psemu.pl"
            ],
            "css": ".menu-item {\n    text-shadow: rgb(40, 43, 54) 0px 1px 0px !important;\n}"
        },
        {
            "url": [
                "pyszne.pl"
            ],
            "invert": [
                ".gm-style"
            ],
            "css": ".cover img, .logowrapper, .restaurant-logo__inner,\n.orderoverview__restaurant-image-container-inner,\ndiv[data-qa=\"avatar\"] {\n    background-color: rgba(255, 255, 255, 0.5) !important;\n    background-blend-mode: color;\n}",
            "ignoreInlineStyle": [
                "svg > circle",
                "svg > text > tspan"
            ]
        },
        {
            "url": [
                "pythonanywhere.com"
            ],
            "invert": [
                "#id_logo",
                "img[src^=\"/static/glyphicons/\"]"
            ]
        },
        {
            "url": [
                "pytorch.org"
            ],
            "invert": [
                "#site-logo",
                ".header-holder:not(.homepage-header) > div.container > div.header-container > .header-logo"
            ]
        },
        {
            "url": [
                "quickbase.com"
            ],
            "css": "td.cell, td.label {\n   border-color: rgb(24, 26, 27) !important;\n}"
        },
        {
            "url": [
                "quizlet.com"
            ],
            "css": ".UIKeyboardHint {\n    background-color: transparent !important;\n}"
        },
        {
            "url": [
                "quora.com"
            ],
            "css": ".logo_fill {\n    fill: rgb(219, 87, 83) !important;\n}\nbody {\n    background-color: var(--darkreader-neutral-background) !important; \n}"
        },
        {
            "url": [
                "qwant.com"
            ],
            "invert": [
                ".background-home__logo",
                ".home__logo__container .home__logo"
            ]
        },
        {
            "url": [
                "rachel53461.wordpress.com"
            ],
            "css": "#grad {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "racketboy.com"
            ],
            "css": "#rb-split,\n#rb-split > div {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "railwaygazette.com"
            ],
            "invert": [
                ".mastheadLogo"
            ]
        },
        {
            "url": [
                "rateyourmusic.com"
            ],
            "ignoreImageAnalysis": [
                "*"
            ]
        },
        {
            "url": [
                "reddit.com"
            ],
            "invert": [
                "#COIN_PURCHASE_DROPDOWN_ID > div > span"
            ],
            "css": "[style^=\"--pseudo-before-background\"] {\n    --pseudo-before-background: ${#DAE0E6} !important;\n}\n.md p>a[href=\"#s\"]::after, a[href=\"#s\"]::after {\n    color: #000;\n}"
        },
        {
            "url": [
                "redgamingtech.com"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "redhat.com"
            ],
            "css": "p, li {\n   color: ${black} !important;\n}\n.PFElement {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "referentiemateriaalvo.noordhoff.nl"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "regex101.com"
            ],
            "invert": [
                "canvas"
            ]
        },
        {
            "url": [
                "relive.cc"
            ],
            "invert": [
                "img[src*=\"logo-relive\"]"
            ],
            "ignoreImageAnalysis": [
                ".email-button i"
            ]
        },
        {
            "url": [
                "render.githubusercontent.com/view/ipynb"
            ],
            "invert": [
                "img.math"
            ]
        },
        {
            "url": [
                "repl.it"
            ],
            "css": ".monaco-editor .cursor {\n    background-color: ${#000};\n}"
        },
        {
            "url": [
                "resmigazete.gov.tr"
            ],
            "css": "img[src=\"/assets/img/arma.png\"] {\n    filter: hue-rotate(180deg) invert(1) brightness(2);\n}"
        },
        {
            "url": [
                "richie-bendall.ml"
            ],
            "css": ".content--card {\n    background-color: #303030;\n}\n::-webkit-scrollbar {\n    width: 0;\n    color: transparent;\n}\nbody {\n    background-color: #5c6bc0;\n}\n.app--bar, .drawer--content :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled) .mdc-list-item--activated:after, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled) .mdc-list-item--activated:before {\n    background-color: #3f51b5;\n}\n.btc-dialog .mdc-button {\n    color: #3f51b5;\n}\n.btc-dialog svg {\n    fill: white;\n}"
        },
        {
            "url": [
                "richiebendallstatus.ml"
            ],
            "css": "#page-container {\n    background-image: none;\n}\n.success-bg {\n    background-color: #80BA27;\n}\n.warning-bg {\n    background-color: #f7921e;\n}\n.success {\n    color: #80BA27;\n}\n.warning {\n    color: #f7921e;\n}\n.danger-bg {\n    background-color: #ff0000;\n}\n.paused-bg, .info-bg, .black-bg {\n    background-color: #17252e;\n}"
        },
        {
            "url": [
                "riptutorial.com"
            ],
            "css": ".whole-container {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "ros.org"
            ],
            "css": ".bg-ros-dots-grid {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "rottentomatoes.com"
            ],
            "ignoreImageAnalysis": [
                ".icon__fresh",
                ".fresh"
            ]
        },
        {
            "url": [
                "rubjo.github.io"
            ],
            "css": "select {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "runkit.com"
            ],
            "invert": [
                ".CodeMirror div.CodeMirror-cursor"
            ]
        },
        {
            "url": [
                "savannah.gnu.org"
            ],
            "css": ".boxtitle {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "scholar.google.*",
                "scholar.google.*.*"
            ],
            "invert": [
                "a[role=\"checkbox\"] > :nth-child(2)",
                "div[role=\"banner\"] > a > span",
                "a[aria-label=\"Homepage\"]",
                ".gs_ico",
                "img[src*=\"scholar_logo\"]"
            ]
        },
        {
            "url": [
                "scp-wiki.net",
                "scp-wiki-cn.wikidot.com",
                "scpwiki.com"
            ],
            "css": "div#container-wrap, .panel-body, .content-panel {\n    background-image: none !important;\n}\ndiv#container-wrap::before {\n    content: \"\";\n    position: absolute;\n    top: 0; left: 0;\n    width: 100%; height: 162px;\n    background-image: url(http://www.scp-wiki.net/local--files/component:theme/body_bg.png) !important;\n}"
        },
        {
            "url": [
                "scratch-wiki.info"
            ],
            "invert": [
                ".sb3-comment-label",
                ".sb3-literal-string",
                ".sb3-literal-number"
            ]
        },
        {
            "url": [
                "scratch.mit.edu/projects/editor"
            ],
            "css": "path.blocklyFlyoutBackground {\n    fill: rgb(32, 32, 32);\n}"
        },
        {
            "url": [
                "scribd.com"
            ],
            "invert": [
                ".a",
                ".logo"
            ]
        },
        {
            "url": [
                "script.google.com"
            ],
            "invert": [
                ".docs-icon",
                ".icon"
            ]
        },
        {
            "url": [
                "secure.ally.com"
            ],
            "invert": [
                ".nobd-aob-day",
                "#lp_invite",
                "#manageNonAllyAccountsFrame .third-party-iframe",
                "#billPayFrame"
            ]
        },
        {
            "url": [
                "segmentfault.com"
            ],
            "invert": [
                ".sf-header-logo",
                ".sf-header__logo",
                ".sf-logo"
            ]
        },
        {
            "url": [
                "semmle.com"
            ],
            "css": "#Header-logo * {\n    fill: #ffffff !important;\n}"
        },
        {
            "url": [
                "senscritique.com"
            ],
            "invert": [
                ".d-media-videos::before",
                ".eins-wish.black",
                ".eins-logo-small",
                ".header-navigation-main-item a img",
                ".eins-search-header",
                ".eins-poll",
                ".eins-compass",
                ".eins-compass-xl",
                ".eins-notification",
                ".eins-tv",
                ".eins-ticket",
                ".eins-current.black",
                ".eins-done.green",
                ".eins-done.white",
                ".eins-newspaper",
                ".juyLRn"
            ],
            "css": ".ecap-products-next, .ecap-products-prev {\n    background-color: hsla(100, 20%, 50%, .8) !important;\n    color: ${black} !important;\n}\n.d-chevron3-b, .d-chevron3-l, .d-chevron3-r, .d-chevron3-t {\n    background-image: -webkit-image-set(url(https://static.senscritique.com/img/layout/icons/chevrons/chevron-size3.png?201710121789416) 1x,url(https://static.senscritique.com/img/layout/icons/chevrons/chevron-size3@2x.png?201710121789416) 2x);\n}"
        },
        {
            "url": [
                "servarica.com/clients"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "server.pro"
            ],
            "invert": [
                "svg.server-pro-logo"
            ]
        },
        {
            "url": [
                "servercat.net"
            ],
            "invert": [
                ".theme-header-logo"
            ]
        },
        {
            "url": [
                "share.dmhy.org"
            ],
            "css": ".jmd_base td a {\n    color: ${#3391ff};\n}\n.jmd .today a {\n    color: ${#fff};\n}"
        },
        {
            "url": [
                "sharepoint.com"
            ],
            "css": ".ms-FocusZone {\n    background-color: ${white} !important;\n    color: ${black} !important;\n}\n.ms-DetailsRow-cell {\n    background-color: ${white} !important;\n    color: ${black} !important;\n}\n.ms-Button {\n    background-color: ${white} !important;\n    border-color: ${#F0F0F0} !important;\n    color: ${black} !important;\n}\n.od-ItemContent-title {\n    color: ${black} !important;\n}\n.ms-DetailsHeader-cellName {\n    color: ${black} !important;\n}"
        },
        {
            "url": [
                "shop.dr-rath.com"
            ],
            "css": ".colored-header-desktop {\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "shopify.com",
                "shopify.dev"
            ],
            "invert": [
                ".marketing-nav--skin-light > .marketing-nav__logo",
                ".shopify-logo",
                ".header-country-select__trigger",
                ".lia-message-count::before",
                ".DateTime::before"
            ]
        },
        {
            "url": [
                "signin.nianticlabs.com"
            ],
            "invert": [
                "img[alt=\"Niantic\"]"
            ]
        },
        {
            "url": [
                "sio2.staszic.waw.pl"
            ],
            "invert": [
                ".texmath"
            ]
        },
        {
            "url": [
                "skyscanner.*",
                "skyscanner.*.*",
                "backpack.github.io",
                "tianxun.cn",
                "whoflies.com"
            ],
            "css": "body {\n    background: ${white} !important;\n}\n[class*=bpk-flare-bar__curve] {\n    fill: ${white} !important;\n}"
        },
        {
            "url": [
                "slack.com"
            ],
            "invert": [
                ".slack_logo > img"
            ]
        },
        {
            "url": [
                "slader.com"
            ],
            "invert": [
                ".navigation__logo",
                ".explanation",
                ".solution-cell img",
                ".solution-content img",
                ".answer img"
            ]
        },
        {
            "url": [
                "slashnet.wordpress.com"
            ],
            "css": "#container,\n.entry,\nbody {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "smap.uthm.edu.my"
            ],
            "css": ".slider-background {\n    background: none !important;\n}\n.backstretch {\n    opacity: 0.5 !important;\n}"
        },
        {
            "url": [
                "smzdm.com"
            ],
            "invert": [
                "#logo",
                ".logo-left"
            ]
        },
        {
            "url": [
                "snack.expo.io"
            ],
            "css": "#root > div > div > div:nth-child(2) > div:nth-child(2) > div:nth-child(2) > div > div:nth-child(2) {\n    background-color: white !important;\n}"
        },
        {
            "url": [
                "softorage.com"
            ],
            "css": ".tg {\n    background-image: linear-gradient(36deg,#fc466b,#3f5efb) !important;\n}"
        },
        {
            "url": [
                "sony.*"
            ],
            "ignoreInlineStyle": [
                ".brand-logo-svg > g"
            ]
        },
        {
            "url": [
                "soundcloud.com"
            ],
            "invert": [
                ".notificationIcon.messages::before"
            ],
            "css": ".listenEngagement, .commentForm__wrapper {\n    border: none !important;\n}\nbody,\n.commentForm__wrapper,\n.searchTitle {\n    background: none !important;\n}"
        },
        {
            "url": [
                "source.dot.net"
            ],
            "css": ".r {\n    border-style: none !important;\n}"
        },
        {
            "url": [
                "sourceforge.net"
            ],
            "css": "#code-art-wrapper img {\n    background-color: rgba(24, 26, 27, 0.50);\n    background-blend-mode: color;\n}\n.all-facets, .m-project-search-results {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "sourcegraph.com"
            ],
            "invert": [
                ".header__logo"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "soylent.com"
            ],
            "invert": [
                ".header-logo__image",
                ".d-header #site-logo"
            ]
        },
        {
            "url": [
                "speed.cloudflare.com"
            ],
            "invert": [
                "img[src*=\"speedrabbit-animate.gif\"]",
                "img[src*=\"speedrabbit-static.png\"]"
            ]
        },
        {
            "url": [
                "sport.pl"
            ],
            "invert": [
                "#pageHead img"
            ],
            "css": ".top_section_bg, .bottom_section_bg {\n    background: ${#e5e5e5} !important;\n}"
        },
        {
            "url": [
                "sporza.be"
            ],
            "css": ".sc-score, \n.sc-score__away,\n.bouton:hover {\n    color: ${#222} !important;\n}\n.sc-score__wrapper {\n    background-color: ${#BBB} !important;\n}\n.bouton {\n    color: ${#fff} !important;\n}\n.sc-epg--live .sc-epg__program {\n    background-color: ${#CCC} !important;\n}\n.vrt-newsletter {\n    background-color: ${#EEE} !important;\n}\n.vrt-site-footer .vrt-newsletter .vrt-link--newsletter {\n    background-color: ${#AAA} !important;\n}\n.logo__letters {\n    fill: var(--darkreader-neutral-background) !important;                                                                                                                                                                                                                                                                                                                                                              \n}\n.vrt-link {\n    background-color: ${rgba(255, 165, 0, 0)} !important;\n    color: ${rgba(50, 50, 50)} !important;\n}\n.vrt-link:hover {\n    background-color: ${rgb(100, 100, 100)} !important;\n}\n.vrt-site-footer__navigation--green {\n    background-color: ${#AAA} !important;\n    color: var(--darkreader-neutral-background) !important;                                                                                                                                                                                                                                                                                                                                                                                                                     \n}"
        },
        {
            "url": [
                "sso.qiniu.com"
            ],
            "invert": [
                ".navbar-brand"
            ]
        },
        {
            "url": [
                "stackage.org"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "stardewvalleywiki.com"
            ],
            "css": "html {\n    background: none !important;\n}"
        },
        {
            "url": [
                "startpage.com"
            ],
            "invert": [
                ".hamburger-menu .hamburger-button"
            ],
            "ignoreImageAnalysis": [
                ".home__section__search-logo",
                ".header__logo",
                ".header-settings__logo",
                ".hamburger-menu .hamburger-button"
            ]
        },
        {
            "url": [
                "store.google.*"
            ],
            "css": "[style*=\"background-image\"] {\n    filter: brightness(50%) sepia(40%) !important;\n}"
        },
        {
            "url": [
                "store.ubi.com"
            ],
            "invert": [
                "div.primary-logo"
            ]
        },
        {
            "url": [
                "strava.com"
            ],
            "invert": [
                ".icon-dark",
                ".labelGroup",
                "#effort-box",
                ".gear::after",
                ".icon-lg",
                ".icon-edit",
                ".weekly-goal svg",
                ".week.clearfix svg",
                ".activity-map img",
                "img.leaflet-tile-loaded:not([src*=\"satellite\"])"
            ],
            "css": ".base-chart .grid-line,\n#athlete-history-chart .vgrid {\n  stroke: #555555;\n}\n#athlete-history-chart #effort-box {\n  fill: #3e3e3e;\n  stroke: black;\n}\n\n#basic-analysis .xaxis-container .background,\n#basic-analysis rect.static-info-box,\n#basic-analysis rect.static-label-box {\n  fill: #2c2c2c;\n}\n.base-chart rect.simple-bar.segmentbar {\n  opacity: 1;\n}\n.base-chart rect.simple-bar {\n  fill: #444444;\n  stroke: #252627;\n}\n\n.current-week-label { fill: black; }\n.sum.no-rest { fill: black; }\n\n.options img {\n  filter: invert(40%);\n}\n\n#infoBox text {\n  color: black;\n}",
            "ignoreImageAnalysis": [
                ".app-icon.icon-nav-training",
                ".app-icon.icon-fb"
            ]
        },
        {
            "url": [
                "streamable.com"
            ],
            "invert": [
                ".landing .features-pane .feature > span > svg",
                ".landing .logo",
                ".landing .start-pane .start-form .try-arrow > img",
                "#player.container .actions-section .logo",
                "#player-play-pause-button",
                "#player-progress-track",
                "#player-progress-value"
            ]
        },
        {
            "url": [
                "studio.youtube.com"
            ],
            "invert": [
                "paper-radio-button",
                ".ytcp-home-button img"
            ]
        },
        {
            "url": [
                "subdivx.com"
            ],
            "invert": [
                "#cabecera img",
                "#contenedor_foro .cita img",
                "#contenedor_foro .datos img[src*=\"/img/\"]",
                "#perfil_izq img[src*=\"img/\"]"
            ],
            "css": "BODY * {\n   color: ${#333};\n}\nA {\n    color: ${#0366d6} !important;\n}\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"button\"],\ninput[type=\"submit\"] {\n    background: ${#bbb};\n    border: 1px solid #999;\n}\ninput[type=\"submit\"]:hover {\n    background: ${#999};\n    border: 1px solid #999;\n}\nmark {\n    background: ${#f00} !important;\n    color: ${#fff} !important;\n}\n#barra a,\n#menu_largo a,\n#menu_largo_chat a,\n#foro_tema_menu a,\n#ultimos_foros_renglon .link_foro_tema,\n.titulo_menu_izq {\n    color: #ddd !important;\n}\n#wrapper {\n    background-image: none !important;\n}\n#contenedor_gral {\n    display: table;\n    background: ${#e0e0e0} !important;\n    box-shadow: rgba(0, 0, 0, 0.7) 0px 0px 8px;\n    height: -webkit-fill-available !important;\n    width: fit-content !important;\n}\n#cabecera {\n    background: ${#e4e4e4};\n}\n#barra,\n#menu_top,\n#menu_detalle_buscador,\n#menu_detalle,\n#menu_largo,\n#menu_largo_chat,\n#prog_menu_detalle,\n#primer_msg_voto,\n#reg_menu_detalle,\n#drdivx_menu_detalle,\n#contenedor_foro .fecha,\n#perfil_menu,\n#foro_tema_menu {\n    background: ${rgb(153,173,206)} !important;\n    background: linear-gradient(to bottom, ${rgb(153,173,206)} 0%, ${rgb(75,110,171)} 100%) !important;\n}\n#foro_home,\n#foro_home_renglon,\n#cuadrados_izq,\n#cuadrados_izq_reng,\n#chat_reng,\n#contenedor_foro,\n#contenedor_foro .datos,\n#contenedor_foro .cita,\n#contenedor_foro .mensaje {\n    background: ${#fff} !important;\n}\n#foro_home_datos,\n#cuadrados_izq {\n   color: ${#999} !important;\n}\n#foro_home_datos a {\n   color: ${#669} !important;\n}"
        },
        {
            "url": [
                "subscene.com"
            ],
            "css": "body {\n  background: none !important;\n}"
        },
        {
            "url": [
                "support.discord.com"
            ],
            "invert": [
                ".logo img",
                "ol.breadcrumbs li:first-child:before"
            ]
        },
        {
            "url": [
                "support.mozilla.org"
            ],
            "invert": [
                ".card--topic .card--icon",
                ".card--icon-sm",
                "div.sumo-nav--logo"
            ]
        },
        {
            "url": [
                "tagesschau.de"
            ],
            "css": ".box {\n    background-color: ${#DFDFE2} !important;\n    background-image: none !important;\n}\n\n.tsIndex .sectionC.kachel {\n    background-image: none !important;\n    background-color: ${#DFDFE2} !important;\n}\n\n.masternavi ul {\n    background-color: rgba(0,0,0,0) !important;\n    box-shadow: rgb(0, 0, 0, 0) 0px 0px 0px 0px !important;\n}"
        },
        {
            "url": [
                "tailwindcss.com"
            ],
            "css": ".bg-white:not(#docsearch), .bg-gray-100 {\n    --bg-opacity: none !important;\n}\n.text-gray-900, .hover\\:text-gray-900:hover,\nh1, h2, h3,\nh4, h5, h6 {\n    --text-opacity: none !important;\n}\n.bg-center {\n    background: none !important;\n}"
        },
        {
            "url": [
                "taobao.com"
            ],
            "invert": [
                "#logo > a > span",
                "#J_SearchIcon",
                ".J_MyShopCoupon",
                ".J_BtnEditSKU",
                ".cart-checkbox"
            ],
            "css": "#logo > a > span {\n    background-color: transparent !important;\n}\n.J_ItemAmount {\n    color: var(--darkreader-neutral-text) !important;\n    background: var(--darkreader-neutral-background) !important;\n}\n.tbh-member.J_Module {\n    background: none !important;\n}\n#q.search-combobox-input {\n    background: var(--darkreader-neutral-background);\n}"
        },
        {
            "url": [
                "teamtrees.org"
            ],
            "css": ".hypeTemplate_tano {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "technews.tw"
            ],
            "css": "div#main.wrapper {\n    background-color: #000;\n}\na {\n    color: rgb(206, 202, 195);\n}\ndiv {\n    background-color: #000 !important;\n}\n.widget-area .widget{\n    background-color: #000;\n}\n.site-header {\n    background-color: #000;\n}\ndiv.tipbar {\n   background-image:  none !important;\n}\ndiv.content table tr td h1.entry-title a{\n   color: rgb(206, 202, 195);\n}"
        },
        {
            "url": [
                "telerik.com"
            ],
            "invert": [
                "a.TK-Aside-Menu-Link",
                "a.TK-Aside-Menu-Button",
                "#ContentPlaceholder1_C377_Col00 > img"
            ],
            "css": "a.TK-TLRK-Logo svg path[fill=\"#7c878e\"] {\n    --darkreader-inline-fill: ${black} !important;\n}\na.TK-TLRK-Logo svg path[fill=\"#4b4e52\"] {\n    --darkreader-inline-fill: ${black} !important;\n}\na.TK-PRGS-Logo-Footer svg path[fill=\"#4b4e52\"] {\n    --darkreader-inline-fill: ${black} !important;\n}\n#ContentPlaceholder1_C418_Col00 > footer {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "tenor.com"
            ],
            "invert": [
                ".FlagIcon",
                ".ShareIcon"
            ]
        },
        {
            "url": [
                "terraform.io"
            ],
            "ignoreInlineStyle": [
                ".text"
            ]
        },
        {
            "url": [
                "the-race.com"
            ],
            "invert": [
                ".img-fluid"
            ]
        },
        {
            "url": [
                "theatlantic.com"
            ],
            "invert": [
                ".c-nav__icon--lacroix"
            ],
            "css": ".hamburger-inner, .hamburger-inner::after, .hamburger-inner::before {\n    background-color: ${black} !important;\n}"
        },
        {
            "url": [
                "thecode.media"
            ],
            "invert": [
                "img[src$=\"/logo.svg\"]"
            ]
        },
        {
            "url": [
                "theguardian.com"
            ],
            "invert": [
                ".inline-the-guardian-logo__svg",
                "a[data-link-name$=\"logo\"] > svg"
            ]
        },
        {
            "url": [
                "theinformation.com"
            ],
            "invert": [
                ".logo"
            ],
            "css": "article.single .sticky-header button.button-share,\n#bookmark-and-share button.button-share {\n    background-color: #21498c;\n    color: #e8e6e3;\n}\narticle.single .sticky-header button.button-share:hover,\n#bookmark-and-share button.button-share:hover {\n    background-color: #245098;\n}\n.locked section .insert-container {\n    filter: drop-shadow(20px 20px 20px #26292b);\n}\n.locked section .insert-container#app-screenshot-container {\n    filter: drop-shadow(20px -20px 20px #26292b);\n}",
            "ignoreImageAnalysis": [
                "header.locked .logo"
            ]
        },
        {
            "url": [
                "thejakartapost.com"
            ],
            "invert": [
                ".logo-jakartapost"
            ]
        },
        {
            "url": [
                "theleagueofmoveabletype.com"
            ],
            "invert": [
                ".eqCDBf"
            ]
        },
        {
            "url": [
                "themoviedb.org"
            ],
            "css": ".card {\n    background-color: ${#dfe1e2} !important;\n}"
        },
        {
            "url": [
                "thenextweb.com"
            ],
            "invert": [
                ".icon[class*=\"--dark\"]"
            ]
        },
        {
            "url": [
                "theoatmeal.com"
            ],
            "invert": [
                "img.d-inline-block.align-bottom"
            ]
        },
        {
            "url": [
                "theonion.com"
            ],
            "invert": [
                "div.sc-2d8w30-0 bGlSMu",
                "div.sc-2d8w30-1.bRnfTk"
            ],
            "ignoreInlineStyle": [
                "div.sc-2d8w30-0.bGlSMu svg g path",
                "div.sc-2d8w30-1.bRnfTk svg g path"
            ]
        },
        {
            "url": [
                "thepaper.cn"
            ],
            "invert": [
                ".head_logo"
            ]
        },
        {
            "url": [
                "theregister.*",
                "theregister.*.*"
            ],
            "invert": [
                ".row_label.title_rhs_line"
            ],
            "css": "article {\n  background-color: ${white} !important;\n}\n\nbody {\n  color: ${black} !important;\n}"
        },
        {
            "url": [
                "theverge.com"
            ],
            "invert": [
                ".c-global-header__logo-large",
                ".c-masthead__logo",
                ".c-tab-bar__logo",
                ".c-footer__logo-link"
            ]
        },
        {
            "url": [
                "thewindowsclub.com"
            ],
            "invert": [
                "h1.site-logo"
            ]
        },
        {
            "url": [
                "thingiverse.com"
            ],
            "css": "a.dashboard_button,\na.plain-link,\na.white-button,\na[class^=\"SideMenuItem__textWrapper-\"],\na[class^=\"ThingComment__createdBy-\"],\na[class^=\"ThingComment__modelName-\"],\na[class^=\"UserProfileBody__location\"],\na[class^=\"UserProfileBody__name-\"],\nbutton[class^=\"CollectThingWindow__buttonWrapper-\"],\nbutton[class^=\"UserFilter__dropdownButton-\"],\ndiv.basic-page h1,\ndiv.basic-page h2,\ndiv.basic-page h3,\ndiv.basic-page h4,\ndiv.basic-page select,\ndiv.center_content .value p,\ndiv.center_content h1,\ndiv.center_content h2,\ndiv.content-box,\ndiv.copyright,\ndiv.developer-page,\ndiv.edit-page h1,\ndiv.fields label,\ndiv.file-upload,\ndiv.file-upload .upload-info strong,\ndiv.group-contentbox,\ndiv.group-contentbox a,\ndiv.half p,\ndiv.markdown-preview,\ndiv.pre-filled,\ndiv.profile_view p,\ndiv.profile_view strong,\ndiv.site-footer a,\ndiv.sourcelist strong,\ndiv.submit-buttons .text-link,\ndiv.thing-components-list h5,\ndiv.thing-components-list,\ndiv.top_content,\ndiv.user-about,\ndiv.user-fullname,\ndiv.user-stats a,\ndiv[class^=\"CardActionItem__countWrapper-\"],\ndiv[class^=\"CardActionItem__textWrapper-\"],\ndiv[class^=\"CategoryItem__dataWrapper-\"] span,\ndiv[class^=\"Contents__widgetTitle-\"],\ndiv[class^=\"FilterBySort__checkboxLabel-\"],\ndiv[class^=\"FilterBySort__dropdownContent-\"],\ndiv[class^=\"FilterBySort__resetFilter-\"],\ndiv[class^=\"Filters__container-\"],\ndiv[class^=\"LegalLinks__copyRight-\"],\ndiv[class^=\"LegalLinks__legalLinks-\"],\ndiv[class^=\"License__licenseHeader-\"],\ndiv[class^=\"License__licenseText-\"],\ndiv[class^=\"MetricButton__metric-\"],\ndiv[class^=\"MetricButton__tabTitle-\"],\ndiv[class^=\"Sort__sortContent-\"],\ndiv[class^=\"sourcelist apps-list\"],\ndiv[class^=\"Tags__blockTitle-\"],\ndiv[class^=\"ThingCardHeader__cardCreatedAfter-\"],\ndiv[class^=\"ThingComment__commentBody-\"],\ndiv[class^=\"ThingComment__postCommentHeader-\"],\ndiv[class^=\"ThingFile__fileDescription-\"],\ndiv[class^=\"ThingFile__fileName-\"],\ndiv[class^=\"ThingFilePolicy__byDownload-\"],\ndiv[class^=\"ThingFilePolicy__thingLicense-\"],\ndiv[class^=\"ThingFilesListHeader__fileName-\"],\ndiv[class^=\"ThingPage__blockTitle-\"],\ndiv[class^=\"ThingPage__createdBy-\"],\ndiv[class^=\"ThingPage__description-\"],\ndiv[class^=\"ThingPage__description-\"] p,\ndiv[class^=\"ThingPage__modelName-\"],\ndiv[class^=\"UserAboutWidget__aboutWrapper-\"] p,\ndiv[class^=\"UserAboutWidget__skillLevelWrapper-\"] p,\ndiv[class^=\"UserAboutWidget__tools-\"] span,\ndiv[class^=\"UserAboutWidget__typesWrapper-\"] p,\ndiv[class^=\"UserCardBody__fullNameWrapper-\"] a,\ndiv[class^=\"UserCardBody__usernameWrapper-\"] a,\ndiv[class^=\"UserFilter__filterContent-\"],\ndiv[class^=\"UserSort__sortContent-\"],\nh2.sso-callout span,\nheader.sso-header,\nlabel,\nlabel.mktoLabel,\nnav.plain-nav a,\nnav.plain-section-nav a,\np[class^=\"SignUp__textFooter-\"],\np[class^=\"SignUp__textHeader-\"],\np[class^=\"ThingPage__description-\"],\np[class^=\"UserEmptyPage__message-\"],\nselect.select-menu,\nselect[class^=\"FilterBySort__selectWrapper-\"],\nspan.cancel-icon::before,\nspan.dashboard_button,\nspan.remove-item::after,\nspan.search-icon::before,\nspan[class^=\"CategorySort__dropdownTitle-\"],\nspan[class^=\"FilterBySort__dropdownTitle-\"],\nspan[class^=\"FilterBySort__eduDropdownTitle-\"],\nspan[class^=\"ProfileActionItem__count-\"],\nspan[class^=\"ProfileActionItem__label-\"],\nspan[class^=\"RemixedFromSection__title-\"],\nspan[class^=\"Sort__titleDropdown-\"],\nspan[class^=\"ThingCardHeader__cardNameWrapper-\"],\nspan[class^=\"ThingFile__extention-\"],\nspan[class^=\"ThingsMoreSection__showMoreHeading-\"],\nspan[class^=\"UserAboutWidget__widgetTitle-\"],\nspan[class^=\"UserFilter__titleDropdown-\"],\nspan[class^=\"UserSort__titleDropdown-\"],\ntable.toggle_table {\n  color: var(--darkreader-neutral-text) !important;\n}\n\ndiv[class^=\"FilterBySort__resetFilter-\"],\ndiv[class^=\"Radio__innerCircle-\"],\ndiv[class^=\"Radio__outerCircle-\"],\nselect[class^=\"FilterBySort__selectWrapper-\"],\nspan[class^=\"Checkbox__checkboxCustom-\"] {\n  border-color: var(--darkreader-neutral-text) !important;\n}\n\na.dashboard_button::before,\ndiv.center_content > img,\ndiv.site-logo,\ndiv[class^=\"CardActionItem__imageWrapper\"] > img,\ndiv[class^=\"Dropdown__dropdown-\"] > button::after,\ndiv[class^=\"FilterBySort__dropdown-\"] > button::after,\ndiv[class^=\"SearchInput__searchIcon-\"] > img,\ndiv[class^=\"SideMenuItem__itemIconWrapper-\"] > img,\ndiv[class^=\"SideMenuItem__linkWrapper-\"],\nheader.sso-header img,\nspan.cancel-icon::before,\nspan.dashboard_button::before,\nspan.search-icon::before {\n  filter: brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(6261%) hue-rotate(171deg) brightness(110%) contrast(80%);\n}"
        },
        {
            "url": [
                "thronemaster.net"
            ],
            "invert": [
                ".head-info-wild"
            ],
            "css": "table.inneractionwindow,\ntable.actionwindow.overlay_shadow.dlg_battle,\ntable tbody tr td small i {\n    color: #000 !important;\n}"
        },
        {
            "url": [
                "thunderbird.net"
            ],
            "invert": [
                ".w-48"
            ]
        },
        {
            "url": [
                "tianocore.org"
            ],
            "invert": [
                ".tcLogoArea"
            ]
        },
        {
            "url": [
                "tieba.baidu.com"
            ],
            "invert": [
                ".add-more-forum",
                ".all-wraper",
                ".core_title_btns",
                ".focus_btn",
                ".nav_wrap_add_border",
                ".save_face_bg",
                ".share_btn_wrapper"
            ],
            "css": ".class_title,.content-sec,.f-d-w,.left-sec,.sub_nav_wrap,.tb_footer,.u-f-item {\n    background: ${white} !important;\n}"
        },
        {
            "url": [
                "tjournal.ru"
            ],
            "invert": [
                "mark"
            ],
            "css": "mark a {\n  color: ${#346eb8} !important;\n}"
        },
        {
            "url": [
                "tmall.com"
            ],
            "css": "#mallLogo > .mlogo > a {\n    font-size: 0 !important;\n}"
        },
        {
            "url": [
                "tns-e.ru"
            ],
            "invert": [
                "img[title*=\"ТНС энерго\"]",
                "img[src=\"/img/refresh.png\"]",
                "img[src=\"/img/logout-black.png\"]"
            ]
        },
        {
            "url": [
                "todoist.com"
            ],
            "invert": [
                ".ist_button_apple > img"
            ]
        },
        {
            "url": [
                "tokfm.pl"
            ],
            "css": "div.top_section_bg, div.bottom_section_bg {\n    background-color: ${#e7e5e4} !important;\n}"
        },
        {
            "url": [
                "tonsky.me"
            ],
            "css": "body {\n    background-image: none !important;\n    background-color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "translate.google.*",
                "translate.google.*.*"
            ],
            "invert": [
                ".ttsbutton",
                ".tlid-copy-translation-button",
                ".starbutton",
                ".speech-button",
                ".clear",
                ".swap > .jfk-button-img",
                ".morebutton",
                ".close-button",
                ".ita-kd-icon-button",
                ".ita-kd-menuitem-inputtool-icon",
                ".ita-kd-checkbox",
                ".vk-t-btn",
                ".vk-sf-b",
                ".ita-hwt-backspace-img",
                ".ita-hwt-enter-img",
                ".ita-hwt-grip",
                ".gt-ex-quote"
            ],
            "css": ".trans-verified-button {\n    background-size: cover;\n}",
            "ignoreImageAnalysis": [
                ".copybutton .jfk-button-img",
                ".speech-button .jfk-button-img",
                ".result .unstarred > .jfk-button-img",
                ".morebutton .jfk-button-img"
            ]
        },
        {
            "url": [
                "translate.yandex.*"
            ],
            "invert": [
                ".button.button_tab.state-selected::before",
                "#optionsButton::after",
                "#clearButton::after",
                "#textNativeSpeaker",
                "#textSpeaker",
                "#microphone::after",
                "#keyboardButton::after",
                "#spellerButton::after",
                ".button.button_icon.button_icon_swap::after",
                "#favButton::after",
                "#translatorSpeaker",
                "#translatorNativeSpeaker",
                "#copyButton::after",
                "#shareButton::after",
                "#goodVoteButton::after",
                "#badVoteButton::after",
                "#editorButton::after",
                ".toggler::after",
                ".button.button_icon.button_icon_speaker",
                ".dictionary-example_toggler::after",
                ".dictionary-example_meta__vote-buttons",
                ".icon.button.button_icon.button_icon_sync::after",
                ".message.message_yellow.message_replace",
                ".placeholder",
                ".button.header-button.button_icon.button_icon_clear2::after",
                "#shareCopyLink::after"
            ]
        },
        {
            "url": [
                "translate.yandex.*/collections"
            ],
            "invert": [
                ".button.header-button.button_icon.button_icon_clear2::after",
                ".record-line_speaker.button.button_icon.button_icon_speaker::after",
                ".button.button_icon.button_icon_lines::after",
                ".button.button_icon.button_icon_trash::after",
                "#shareCollectionCopy::after"
            ]
        },
        {
            "url": [
                "translate.yandex.*/doc"
            ],
            "invert": [
                ".button.button_tab.state-selected::before",
                ".listbox-option::after"
            ]
        },
        {
            "url": [
                "translate.yandex.*/ocr"
            ],
            "invert": [
                ".button.button_tab.state-selected::before",
                ".button.button_icon.button_icon_swap::after",
                ".button.button_icon.button_icon_plus::after",
                ".button.button_icon.button_icon_minus::after",
                ".button.button_icon.button_icon_lines::after",
                ".button.button_icon.button_icon_words::after",
                ".button button_icon.button_icon_blocks::after",
                ".button.button_icon.button_icon_blocks::after",
                ".button.button_icon.button_icon_reset::after"
            ]
        },
        {
            "url": [
                "translate.yandex.*/translate"
            ],
            "invert": [
                ".button.button_tab.state-selected::before",
                "#shareButton::after",
                ".listbox-option::after",
                "#shareCopyLink::after"
            ]
        },
        {
            "url": [
                "treccani.it",
                "*.treccani.it"
            ],
            "css": ".treccani_portal .wrapper, .treccani_portal body {\n    background-color: ${white} !important;\n}\n.module-search-preview-more_results .module-search-preview-more_results-related_container {\n    background-color: ${lightgray} !important;\n}\n.module-widget .widget-bg {\n    background-color: ${lightgray} !important;\n}\n.article_template-bg-text-medium .block .block-content {\n    background-color: ${lightgray} !important;\n}\n.module-footer .footer-colophon {\n    background-color: ${lightgray} !important;\n}\n#nav-icon3 span {\n    background-color: ${black} !important;\n}"
        },
        {
            "url": [
                "tw.appledaily.com"
            ],
            "invert": [
                ".caltrigger img"
            ],
            "css": ".ndgNav_second {\n    background-color: transparent !important;\n    box-shadow: none !important;\n}\n.ndgTag_front img, .ndgTag_end img {\n   display: none;\n}\n[class^=ndgTag] {\n    border-top-color: transparent !important;\n}"
        },
        {
            "url": [
                "tweakers.net"
            ],
            "invert": [
                "#categoryBrowser li.more:not(.active)",
                ".infoBox > .title:before"
            ],
            "css": "#logo a {\n    background: url(\"../../../g/if/v3/framework/tweakers_logo_v2_x1.png\") no-repeat center;\n}\n\n@media (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) {\n    #logo a {\n        background: url(\"../../../g/if/v3/framework/menu_icons_responsive_v6_x2.png\") !important;\n        background-size: 220px 352px !important;\n        background-position: -8px -220px !important;\n    }\n}\n\n.ankeiler > a.commentCount {\n    background-image: url(../../../g/icons/commentcounter_small_bg.svg) !important;\n    text-decoration: none !important;\n}\n\n.thumb.category {\n    border: none !important;\n}\n#categoryBrowser li a {\n    background: none !important;\n}\n\n#categoryBrowser li a, #categoryBrowser li.active > a {\n    color: rgb(32, 144, 236) !important;\n}\n\n#categoryBrowser.sidebar li.more {\n    background-position: 282px 10px;\n}\n\na.showMoreItems {\n    background-image: none !important;\n}\n\n.corner::before,.corner::after {\n    border: 6px solid #333 !important;\n}\n\n#userbar li.icon.flag.nl::after {\n    border-top: 3px solid #e7184c !important;\n    background-color: #fff !important;\n    border-bottom: 3px solid #014a93 !important;\n}\n\n#userbar li.icon.flag.be::after {\n    border-left: 4px solid #000 !important;\n    background-color: #ffff1a !important;\n    border-right: 4px solid #e7184c !important;\n}\n\n#userbar li.icon a {\n    background: url(\"https://tweakers.net/g/if/v3/framework/menu_icons_v2.png\") no-repeat !important;\n}\n\n#userbar li.display a {\n    background-position: 0 -128px !important\n}\n\n@media (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) {\n    #userbar li.icon a {\n        background: url(\"../../../g/if/v3/framework/menu_icons_responsive_v6_x2.png\") !important;\n        background-size: 220px 352px !important;\n        background-position: 0 -264px !important;\n    }\n}\n\n#userbar li.tracker a {\n    background-position: 0 -48px !important;\n}\n\n#userbar li.messages a {\n    background-position: 0 0 !important;\n}\n\n#userbar li.messages.unread a {\n    background-position: -48px 0 !important;\n}\n\n#userbar li.messages.selected a {\n    background-position: -24px 0 !important;\n}\n\n#userbar li.notifications a {\n    background-position: 0 -25px !important;\n}\n\n#userbar li.notifications.unread a {\n    background-position: -48px -25px !important;\n}\n\n#userbar li.notifications.selected a {\n    background-position: -24px -24px !important;\n}\n\n#userbar li.display.selected a {\n    background-position: -24px -128px !important\n}\n\n#userbar li.compare a {\n    background-position: 0 -152px !important\n}\n\n#userbar li.compare.highlight a {\n    background-position: -48px -152px !important\n}\n\n#userbar li.compare.selected a {\n    background-position: -24px -152px !important\n}\n\n#userbar li.search a {\n    background-position: 0 -102px !important\n}\n\n#userbar li.search.selected a {\n    background-position: -24px -102px !important\n}\n.ctaButton.play::after {\n    background-color: #FFF !important;\n}"
        },
        {
            "url": [
                "type-together.com"
            ],
            "invert": [
                ".carousel-inner"
            ]
        },
        {
            "url": [
                "ubuntu.com"
            ],
            "invert": [
                ".global-nav__header-logo-anchor"
            ],
            "ignoreInlineStyle": [
                "g#ubuntu-logo > path"
            ]
        },
        {
            "url": [
                "un.org"
            ],
            "invert": [
                "a.logo[title=\"United Nations\"]"
            ]
        },
        {
            "url": [
                "underconsideration.com/brandnew"
            ],
            "css": ".post-message {\n  color: ${black} !important;\n}"
        },
        {
            "url": [
                "unsplash.com"
            ],
            "invert": [
                "._1Jlgk",
                "._1Ig-9"
            ],
            "css": "._2AYJu._1PdBr {\n    background: ${white} !important;\n}"
        },
        {
            "url": [
                "unsplash.com"
            ],
            "css": "._2AYJu._1PdBr {\n    background: ${white} !important;\n}"
        },
        {
            "url": [
                "uol.com.br"
            ],
            "css": ".text a {\n    text-decoration: underline;\n}"
        },
        {
            "url": [
                "uptimerobot.com"
            ],
            "invert": [
                ".normal-logo",
                ".socialWrapper > ul > li"
            ],
            "css": ".page-head,\n.sidebar {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "urbandictionary.com"
            ],
            "invert": [
                "g.c3-axis.c3-axis-x g.tick text",
                ".top-bar-section .has-dropdown > a::after"
            ],
            "css": ".def-panel .ribbon {\n    background-color: #EFFF00 !important;\n    color: #333 !important;\n}\n.def-panel {\n    border-width: medium !important;\n}\ndiv.slogan-container > div.word-block-wrapper {\n    color: #333 !important;\n}\n.panel {\n    border-width: medium !important;\n}\n.search-and-actions .main-search input {\n    border-width: medium !important;\n}"
        },
        {
            "url": [
                "usbmobilemonitor.com"
            ],
            "css": ".wsb-canvas-scrollable {\n    background-color: ${white} !important;\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "uteka.ru"
            ],
            "invert": [
                ".header-main__logo"
            ]
        },
        {
            "url": [
                "valgrind.org"
            ],
            "css": "p {\n   color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "vandale.nl"
            ],
            "invert": [
                "#content-top.form"
            ]
        },
        {
            "url": [
                "vanguard.com"
            ],
            "css": ".hidePageIfJSdisabled {\n    display: block !important;\n}"
        },
        {
            "url": [
                "vbulletin.com"
            ],
            "css": ".std {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.hero-text,\n#hometext li,\n#hometext h4,\n#hometext_buttons div p {\n    color: var(--darkreader-neutral-background) !important;\n}"
        },
        {
            "url": [
                "vc.ru"
            ],
            "invert": [
                "mark"
            ],
            "css": "#page_wrapper {\n  background-color: ${#fff4e0} !important;\n}"
        },
        {
            "url": [
                "vcb-s.com"
            ],
            "css": "html {\n    background-color: transparent !important;\n}"
        },
        {
            "url": [
                "vechevoikolokol.ru"
            ],
            "invert": [
                ".map",
                ".main-page-about .img-responsive",
                ".header-menu__mobile .img-responsive"
            ],
            "css": ".main-page-about, .main-suggestions, .i-about, .issues-page__content{\n    background: none !important;\n}"
        },
        {
            "url": [
                "vice.com"
            ],
            "invert": [
                "img[src*=\"article-logo\"]",
                "div.nav-bar__hamburger-button__hamburger",
                "a.page-footer__logo-vice-link"
            ],
            "css": ".titlebar__logo__icon svg path {\n    --darkreader-inline-fill: ${black} !important;\n}\n.logo-vice__foreground {\n    --darkreader-inline-fill: ${black} !important;\n}\n.sections-collection__tail .sections-collection__sections-card .sections-card__content {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "vimeo.com"
            ],
            "ignoreInlineStyle": [
                ".bdAcUM svg path",
                ".topnav_desktop_logo path"
            ]
        },
        {
            "url": [
                "virtualbox.org"
            ],
            "css": "body {\n    background: transparent !important;\n}"
        },
        {
            "url": [
                "vrt.be/vrtnws"
            ],
            "invert": [
                ".vrt-site-header__home>svg"
            ],
            "css": "article:hover::before {\n    background-color: ${white} !important;\n}\n.vrt-site-header__container::before {\n    background-color: transparent !important;\n}"
        },
        {
            "url": [
                "w3.org"
            ],
            "invert": [
                "img[alt~=\"equation\"]",
                "img[alt~=\"Equation\"]"
            ]
        },
        {
            "url": [
                "wakamaifondue.com"
            ],
            "css": ".upload-button > strong, .upload-button > span {\n    color: ${white} !important;\n}"
        },
        {
            "url": [
                "waze.com"
            ],
            "invert": [
                ".wm-map__leaflet",
                ".leaflet-bottom",
                ".leaflet-popup-content-wrapper"
            ]
        },
        {
            "url": [
                "weather.com.cn"
            ],
            "invert": [
                ".w_logo",
                "#hourHolder"
            ],
            "css": ".lv1,\n.lv2,\n.weatherBg01,\n.weatherBgAll,\n.weatherBgAll01,\n.weatherBgAll02,\n.weatherBgAll03 {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "web.archive.org"
            ],
            "invert": [
                "#wm-sparkline-canvas",
                ".yt",
                ".sparkline-canvas",
                ".sparkline-mouse-highlight",
                ".search-toolbar-logo",
                "#wm-logo"
            ],
            "css": ".measure {\n    z-index: 0 !important;\n}"
        },
        {
            "url": [
                "web.getslowly.com"
            ],
            "css": ".badge-active {\n    color: rgb(47, 51, 58);\n}"
        },
        {
            "url": [
                "web.telegram.org"
            ],
            "invert": [
                ".composer_emoji_tooltip_category",
                ".nano-slider",
                ".divider"
            ],
            "css": ".progress-bar {\n    background-color: rgba(255,255,255,.9) !important;\n}"
        },
        {
            "url": [
                "web.whatsapp.com"
            ],
            "invert": [
                ".selectable-text > span._3PxOr",
                "span[data-icon=\"audio-download\"]"
            ],
            "css": "._3Ye_R {\n    color: gray !important\n}\n[data-asset-intro-image], [data-asset-intro-image-light] {\n    background-image: url(/img/intro-connection_c98cc75f2aa905314d74375a975d2cf2.jpg) !important;\n}\nhtml[dir] .landing-main > :first-child > :nth-child(2) > :first-child {\n    border: 5px solid white !important;\n}\nspan[data-icon=\"tail-in\"] {\n    color: rgb(30, 36, 39) !important;\n}\nspan[data-icon=\"tail-out\"] {\n    color: rgb(4, 57, 51) !important;\n}",
            "ignoreInlineStyle": [
                "path[fill=\"currentColor\"]"
            ]
        },
        {
            "url": [
                "webaim.org"
            ],
            "css": "body {\n    background-image: none !important\n}"
        },
        {
            "url": [
                "webtoons.com"
            ],
            "css": ".card_item .info {\n    color: black;\n}\n.card_item .info .subj {\n    text-shadow: -1px 1px white;\n}\n.card_item .update {\n    color: black;\n    text-shadow: -1px -1px white;\n}\n.card_item .info .author {\n    text-shadow: -1px -1px white;\n}"
        },
        {
            "url": [
                "wego.here.com"
            ],
            "invert": [
                "#map",
                ".route_card_left",
                ".route_tooltip_icon",
                ".btn_directions"
            ]
        },
        {
            "url": [
                "what-if.xkcd.com"
            ],
            "invert": [
                ".illustration",
                ".archive-image",
                ".logo"
            ]
        },
        {
            "url": [
                "who.int"
            ],
            "invert": [
                ".background-url-holder > picture > img"
            ]
        },
        {
            "url": [
                "whois.com"
            ],
            "invert": [
                "img[src=\"/images/logo.gif\"]",
                "img[src=\"//cdnassets.com/ui/resellerdata/120000_149999/129394/supersite2/supersite/themes/EliteGreen-ResponsiveTheme/images/logo.gif\"]"
            ]
        },
        {
            "url": [
                "wiki.archlinux.org"
            ],
            "css": ".mw-body {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "wiki.mozilla.org"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "wiki.unity3d.com"
            ],
            "css": "div#content,\n#pt-login,\ndiv.vectorTabs,\ndiv.vectorTabs *,\n.portal *,\ndiv.vectorMenu,\ndiv.vectorMenu h5 a,\ndiv#footer,\ndiv#footer * {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "wikibooks.org"
            ],
            "invert": [
                ".mwe-math-element"
            ]
        },
        {
            "url": [
                "wikidata.org"
            ],
            "invert": [
                ".wd-mp-headerimage"
            ]
        },
        {
            "url": [
                "wikimapia.org"
            ],
            "invert": [
                "#map"
            ]
        },
        {
            "url": [
                "wikimedia.org"
            ],
            "invert": [
                "img.graphite-graph",
                "img[src=\"images/black.png\"]"
            ]
        },
        {
            "url": [
                "wikipedia.org"
            ],
            "invert": [
                ".mwe-math-element",
                ".mw-ext-score",
                ".mw-wiki-logo",
                ".central-textlogo__image",
                ".svg-Wikimedia-logo_black",
                ".header .branding-box > a > span > img",
                ".main-footer-menuToggle",
                "div.post-content.footer-content > h2 > img",
                "img[src*=\"Loudspeaker.svg\"]",
                "img[alt=\"The Signpost\"]"
            ],
            "css": ".mwe-popups-discreet > svg,\ndiv .thumbimage[src$=\".png\"],\ndiv .thumbimage img[src$=\".png\"] {\n    background-color: white;\n}\n.mw-mmv-image .svg,\n.fullImageLink [src*=\".svg\"],\na[href$=\".svg\"]:hover > img,\na[href*=\".gif\"]:hover > img {\n    background-color: rgba(255, 255, 255, 0.75) !important;\n    background-blend-mode: color;\n}\n.diff-addedline .diffchange {\n    background-color: ${lightblue} !important;\n}\n.diff-deletedline .diffchange {\n    background-color: ${#feeec8} !important;\n}\n@keyframes unseen-fadeout-to-unread {\n    from {\n        background-color: ${#dce8ff} !important;\n    }\n    to {\n        background-color: ${#ffffff} !important;\n    }\n}\n@keyframes unseen-fadeout-to-read {\n    from {\n        background-color: ${#dce8ff} !important;\n    }\n    to {\n        background-color: ${#eaecf0} !important;\n    }\n}\n.main-top {\n    background: none !important;\n}",
            "ignoreInlineStyle": [
                ".legend-color",
                ".infobox > tbody > tr > td[style*=\"background-color\"]"
            ]
        },
        {
            "url": [
                "wikisource.org"
            ],
            "invert": [
                ".mwe-math-element"
            ]
        },
        {
            "url": [
                "wikiversity.org"
            ],
            "invert": [
                ".mwe-math-element"
            ]
        },
        {
            "url": [
                "wikiwand.com"
            ],
            "invert": [
                "img.mwe-math-fallback-image-inline",
                "img.immediate:not(.ntmb)",
                ".title_icon",
                "img.logo_img",
                "td.icon",
                "li.menu-tooltip:not(.lang_btn)"
            ]
        },
        {
            "url": [
                "wiktionary.org"
            ],
            "css": "div.NavFrame div.NavHead {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "windows.php.net"
            ],
            "css": "#content-columns .block,\n#page-area .content {\n    background-image: none !important;\n}\n#content-columns .block .corners-top, \n#content-columns .block .corners-bottom, \n#page-area .content .corners-top,\n#page-area .content .corners-bottom {\n   filter: invert(91%) !important;\n}",
            "ignoreImageAnalysis": [
                "#content-columns .block .corners-top",
                "#content-columns .block .corners-bottom",
                "#page-area .content .corners-top",
                "#page-area .content .corners-bottom",
                "#content-columns .block .corners-top span",
                "#content-columns .block .corners-bottom span",
                "#page-area .content .corners-top span",
                "#page-area .content .corners-bottom span",
                "#main-column .innerbox .corners-top",
                "#main-column .innerbox .corners-bottom",
                "#mid-column .innerbox .corners-top",
                "#mid-column .innerbox .corners-bottom",
                "#main-column .innerbox .corners-top span",
                "#main-column .innerbox .corners-bottom span",
                "#mid-column .innerbox .corners-top span",
                "#mid-column .innerbox .corners-bottom span"
            ]
        },
        {
            "url": [
                "wired.co.uk"
            ],
            "invert": [
                "body a svg",
                ".c-nav__open-icon",
                ".c-nav__close-icon"
            ]
        },
        {
            "url": [
                "wired.com"
            ],
            "invert": [
                "i.logo.icon.icon--logo--150",
                "picture.standard-navigation__logo-image.responsive-image"
            ]
        },
        {
            "url": [
                "worldometers.info"
            ],
            "invert": [
                "#coronavirus-cases-log.active .highcharts-background",
                "#coronavirus-deaths-log.active .highcharts-background",
                "#coronavirus-cases-linear.active .highcharts-background",
                "#coronavirus-deaths-linear.active .highcharts-background"
            ]
        },
        {
            "url": [
                "worldtimebuddy.com"
            ],
            "invert": [
                "div.country",
                "div.city",
                "div.data"
            ],
            "css": "body {\n    background: none !important;\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "wowturkey.com"
            ],
            "css": "body {\n    background: none !important;\n}\n.cevapButton {\n    background: var(--darkreader-neutral-background) !important;\n    background-image: none !important;\n}\nspan.postdetails span.name a {\n    background: transparent !important;\n}",
            "ignoreInlineStyle": [
                ".cevapButton",
                "span.name a"
            ]
        },
        {
            "url": [
                "wuffs.org"
            ],
            "css": ".heavyShower {\n    background-color: ${#e4b849} !important;\n}\n.lightShower {\n    background-color: ${#ff9} !important;\n}\n.wday-0, .wday-6 {\n    background: ${#ccc} !important;\n}\n.wday-0 .mWeekday,\n.wday-6 .mWeekday {\n    color: ${#000059} !important;\n}\nselect:focus {\n    color: var(--darkreader-selection-text) !important;\n}"
        },
        {
            "url": [
                "wunderground.com"
            ],
            "css": ".bar-on  {\n   fill: rgba(0, 0, 0, 0.4) !important;\n}"
        },
        {
            "url": [
                "www.bromite.org"
            ],
            "ignoreImageAnalysis": [
                "body"
            ]
        },
        {
            "url": [
                "www.ebay.*",
                "www.ebay.*.*"
            ],
            "css": "html, body {\n    background-image: none !important;\n}\n#buyerComments {\n    color: var(--darkreader-neutral-text) !important;\n}"
        },
        {
            "url": [
                "www.freepascal.org/docs-html"
            ],
            "invert": [
                "img"
            ]
        },
        {
            "url": [
                "www.gamer.com.tw",
                "forum.gamer.com.tw"
            ],
            "invert": [
                ".gsc-search-box",
                ".TOP-msglist div.new a",
                ".BA-ctag1 a"
            ],
            "css": "body, .BA-topbg {\n    background: none;\n}\n.TOP-bh {\n    background: linear-gradient(to right, #117e96 0%, #116b80 35%, #125b6b 80%);\n}\n\n.TOP-msglist div.new a {\n    color: ${#969696};\n}\n.TOP-msglist div.new a .link {\n    color: ${#3391ff};\n}"
        },
        {
            "url": [
                "www.google.*",
                "www.google.*.*"
            ],
            "invert": [
                ".gb_hc",
                ".gb_ec",
                ".gb_x.gb_Vb",
                ".gb_x.gb_Ub",
                ".gb_0b",
                "#dictionary-modules img[src*=\"png\"]",
                "a.gb_b > div",
                "a[href*=\"about/products\"][title]",
                ".JOmIqc",
                ".hLcKi",
                "#EcMbV",
                ".vk-sf-b",
                ".vk-t-btn",
                ".ChZgtd div::before",
                ".ChZgtd div::after",
                ".yPHXsc div",
                ".mn-dwn-arw"
            ],
            "css": ".RNNXgb {\n    box-shadow: 0 0 2px 0 ${rgba(0,0,0,0.16)}, 0 0 0 1px ${rgba(0,0,0,0.08)} !important;\n}\n.Gor6zc {\n    background-color: white !important;\n}",
            "ignoreInlineStyle": [
                ".kdPwrb",
                ".rnt3Ze",
                ".NYcQFd"
            ]
        },
        {
            "url": [
                "www.jiqizhixin.com"
            ],
            "invert": [
                ".header__logo"
            ]
        },
        {
            "url": [
                "www.realtek.com"
            ],
            "css": "#t3-header {\n    background: ${white} !important;\n}\n#t3-header > div > div.col-xs-3.visible-xs-block > button.search-toggle {\n    background-color: inherit !important;\n}\n#t3-header > div > div.col-xs-3.visible-xs-block > button.globe-toggle {\n    background-color: inherit !important;\n}\nbody > div.t3-wrapper > div > div.section-wrap.bg-wrap1 > div > div > div.custom > div > a {\n    background-color: ${white} !important;\n}"
        },
        {
            "url": [
                "www.tinkercad.com/things"
            ],
            "css": ".editor-3d-container .viewcube__button {\n    background-color: white !important;\n}"
        },
        {
            "url": [
                "www.usaa.com"
            ],
            "css": ".pfmContent, .categoryInputElement, div.yui-overlay, .yui-dt-data td, body {\n    background-color: black !important;\n    background-image: none !important;\n}\n\n.tableContainer thead th {\n    background-image: none !important;\n    background-color: ${white} !important;\n}\n\n.tableContainer thead {\n    border: 2px solid white !important;\n}"
        },
        {
            "url": [
                "wx.qq.com",
                "wx2.qq.com"
            ],
            "css": "body {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "x-kom.pl"
            ],
            "invert": [
                "a[href=\"/\"] img",
                "a[href=\"https://x-kom.pl\"] img",
                "a[href=\"https://www.x-kom.pl\"] img",
                "img[alt=\"Menu\"]"
            ]
        },
        {
            "url": [
                "xda-developers.com"
            ],
            "css": ".hb-trigger-inner, .hb-trigger-inner::before, .hb-trigger-inner::after {\n    background-color: ${rgb(48, 51, 53)} !important;\n}\n.hb-trigger:hover .hb-trigger-inner, .hb-trigger:hover .hb-trigger-inner::before, .hb-trigger:hover .hb-trigger-inner::after, .hb-trigger:active .hb-trigger-inner, .hb-trigger:active .hb-trigger-inner::before, .hb-trigger:active .hb-trigger-inner::after, .hb-trigger:focus .hb-trigger-inner, .hb-trigger:focus .hb-trigger-inner::before, .hb-trigger:focus .hb-trigger-inner::after {\n    background-color: ${black} !important;\n}"
        },
        {
            "url": [
                "xfree86.org"
            ],
            "invert": [
                "img[src*=\".png\"]"
            ]
        },
        {
            "url": [
                "yadi.sk"
            ],
            "invert": [
                "span.logo.burger-sidebar__logo",
                "span.logo.burger-sidebar__sidebar-logo"
            ]
        },
        {
            "url": [
                "yandex.*/maps"
            ],
            "invert": [
                ".content-panel-header__logo",
                ".whats-here-preview__control-search-icon",
                ".close-button._color_black._circle",
                ".business-social-links-view__icon",
                ".social-share-view_discovery-small",
                ".social-share-view_discovery-large",
                ".orgpage-social-links-view__icon",
                ".map-container > ymaps > ymaps > ymaps > ymaps",
                ".map-container > ymaps > ymaps > canvas"
            ]
        },
        {
            "url": [
                "youmath.it",
                "*.youmath.it"
            ],
            "invert": [
                ".ltximg"
            ]
        },
        {
            "url": [
                "youtube.com"
            ],
            "invert": [
                "#tube-mount .b img"
            ],
            "css": "html[hide-scrollbar] ::-webkit-scrollbar {\n    display: none !important;\n}\n#contenteditable-textarea {\n    color: ${black} !important;\n}\n#like-bar {\n    background-color: ${rgb(144, 144, 144)} !important;\n}\n#search-icon-legacy.ytd-searchbox {\n    border: 1px solid var(--ytd-searchbox-legacy-border-color) !important;\n}\nyt-formatted-string.ytd-video-primary-info-renderer {\n    color: ${black} !important;\n}\nhtml:not(.style-scope) {\n    --primary-text-color: ${#212121} !important;\n    --primary-background-color: ${#ffffff} !important;\n    --disabled-text-color: ${#9b9b9b} !important;\n    --divider-color: ${#dbdbdb} !important;\n    --error-color: ${#dd2c00} !important;\n    --primary-color: ${#3f51b5} !important;\n    --accent-color: ${#ff4081} !important;\n    --yt-live-chat-action-panel-background-color: ${hsla(0, 0%, 93.3%, .4)} !important;\n    --yt-live-chat-action-panel-background-color-transparent: ${hsla(0, 0%, 97%, .8)} !important;\n    --yt-live-chat-background-color: ${hsl(0, 0%, 100%)} !important;\n    --yt-live-chat-primary-text-color: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-live-chat-secondary-background-color: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-live-chat-secondary-text-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-live-chat-tertiary-text-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --yt-live-chat-disabled-icon-button-color: ${hsla(0, 0%, 6.7%, .2)} !important;\n    --yt-live-chat-picker-button-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --yt-live-chat-text-input-field-suggestion-background-color: ${hsl(0, 0%, 100%)} !important;\n    --yt-live-chat-text-input-field-suggestion-background-color-hover: ${#eee} !important;\n    --yt-live-chat-text-input-field-suggestion-text-color: ${#666} !important;\n    --yt-live-chat-text-input-field-suggestion-text-color-hover: ${#333} !important;\n    --yt-live-chat-vem-background-color: ${hsl(0, 0, 93.3%)} !important;\n    --yt-emoji-picker-search-background-color: ${hsla(0, 0%, 100%, .6)} !important;\n    --yt-emoji-picker-search-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --yt-emoji-picker-search-placeholder-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-searchbox-border-color: ${hsla(0, 0%, 53.3%, .2)} !important;\n    --ytd-searchbox-legacy-border-color: ${#ccc} !important;\n    --ytd-searchbox-legacy-border-shadow-color: ${#eee} !important;\n    --ytd-searchbox-legacy-button-color: ${#f8f8f8} !important;\n    --ytd-searchbox-legacy-button-border-color: ${#d3d3d3} !important;\n    --ytd-searchbox-legacy-button-focus-color: ${#e9e9e9} !important;\n    --ytd-searchbox-legacy-button-hover-color: ${#f0f0f0} !important;\n    --ytd-searchbox-legacy-button-hover-border-color: ${#c6c6c6} !important;\n    --ytd-searchbox-legacy-button-icon-color: ${#333} !important;\n    --ytd-moderation-panel-background: ${hsla(0, 0%, 93.3%, .6)} !important;\n    --ytd-moderation-panel-hover: ${hsla(0, 0%, 93.3%, .8)} !important;\n    --ytd-moderation-panel-comment-text: ${hsl(0, 0%, 6.7%)} !important;\n    --ytd-moderation-panel-comment-metadata-text: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-moderation-icon-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-moderation-icon-hover-color: ${hsl(0, 0%, 6.7%)} !important;\n    --ytd-comment-text-color: ${hsl(0, 0%, 6.7%)} !important;\n    --ytd-watch-card-secondary-text-color: ${hsl(0, 0%, 53.3%)} !important;\n    --ytd-watch-card-album-header-background: ${hsl(0, 0%, 100%)} !important;\n    --ytd-backstage-metadata-text-color: ${hsl(0, 0%, 53.3%)} !important;\n    --ytd-backstage-video-link-background-color: ${hsla(0, 0%, 93.3%, .4)} !important;\n    --ytd-backstage-image-alert-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-backstage-cancel-background-color: ${hsl(0, 0%, 100%)} !important;\n    --ytd-backstage-cancel-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --ytd-backstage-attachment-background-color: ${hsl(0, 0%, 100%)} !important;\n    --ytd-backstage-creationbox-background-color: ${hsl(0, 0%, 98%)} !important;\n    --ytd-backstage-creationbox-background-color-focus: ${hsl(0, 0%, 96%)} !important;\n    --ytd-backstage-creationbox-inactive-color: ${hsla(0, 0%, 0%, .26)} !important;\n    --ytd-backstage-creationbox-text-color: ${hsla(0, 0%, 0%, .54)} !important;\n    --ytd-backstage-creationbox-input-text-color: ${hsla(0, 0%, 0%, .87)} !important;\n    --ytd-backstage-creationbox-disabled-button-color: ${hsla(0, 0%, 0%, .04)} !important;\n    --ytd-backstage-creationbox-disabled-button-text-color: ${hsl(0, 0%, 100%)} !important;\n    --ytd-backstage-attachment-icon-hover-color: ${hsla(0, 0%, 0%, .74)} !important;\n    --ytd-sponsorships-background-color-focus: ${hsla(0, 0%, 93.3%, .4)} !important;\n    --ytd-badge-disabled-color: ${hsla(0, 0%, 53.3%, .4)} !important;\n    --ytd-collection-badge-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --ytd-owner-badge-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --ytd-simple-badge-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-shopping-product-info: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --ytd-transcript-cue-hover-background-color: ${hsl(0, 0%, 93.3%)} !important;\n    --ytd-transcript-toolbar-background-color: ${hsl(0, 0%, 93.3%)} !important;\n    --ytd-transcript-toolbar-text: ${hsl(0, 0%, 6.7%)} !important;\n    --ytd-video-publish-date-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-vat-notice-text: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --ytd-offer-background-color: ${hsla(0, 0%, 93.3%, .4)} !important;\n    --ytd-video-game-watch-card-logo-color: ${hsl(0, 0%, 6.7%)} !important;\n    --ytd-watch-split-pane-sidebar-background-color: ${hsl(0, 0%, 98%)} !important;\n    --yt-swatch-icon-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --yt-swatch-primary: ${hsl(0, 0%, 100%)} !important;\n    --yt-swatch-primary-darker: ${rgb(230, 230, 230)} !important;\n    --yt-swatch-text: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --yt-swatch-input-text: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-swatch-textbox-bg: ${rgb(255, 255, 255)} !important;\n    --yt-spec-brand-background-solid: ${#FFFFFF} !important;\n    --yt-spec-brand-background-primary: ${rgba(255, 255, 255, 0.98)} !important;\n    --yt-spec-brand-background-secondary: ${rgba(255, 255, 255, 0.95)} !important;\n    --yt-spec-feed-background-a: ${#F9F9F9} !important;\n    --yt-spec-feed-background-b: ${#F3F3F3} !important;\n    --yt-spec-feed-background-c: ${#EDEDED} !important;\n    --yt-spec-error-background: ${#1F1F1F} !important;\n    --yt-spec-text-primary: ${#0A0A0A} !important;\n    --yt-spec-text-primary-inverse: ${#FFFFFF} !important;\n    --yt-spec-text-secondary: ${#606060} !important;\n    --yt-spec-text-disabled: ${#909090} !important;\n    --yt-spec-call-to-action: ${#065FD4} !important;\n    --yt-spec-icon-active-other: ${#606060} !important;\n    --yt-spec-icon-inactive: ${#909090} !important;\n    --yt-spec-icon-disabled: ${#CCCCCC} !important;\n    --yt-spec-badge-chip-background: ${rgba(0, 0, 0, 0.05)} !important;\n    --yt-spec-suggested-action: ${#F2F8FF} !important;\n    --yt-spec-button-chip-background-hover: ${rgba(0, 0, 0, 0.10)} !important;\n    --yt-spec-touch-response: ${#000000} !important;\n    --yt-spec-filled-button-text: ${#FFFFFF} !important;\n    --yt-spec-call-to-action-inverse: ${#3EA6FF} !important;\n    --yt-spec-brand-icon-inactive: ${#606060} !important;\n    --yt-spec-filled-button-focus-outline: ${rgba(0, 0, 0, 0.60)} !important;\n    --yt-spec-call-to-action-button-focus-outline: ${rgba(6, 95, 212, 0.30)} !important;\n    --yt-spec-brand-text-button-focus-outline: ${rgba(204, 0, 0, 0.30)} !important;\n    --yt-spec-inactive-text-button-focus-outline: ${#CCCCCC} !important;\n    --yt-spec-brand-subscribe-button-background: ${#FF0000} !important;\n    --yt-spec-wordmark-text: ${#282828} !important;\n    --yt-spec-10-percent-layer: ${rgba(0, 0, 0, 0.10)} !important;\n    --yt-spec-selected-nav-text: ${#CC0000} !important;\n    --yt-spec-themed-blue: ${#065FD4} !important;\n    --yt-spec-themed-green: ${#107516} !important;\n    --yt-std-body-300: ${hsla(0, 0%, 0%, .54)} !important;\n    --yt-std-surface-200: ${hsl(0, 0%, 98%)} !important;\n    --yt-std-surface-300: ${hsl(0, 0%, 96%)} !important;\n    --yt-std-surface-400: ${hsl(0, 0%, 93%)} !important;\n    --yt-primary-color: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-primary-text-color: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-hovered-text-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --yt-secondary-text-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --yt-tertiary-text-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-placeholder-text-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-border-color: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-commentbox-border-inactive: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-commentbox-border-active: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-primary-disabled-button-text-color: ${hsl(0, 0%, 100%)} !important;\n    --yt-paper-button-ink-color: ${hsl(0, 0%, 53.3%)} !important;\n    --yt-icon-color: ${hsla(0, 0%, 6.7%, .4)} !important;\n    --yt-icon-hover-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --yt-icon-disabled-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-icon-active-color: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-expand-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-placeholder-text: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-playlist-background-header: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-playlist-background-item: ${hsla(0, 0%, 93.3%, .6)} !important;\n    --yt-playlist-title-text: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-playlist-message-text: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-playlist-message-text-hover: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-button-active-color: ${hsl(0, 0%, 6.7%)} !important;\n    --yt-copyright-text: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-guide-entry-text-color: ${hsla(0, 0%, 6.7%, .8)} !important;\n    --yt-thumbnail-placeholder-color: ${hsl(0, 0%, 89%)} !important;\n    --yt-featured-channel-title-text-color: ${hsla(0, 0%, 0%, .54)} !important;\n    --yt-formatted-string-deemphasize-color: ${hsl(0, 0%, 53.3%)} !important;\n    --yt-alert-background: ${hsla(0, 0%, 93.3%, .4)} !important;\n    --yt-video-secondary-info-description-background: ${hsla(0, 0%, 93.3%, .6)} !important;\n    --yt-material-searchbox-inactive: ${hsla(0, 0%, 93.3%, .6)} !important;\n    --yt-material-searchbox-active: ${hsl(0, 0%, 100%)} !important;\n    --yt-material-searchbox-inactive-shadow: ${hsla(0, 0%, 53.3%, .2)} !important;\n    --yt-material-searchbox-active-shadow: ${hsla(0, 0%, 0%, .26)} !important;\n    --yt-material-searchbox-inset: ${hsla(0, 0%, 0%, .04)} !important;\n    --yt-simple-menu-header-background: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-item-section-header-color: ${hsla(0, 0%, 6.7%, .6)} !important;\n    --yt-menu-hover-backgound-color: ${hsl(0, 0%, 93.3%)} !important;\n    --yt-menu-focus-background-color: ${hsla(0, 0%, 6.7%, .2)} !important;\n    --yt-chat-bubble-other-border-color: ${#CCCCCC} !important;\n    --yt-chat-bubble-other-background-color: ${#F9F9F9} !important;\n    --yt-chat-bubble-self-border-color: ${#CCCCCC} !important;\n    --yt-chat-bubble-self-background-color: ${#EDEDED} !important;\n    --yt-app-background: ${hsl(0, 0%, 100%)} !important;\n    --yt-main-app-background: ${hsl(0, 0%, 98%)} !important;\n    --yt-main-app-background-tmp: ${hsl(0, 0%, 100%)} !important;\n    --yt-guide-background: ${hsl(0, 0%, 96%)} !important;\n    --yt-dialog-background: ${hsl(0, 0%, 100%)} !important;\n    --yt-searchbox-background: ${hsl(0, 0%, 100%)} !important;\n    --yt-channel-header-background: ${hsl(0, 0%, 98%)} !important;\n    --yt-sidebar-background: ${hsl(0, 0%, 98%)} !important;\n    --yt-transcript-background: ${hsl(0, 0%, 100%)} !important;\n    --yt-spec-general-background-a: ${white} !important;\n    --yt-spec-general-background-b: ${#f1f1f1} !important;\n    --yt-spec-general-background-c: ${#e9e9e9} !important;\n    --yt-spec-brand-icon-active: #{rgb(255, 0, 0)} !important;\n}\n.ytp-hover-progress-light {\n    background-color: rgba(255,255,255,.5) !important;\n}\n.ytp-progress-list {\n    background-color: rgba(255,255,255,.2) !important;\n}\n.ytp-volume-slider-handle {\n    background-color: white !important;\n}\n.ytp-volume-slider-handle::before {\n    background-color: white !important;\n}\n.ytp-volume-slider-handle::after {\n    background-color: rgba(255,255,255,.2) !important;\n}\nbutton[aria-pressed=\"true\"] > yt-icon {\n    fill: var(--yt-spec-call-to-action) !important;\n    color: var(--yt-spec-call-to-action) !important;\n}\n.ytp-menuitem-toggle-checkbox {\n    background: rgba(255, 255, 255, 0.3) !important;\n}\n.ytp-menuitem[aria-checked=\"true\"] .ytp-menuitem-toggle-checkbox {\n    background: #f00 !important;\n}\n.ytp-menuitem-toggle-checkbox::after {\n    background-color: #bdbdbd !important;\n}\n.ytp-menuitem[aria-checked=\"true\"] .ytp-menuitem-toggle-checkbox::after {\n    background-color: white !important;\n}\n#date yt-formatted-string.ytd-video-primary-info-renderer, .yt-view-count-renderer {\n    color: var(--yt-spec-text-secondary) !important;\n}\n.ytp-contextmenu .ytp-menuitem .ytp-menuitem-toggle-checkbox {\n    background: none !important;\n}\n.ytp-contextmenu .ytp-menuitem[aria-checked=\"true\"] .ytp-menuitem-toggle-checkbox {\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" fill=\"white\"/></svg>') !important;\n}\n#backgroundFrontLayer.app-header {\n    background-image: var(--app-header-background-front-layer_-_background-image) !important;\n}\n#metadata-line.ytd-video-meta-block span.ytd-video-meta-block {\n    color: var(--ytd-metadata-line-color, var(--yt-spec-text-secondary)) !important;\n}\nyt-formatted-string[has-link-only_]:not([force-default-style]) a.yt-simple-endpoint.yt-formatted-string {\n    color: var(--yt-endpoint-color, var(--yt-spec-text-primary)) !important;\n}\npaper-button.ytd-subscribe-button-renderer[subscribed] {\n    background-color: var(--yt-spec-10-percent-layer) !important\n}\n.badge-style-type-live-now.ytd-badge-supported-renderer {\n    border: 1px solid rgb(255, 78, 69) !important;\n}\n.ytp-load-progress {\n    background: rgba(255,255,255,0.3) !important;\n}\nyt-chip-cloud-chip-renderer {\n    background-color: rgba(255,255,255,0.05) !important;\n}\nyt-chip-cloud-chip-renderer.iron-selected {\n    background-color: rgba(255,255,255,0.2) !important;\n}\npaper-item[aria-selected=\"true\"] {\n    background-color: rgba(255,255,255,0.2) !important;\n}\niron-input.paper-input > input.paper-input,\n.input-content.paper-input-container > label, \n.input-content.paper-input-container > .paper-input-label {\n    color: var(--paper-input-container-shared-input-style_-_color) !important;\n}\nytd-compact-autoplay-renderer,\nytd-video-primary-info-renderer,\n#sections.ytd-guide-renderer > .ytd-guide-renderer:not(first-child),\nytd-video-secondary-info-renderer,\n#placeholder-area.ytd-comment-simplebox-renderer {\n    border-bottom-color: var(--yt-spec-10-percent-layer) !important;\n}\nytd-guide-collapsible-section-entry-renderer.ytd-guide-section-renderer:not(:first-child),\nytd-metadata-row-header-renderer[has-divider-line] {\n    border-top-color: var(--yt-spec-10-percent-layer) !important;\n}\nytd-guide-entry-renderer[active] .guide-icon.ytd-guide-entry-renderer {\n    fill: var(--yt-spec-brand-icon-active) !important;\n}"
        },
        {
            "url": [
                "yscec.yonsei.ac.kr"
            ],
            "invert": [
                "iframe",
                "#page-sidebar"
            ]
        },
        {
            "url": [
                "yuque.com"
            ],
            "invert": [
                ".lake-math-content-preview-img > img",
                ".lake-math-container > img",
                "div[data-lake-card=\"mindmap\"] > div > div > div"
            ]
        },
        {
            "url": [
                "zadowolenie.pl"
            ],
            "css": ".m-menu_list {\n    background: var(--darkreader-neutral-background);\n}"
        },
        {
            "url": [
                "zdf.de"
            ],
            "css": ".b-cluster-teaser.b-vertical-teaser:not(.x-newsstream):nth-child(even):not(.m-even):not(.m-odd) .box {\n    background-color: ${#ddd} !important;\n}\n.epg-teaser {\n    border: 1px solid ${#bbb} !important;\n}"
        },
        {
            "url": [
                "zdic.net"
            ],
            "invert": [
                "li a img",
                ".kxtimg",
                ".zipic img",
                ".zx img"
            ],
            "css": ".nr-box-header {\n    background-image: none !important;\n}"
        },
        {
            "url": [
                "zenn.dev"
            ],
            "css": ":root {\n    --c-primary-bg: #393e3f;\n}\n\n#header > div > div > a > svg > g {\n    fill: white !important;\n}"
        },
        {
            "url": [
                "zeptovm.com"
            ],
            "invert": [
                ".logo"
            ]
        },
        {
            "url": [
                "zhihu.com"
            ],
            "invert": [
                "img[eeimg=\"1\"]"
            ]
        },
        {
            "url": [
                "zsnout.com"
            ],
            "css": "html[layout=\"grid\"] section a {\n    background-color: var(--bg) !important;\n}\nsection h3,\nsection p {\n    color: ${white} !important;\n}"
        }
    ];

    var inversionFixes = [
        {
            "url": [
                "*"
            ],
            "invert": [
                "img",
                "video",
                ":not(object):not(body)>embed",
                "object",
                "svg image",
                "[style*=\"background:url\"]",
                "[style*=\"background-image:url\"]",
                "[style*=\"background: url\"]",
                "[style*=\"background-image: url\"]",
                "[background]",
                "twitterwidget"
            ],
            "noinvert": [
                "[style*=\"background:url\"] *",
                "[style*=\"background-image:url\"] *",
                "[style*=\"background: url\"] *",
                "[style*=\"background-image: url\"] *",
                "input",
                "[background] *",
                "img[src^=\"https://s0.wp.com/latex.php\"]",
                "twitterwidget .NaturalImage-image"
            ],
            "removebg": [
                ".compatibility-with-darkreader-below-4-3-3"
            ],
            "css": ".compatibility-with-darkreader-below-4-3-3 {\n    background: white !important;\n}"
        },
        {
            "url": [
                "airbnb.com"
            ],
            "invert": [
                ".background-cover",
                "#footer",
                "#photo-modal"
            ],
            "noinvert": [
                "#footer *",
                "#photo-modal *"
            ]
        },
        {
            "url": [
                "algassert.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "aliexpress.com"
            ],
            "css": "#j-qrcode-img, #J_QRCodeImg {\n    background-color: white !important;\n}"
        },
        {
            "url": [
                "amazon.com"
            ],
            "invert": [
                "#navbar",
                "#nav-subnav",
                "#navFooter",
                ".dv-storefront-page",
                ".av-hero-background-size",
                ".av-detail-bottom-bar",
                ".webPlayerContainer",
                ".avu-content",
                ".avu-section-alt",
                ".av-badges",
                ".controlsOverlayTopRight",
                ".pausedOverlay",
                ".nav-flyout"
            ],
            "noinvert": [
                ".DigitalVideoWebNodeLists_Item__itemImage",
                ".av-hero-background",
                ".avu-content img",
                ".dv-tile img",
                "video"
            ]
        },
        {
            "url": [
                "anankeiot.com"
            ],
            "invert": [
                "#sidebar-left",
                ".page-header",
                ".add-button",
                ".panel-footer"
            ]
        },
        {
            "url": [
                "androidpolice.com"
            ],
            "invert": [
                ".ap-nav-wrapper",
                ".footer",
                ".logo"
            ],
            "noinvert": [
                ".ap-nav-wrapper *",
                ".footer *"
            ]
        },
        {
            "url": [
                "answers.unity.com"
            ],
            "invert": [
                ".header-wrapper",
                ".navbar"
            ]
        },
        {
            "url": [
                "askubuntu.com"
            ],
            "removebg": [
                "body"
            ]
        },
        {
            "url": [
                "atlassian.net"
            ],
            "invert": [
                ".EditPage_withPanels_3Hr",
                ".aui-toolbar",
                ".editor",
                ".toolbar-item"
            ]
        },
        {
            "url": [
                "audible.com"
            ],
            "invert": [
                "img.adbl-cp-cursor"
            ]
        },
        {
            "url": [
                "aws.amazon.com"
            ],
            "invert": [
                ".m-nav-header",
                ".m-nav-panel-wrapper"
            ]
        },
        {
            "url": [
                "baike.baidu.com"
            ],
            "invert": [
                ".formula"
            ]
        },
        {
            "url": [
                "bart.gov/schedules"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "basho.com"
            ],
            "invert": [
                "#site-navigation",
                "footer",
                "header",
                ".featured-news-wrapper",
                ":not(.lang):not(#foot-logo)>img"
            ]
        },
        {
            "url": [
                "bbc.com"
            ],
            "invert": [
                "div.orb-nav-section.orb-nav-blocks > a > img"
            ]
        },
        {
            "url": [
                "bestbuy.com"
            ],
            "invert": [
                "#None > div > section > div.comparison-container.comparison-container-l.legacy-variant",
                ".product-container"
            ]
        },
        {
            "url": [
                "betterexplained.com"
            ],
            "noinvert": [
                "img.tex"
            ]
        },
        {
            "url": [
                "bit-tech.net",
                "forums.bit-tech.net"
            ],
            "invert": [
                "div#subNav",
                "div#anotherSubNav",
                ".footerContainer",
                "div.footer",
                "#bitFooter",
                ".nodeIcon",
                "li.navTab.forums.selected",
                "li.navTab.xengallery.selected",
                "li.navTab.members.selected"
            ],
            "removebg": [
                "#blurBackground",
                ".background-image",
                "#headerMover",
                "#loginBar"
            ]
        },
        {
            "url": [
                "buxfer.com"
            ],
            "invert": [
                ".UIDesktopAppHeader",
                ".UISidebarDrawer",
                ".UISidebar"
            ]
        },
        {
            "url": [
                "bytesloader.com"
            ],
            "invert": [
                ".footer-distributed",
                ".navbar-inverse"
            ]
        },
        {
            "url": [
                "central.bitdefender.com"
            ],
            "invert": [
                "#left_nav",
                ".top_nav",
                "#user_avatar"
            ],
            "noinvert": [
                ".logo",
                "#left_nav *",
                ".top_nav *"
            ]
        },
        {
            "url": [
                "cloud-catcher.squiddev.cc"
            ],
            "invert": [
                "button[class*=\"styles_action-button\"]"
            ],
            "css": "button[title*=\"computer off\"] svg path {\n  fill: green !important;\n}"
        },
        {
            "url": [
                "cloud.digitalocean.com"
            ],
            "invert": [
                ".aurora-container-left"
            ]
        },
        {
            "url": [
                "codebasehq.com"
            ],
            "invert": [
                "a.Project__link"
            ]
        },
        {
            "url": [
                "codecombat.com"
            ],
            "invert": [
                ".modal-content",
                ".map-background",
                ".game-controls",
                ".level-content",
                ".modal-backdrop"
            ]
        },
        {
            "url": [
                "dailymail.co.uk"
            ],
            "noinvert": [
                ".masthead #logo"
            ]
        },
        {
            "url": [
                "dash.cloudflare.com"
            ],
            "noinvert": [
                ".c_bt > div:nth-child(1) > svg:nth-child(1)",
                ".c_k"
            ]
        },
        {
            "url": [
                "dedication.pl"
            ],
            "invert": [
                ".wwzing"
            ]
        },
        {
            "url": [
                "deezer.com"
            ],
            "invert": [
                ".page-sidebar"
            ],
            "noinvert": [
                ".player-cover *"
            ]
        },
        {
            "url": [
                "detexify.kirelabs.org"
            ],
            "invert": [
                ".symbol img"
            ]
        },
        {
            "url": [
                "devdocs.io"
            ],
            "noinvert": [
                "._theme-dark"
            ]
        },
        {
            "url": [
                "developer.chrome.com"
            ],
            "css": "mark, pre b {\n    background-color: ${#fe7} !important;\n}"
        },
        {
            "url": [
                "developer.mozilla.org"
            ],
            "invert": [
                "#nav-footer",
                ".highlight-span",
                ".readOnlyInline",
                "#nav-sec",
                "#toc",
                ".socialaccount-providers",
                ".toggle-container .current"
            ]
        },
        {
            "url": [
                "developer.playfab.com"
            ],
            "invert": [
                "header"
            ]
        },
        {
            "url": [
                "deviantart.com"
            ],
            "invert": [
                "#navbar-menu",
                "#overhead-collect",
                ".text-wrap",
                ".thumb > .info",
                ".mobileMenuWrapper",
                ".tv150-tag",
                ".hero",
                ".hero-thumb",
                ".hero-thumb > .info",
                ".loggedOut",
                ".minibrowse-mobile-paddles-container"
            ],
            "noinvert": [
                ".extra-info .avatar",
                ".tt-crop > .tinythumb"
            ]
        },
        {
            "url": [
                "disqus.com/embed/"
            ],
            "invert": [
                "body.dark"
            ],
            "noinvert": [
                "body.dark *"
            ]
        },
        {
            "url": [
                "docs.gamesparks.com"
            ],
            "invert": [
                ".side-menu",
                ".home-menu",
                ".hljs"
            ]
        },
        {
            "url": [
                "docs.google.com"
            ],
            "invert": [
                ".jfk-palette-colorswatch",
                "[aria-label^=\"Google Account\"]",
                "div[title=\"Profile\"]",
                ".kix-embeddedobject-image"
            ]
        },
        {
            "url": [
                "docs.microsoft.com"
            ],
            "noinvert": [
                ".theme-dark",
                ".theme_night"
            ]
        },
        {
            "url": [
                "docs.unity3d.com"
            ],
            "invert": [
                ".header",
                ".navbar-inverse"
            ]
        },
        {
            "url": [
                "doodle.com"
            ],
            "invert": [
                ".d-footerContentContainer"
            ]
        },
        {
            "url": [
                "drive.google.com"
            ],
            "invert": [
                "[aria-label^=\"Showing viewer\"] > [aria-label^=\"Displaying\"]",
                "[aria-label^=\"Showing viewer\"] > [role=\"toolbar\"]",
                "[aria-label^=\"Showing viewer\"] [role=\"button\"][data-tooltip=\"Previous\"]",
                "[aria-label^=\"Showing viewer\"] [role=\"button\"][data-tooltip=\"Next\"]",
                "[aria-label^=\"Showing viewer\"] [aria-label^=\"Page\"]",
                "[aria-label^=\"Showing viewer\"] [aria-label^=\"Page\"] + div",
                "[aria-label^=\"No preview available\"]",
                "[aria-label^=\"No preview available\"] ~ div",
                "[aria-label^=\"There was a problem previewing\"]",
                "[aria-label^=\"There was a problem previewing\"] ~ div",
                "[aria-label^=\"Google Account\"]",
                "div[title=\"Profile\"]"
            ]
        },
        {
            "url": [
                "dsl.sk"
            ],
            "noinvert": [
                "#header img",
                "#title_bar img",
                "#bg > table > tbody > tr:nth-of-type(1) > td:nth-of-type(1)",
                "img[src=\"images/article_perex.gif\"]",
                "img[src=\"/images/design/feedback_pos.png\"]",
                "img[src=\"/images/design/feedback_neg.png\"]"
            ],
            "removebg": [
                "#menu",
                "#bg > table > tbody > tr:nth-of-type(1) > td:nth-of-type(1)"
            ]
        },
        {
            "url": [
                "duckduckgo.com"
            ],
            "invert": [
                "html:not(.dark-bg) #logo_homepage_link",
                "html:not(.dark-bg) span.header__logo.js-logo-ddg"
            ],
            "noinvert": [
                "html.dark-bg",
                "html.dark-bg *"
            ]
        },
        {
            "url": [
                "ebay.*"
            ],
            "invert": [
                "body[style*=\"background-image: url\"] img",
                "body[style*=\"background-image: url\"] video",
                "body[style*=\"background-image: url\"] [style*=\"background-image: url\"]"
            ],
            "noinvert": [
                "body[style*=\"background-image: url\"]"
            ]
        },
        {
            "url": [
                "electronics-tutorials.ws"
            ],
            "removebg": [
                "img"
            ]
        },
        {
            "url": [
                "electronjs.org"
            ],
            "invert": [
                "header",
                ".jumbotron-home",
                ".highlight-dark"
            ]
        },
        {
            "url": [
                "exhentai.org",
                "e-hentai.org"
            ],
            "invert": [
                "#gd1",
                ".gdtm > div"
            ]
        },
        {
            "url": [
                "facebook.com"
            ],
            "invert": [
                "._3ixn",
                "._2teu",
                ".userContentWrapper canvas",
                "._4lqu",
                "._4lqt",
                "._24ws",
                "._1z0-",
                "._19eb",
                "._5rpb",
                "._5rpu",
                "._3t54",
                "._1-h1",
                "._3pit",
                "._5asn",
                "._1e8c",
                "._2b-0",
                "._2w_u",
                "._4who",
                "._4g9v",
                "._3s6x",
                "._5b-_",
                "._2r86",
                "._2r84 ._62jm",
                "._3ekx",
                "._3uzm",
                "._4-lv",
                "._6m3",
                "._2t_q",
                "._4-lv [role=\"button\"]",
                "._2ph-",
                "._39n",
                "._3u15",
                ".snowliftOverlay",
                ".coverNoImage",
                ".fbTimelineProfilePicSelector",
                ".uiTooltipX",
                "body.UIPage_LoggedOut #blueBarDOMInspector",
                "body.UIPage_LoggedOut #blueBarDOMInspector .inputtext",
                "canvas"
            ],
            "noinvert": [
                ".uiStreamStory video",
                ".inputtext"
            ],
            "removebg": [
                "._4d3w .stageWrapper",
                "._4lpe",
                ".stage",
                ".videoStage"
            ],
            "css": "._2s1x ._2s1y {\n    background: #9BB5E8 !important;\n    border-bottom-color: #92A6CA !important;\n    color: black !important;\n}\n.uiContextualLayerParent {\n    box-shadow: none !important;\n}"
        },
        {
            "url": [
                "farside.ph.utexas.edu"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "feedback.unity3d.com"
            ],
            "invert": [
                ".header-wrapper",
                ".navbar",
                ".bg-ud"
            ]
        },
        {
            "url": [
                "feedly.com"
            ],
            "invert": [
                ".people .photo",
                "#feedlyUndoSign",
                "#feedlySignPart",
                ".pinContainer",
                ".visual-overlay"
            ],
            "css": ".entry-overlay {\n    background-color: rgba(220,220,220,0.5);\n}"
        },
        {
            "url": [
                "feynmanlectures.caltech.edu"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "fontspring.com"
            ],
            "noinvert": [
                ".grid6 .fullwidth"
            ]
        },
        {
            "url": [
                "forum.unity.com"
            ],
            "invert": [
                ".main-navigation",
                ".sub-nav",
                ".unity-logo",
                ".icon",
                ".sub-nav"
            ]
        },
        {
            "url": [
                "gadgety.co.il"
            ],
            "invert": [
                "iframe[src^=\"https://www.youtube.com/embed\"]"
            ]
        },
        {
            "url": [
                "gamesparks.com"
            ],
            "invert": [
                ".main_header",
                ".block_compatibility",
                ".grid_overlay",
                ".block_insights",
                ".main_footer",
                ".docs-hero"
            ]
        },
        {
            "url": [
                "genk.vn"
            ],
            "invert": [
                ".ghw-bottom-header",
                ".ghw-top-header"
            ]
        },
        {
            "url": [
                "gigaom.com"
            ],
            "invert": [
                ".bg"
            ]
        },
        {
            "url": [
                "github.com"
            ],
            "invert": [
                ".jumbotron-codelines",
                ".bg-gray-dark",
                ".bg-gray-dark .form-group",
                ".js-project-header",
                ".header-logo-invertocat",
                ".notification-indicator",
                ".label",
                ".label-color",
                ".tooltipped:not(.notification-indicator)::before",
                ".tooltipped:not(.notification-indicator)::after",
                ".HeaderNavlink [data-ga-click*=\"(Logged out)\"]"
            ],
            "css": "header {\n    background-color: #dae1e7 !important;\n}\n.markdown-body img {\n    background-color: transparent !important;\n}\n.Header .header-search-wrapper {\n    background-color: rgba(0, 0, 0, 0.125) !important;\n}\n.js-selected-navigation-item {\n    color: rgba(0, 0, 0, 0.75) !important;\n}\nheader,\n.HeaderNavlink,\n.Header .header-search-input,\n.Header .header-search-input::placeholder {\n    color: rgba(0, 0, 0, 0.75) !important;\n}\n.Header .header-search-scope {\n    border-right-color: #ccd7e1 !important;\n    color: rgba(0, 0, 0, 0.75) !important;\n}\n.select-menu-item.navigation-focus,\n.select-menu-item.navigation-focus.selected,\n.select-menu-item.navigation-focus.select-menu-action,\n.select-menu-item.navigation-focus .description-inline {\n    background: #93c6ff !important;\n    color: black !important;\n}\n.HeaderMenu-link,\n.select-menu-item.navigation-focus > .octicon,\n.select-menu-item.navigation-focus.selected > .octicon,\n.select-menu-item.navigation-focus.select-menu-action > .octicon,\n.select-menu-item.navigation-focus .description-inline > .octicon {\n    color: black !important;\n}"
        },
        {
            "url": [
                "gitlab.*"
            ],
            "invert": [
                "gl-emoji",
                ".navbar",
                ".code.dark",
                ".code.dark .notes_holder",
                ".code.solarized-dark",
                ".code.solarized-dark .notes_holder",
                ".code.monokai",
                ".code.monokai .notes_holder",
                ".blame-commit"
            ],
            "noinvert": [
                ".ui_light .navbar"
            ],
            "css": "#build-trace {\n    background: rgba(255, 255, 255, 0.7) !important;\n}\npre code {\n    color: #777777 !important;\n}"
        },
        {
            "url": [
                "gls-pakete.de"
            ],
            "css": ".tracking--status .status-box::before, .tracking--status .status-box::after {\n    z-index: 0 !important;\n}\n\n.tracking--status .status-box.status--complete.status--lastcomplete .status-box--tooltip, .tracking--status .status-box.status--current .status-box--tooltip {\n    transform: none !important;\n    position: absolute !important;\n    margin-bottom: 0px !important;\n    margin-top: -10px !important;\n    bottom: 0 !important;\n}"
        },
        {
            "url": [
                "google.*",
                "google.*.*"
            ],
            "invert": [
                ".gb_2",
                ".gb_M",
                ".gsri_a",
                ".gbii",
                ".gbip",
                ".azp",
                ".aLF-aPX-KP",
                ".irc_bg",
                ".RY3tic",
                "canvas.circle",
                "#app-container.vasquette.app-imagery-mode .widget-scene-canvas",
                "#app-container.vasquette.app-globe-mode .widget-scene-canvas"
            ],
            "noinvert": [
                ".irc_mi",
                ".irc_rii",
                ".irc_mut",
                ".act-icon-dark-gray",
                ".amI",
                ".amJ",
                ".adk",
                ".adj",
                "[src*=\"ic_\"]",
                "[src*=\"black\"]",
                ".mL",
                ".ajT",
                ".hB",
                ".hA",
                ".mK",
                ".mI",
                "input[style*=\"data:image\"]",
                "img[src*=\"/books/content?\"]"
            ],
            "css": ".pI {\n    background: rgba(255, 255, 255, 0.7) !important;\n}\n.eB {\n    background: rgba(255, 255, 255, 0.4) !important;\n}"
        },
        {
            "url": [
                "granttree.co.uk"
            ],
            "invert": [
                "img",
                "video",
                "embed",
                ".photo"
            ]
        },
        {
            "url": [
                "habitica.com"
            ],
            "invert": [
                "nav.navbar",
                "#app-header",
                ".header",
                ".quest-boss",
                ".character-sprites",
                ".item-content",
                ".drawer-container .item",
                ".npc_matt",
                ".npc",
                ".seasonal .background",
                ".image",
                ".habitica-emoji",
                ".daniel_front",
                ".world-boss",
                ".dropdown-menu",
                ".dropdown-menu .notification",
                ".fade.show",
                ".modal-content",
                ".drawer-container"
            ],
            "noinvert": [
                "#app-header .character-sprites",
                ".seasonal .background .npc"
            ]
        },
        {
            "url": [
                "habr.com"
            ],
            "noinvert": [
                "img[src*=\"//tex.s2cms.ru/\"]"
            ]
        },
        {
            "url": [
                "hangouts.google.com"
            ],
            "invert": [
                ".g-Ue-ad",
                ".g-Ue-v0h5Oe",
                ".bdXzDb .pTh3n",
                ".gb_Hc",
                ".Ik",
                ".gbii",
                ".vm",
                ".Ce1Y1c"
            ],
            "noinvert": [
                "#gbq1"
            ],
            "removebg": [
                ".g-Qx-eb"
            ],
            "css": ".kFx1Ae-xdwExf-eb-m,\n.g-Qx-r4m2rf-wZVHld {\n    display: none;\n}"
        },
        {
            "url": [
                "homestuck.com"
            ],
            "invert": [
                ".read-link",
                "body.scratch",
                "body.sweet",
                "body:not(.scratch):not(.sweet) #animation_container",
                "body:not(.scratch):not(.sweet) .nav-btn--center",
                "body:not(.scratch):not(.sweet) #nav-container",
                "body:not(.scratch):not(.sweet) #game_overlay",
                "body.scratch #overlay",
                "body.sweet #overlay",
                "body.sweet #gamenav-container",
                "body.scratch #site-search",
                "body.sweet #site-search",
                "body.scratch .o_chat-log-btn"
            ],
            "noinvert": [
                "body.scratch img",
                "body.sweet img"
            ],
            "removebg": [
                "body:not(.scratch):not(.sweet)",
                "body:not(.scratch):not(.sweet) .o_site-footer"
            ]
        },
        {
            "url": [
                "html5rocks.com"
            ],
            "invert": [
                ".prettyprint"
            ]
        },
        {
            "url": [
                "hysterical-amusement.surge.sh"
            ],
            "invert": [
                "body",
                ".instructionsContainer",
                "#liveOutput"
            ]
        },
        {
            "url": [
                "ign.com"
            ],
            "invert": [
                ".video_embed_content-poster",
                ".video_embed_content-poster-play-button"
            ],
            "removebg": [
                "#review-promo"
            ]
        },
        {
            "url": [
                "imdb.com"
            ],
            "invert": [
                "#nb20 > div",
                "#navbar-suggestionsearch",
                ".caption_overlay",
                ".vital",
                ".slate_wrapper > .poster",
                ".slate",
                ".slate_fade_top",
                ".slate_fade_bottom",
                ".ab_hero",
                ".ab_hero .ninja_image",
                ".sub_nav",
                ".app-links",
                "#navMenuPro img",
                "#proAd",
                ".rec_default_image",
                "#photo-container",
                "#video-container"
            ],
            "noinvert": [
                "#navMenuPro",
                "#photo-container img",
                "#video-container img",
                "#video-container video"
            ],
            "removebg": [
                "#nb20"
            ]
        },
        {
            "url": [
                "immutables.github.io"
            ],
            "invert": [
                ".illustration",
                ".documentation .highlight"
            ]
        },
        {
            "url": [
                "instagram.com"
            ],
            "invert": [
                "._mli86",
                "._cqw45._2pnef"
            ],
            "css": "[role=\"dialog\"] {\n    background-color: rgba(255, 255, 255, 0.5) !important;\n}\n._sxolz {\n    background-color: #fff !important;\n}"
        },
        {
            "url": [
                "io9.com"
            ],
            "css": "html {\n    height: auto !important;\n}"
        },
        {
            "url": [
                "iopscience.iop.org"
            ],
            "noinvert": [
                "img[alt*=\"Equation\"]"
            ]
        },
        {
            "url": [
                "java.com"
            ],
            "invert": [
                "html #jvc0v2.bg1 .jvc0w1",
                "html #jvc0v2.bg2 .jvc0w1",
                "html #jvc0v2.bg3 .jvc0w1",
                "html #jvc0v2.bg4 .jvc0w1",
                "html #jvc0v2.bg5 .jvc0w1"
            ]
        },
        {
            "url": [
                "javarepl.com"
            ],
            "invert": [
                ".terminal-content"
            ],
            "removebg": [
                "body"
            ]
        },
        {
            "url": [
                "jcrew.com"
            ],
            "css": ".c-filters__refinement--label .refinement--label__checkbox svg path {\n    fill: transparent !important\n}\n.c-filters__refinement--label.is-selected .refinement--label__checkbox svg path {\n    fill: #fff !important\n}"
        },
        {
            "url": [
                "jeremykun.com"
            ],
            "noinvert": [
                "img[src*=\".gif\"]",
                "img[src*=\".png\"]"
            ]
        },
        {
            "url": [
                "jira.*",
                "jira.*.*"
            ],
            "invert": [
                ".chart img"
            ]
        },
        {
            "url": [
                "juejin.im"
            ],
            "noinvert": [
                ".equation"
            ]
        },
        {
            "url": [
                "khanacademy.org"
            ],
            "invert": [
                ".task-container .modal-backdrop"
            ]
        },
        {
            "url": [
                "kinopoisk.ru"
            ],
            "invert": [
                "#GOWrapper",
                "#external_header_wrapper",
                ".header-fresh-search-partial-component_theme_default",
                ".header-fresh-partial-component_theme_light",
                ".footer-v2-partial-component__navigation-wrapper",
                ".footer-v2-partial-component__bottom-navigation",
                ".header-fresh-partial-component_theme_default .header-fresh-partial-component__dropdown",
                ".info_title .gradient",
                ".info_title .gradient_director",
                ".movie-ticket-button",
                ".movie-trailer-button",
                ".randomMovie .name",
                ".picAndNums",
                ".promo-special",
                ".flag",
                ".main_info__quote",
                ".feedback_img",
                ".main_slider_arrow",
                "#top_3banners",
                ".yearsBox",
                ".bottom_bg",
                ".insert",
                ".trailer_descr",
                ".arrow",
                ".play",
                ".kp2-authapi-overlay",
                ".kp2-authapi-paranja",
                ".app__sticky-header",
                ".search-suggest__content",
                ".video-snippet__inner:after",
                ".video-snippet__content",
                ".tabs__tab_selected"
            ],
            "noinvert": [
                ".right-slider p",
                "#top_3banners img",
                ".zod img",
                ".peopleInfo table img",
                ".date img",
                ".rating img"
            ],
            "removebg": [
                "#content_block",
                ".box_block table table *"
            ],
            "css": ".discovery-trailers-overlay {\n    background: rgba(255, 255, 255, 0.8) !important;\n}\n#popup_info_wrapper * {\n    color: #bbb !important;\n}"
        },
        {
            "url": [
                "last.fm"
            ],
            "invert": [
                "div.masthead-logo",
                "ul.navlist-items",
                "div.navlist-more-wrap",
                "div.header-title-label-wrap",
                "div.grid-items-cover-image-image::after",
                "div.grid-items-item-details",
                "div.featured-item-details",
                "div.top-bar",
                "div.features-footer-cover-image::after",
                "p.features-footer-content",
                "button.btn-primary",
                "a.btn-primary",
                "footer"
            ]
        },
        {
            "url": [
                "learningsuite.byu.edu"
            ],
            "invert": [
                ".sidebarCalendar",
                ".calendarEmpty",
                ".white"
            ]
        },
        {
            "url": [
                "libretexts.org"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "lifehacker.com"
            ],
            "invert": [
                ".videoCube a .thumbBlock"
            ],
            "css": "html {\n    height: auto !important;\n}"
        },
        {
            "url": [
                "linerad.io"
            ],
            "invert": [
                ".header h1 img"
            ]
        },
        {
            "url": [
                "linkedin.com"
            ],
            "invert": [
                "#top-header",
                "#responsive-nav-scrollable"
            ],
            "noinvert": [
                "#top-header *",
                "#responsive-nav-scrollable *"
            ]
        },
        {
            "url": [
                "mail.live.com"
            ],
            "invert": [
                "img:not([src=\"https://a.gfx.ms/rte_metro2.png\"])",
                "video",
                "object",
                ".ComposeContent"
            ],
            "removebg": [
                ".ComposeContent"
            ]
        },
        {
            "url": [
                "mail.protonmail.com"
            ],
            "css": ".angular-squire-iframe body,\n.angular-squire-iframe body div {\n    background: #0D0E12 !important;\n    color: #fff !important;\n}"
        },
        {
            "url": [
                "mailchimp.com"
            ],
            "invert": [
                "svg"
            ],
            "noinvert": [
                ".cke_button_icon"
            ]
        },
        {
            "url": [
                "mathpages.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "mathprofi.ru",
                "mathprofi.net"
            ],
            "noinvert": [
                "p img"
            ]
        },
        {
            "url": [
                "mathworld.wolfram.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "matsci.org"
            ],
            "noinvert": [
                ".d-header #site-logo"
            ],
            "css": ".category-logo.aspect-image img {\n  background-color: white !important;\n}"
        },
        {
            "url": [
                "medium.com"
            ],
            "noinvert": [
                ".canvas-renderer"
            ]
        },
        {
            "url": [
                "meduza.io"
            ],
            "invert": [
                ".Header-root",
                ".Footer-root"
            ]
        },
        {
            "url": [
                "messenger.com"
            ],
            "invert": [
                "._4tsk"
            ]
        },
        {
            "url": [
                "minhaclaro.claro.com.br"
            ],
            "invert": [
                ".header-black",
                ".header-red-desktop-logada",
                "#txt-busca-header-desktop"
            ]
        },
        {
            "url": [
                "mixtape.moe/$"
            ],
            "invert": [
                "body",
                ".top > .menu",
                "#upload-filelist",
                ".file-url"
            ]
        },
        {
            "url": [
                "mspaintadventures.ru"
            ],
            "invert": [
                ".row",
                ".row img",
                ".row object",
                ".mspa_content_inner > .mspa_page_pictures",
                ".adv_content_inner > .adv_page_pictures",
                ".sidebar",
                ".content",
                ".footer",
                ".copyright",
                ".row:nth-of-type(1) > .header",
                ".row:nth-of-type(1) > .header > .banner",
                ".row:nth-of-type(1)[style*='width:940px'] div:not(.nav)"
            ],
            "noinvert": [
                ".nav img",
                "#page > .content",
                ".row > .row",
                ".content > .content",
                ".mspa_content_inner > .mspa_page_text img",
                ".adv_content_inner > .adv_page_text img"
            ],
            "css": "body {\n    background-color: #fff !important;\n}\n.sidebar {\n    border-color: #fff !important;\n}\nhtml,\n.banner,\n.row:nth-of-type(2),\n.row:nth-of-type(4) {\n    background-color: #000 !important;\n}"
        },
        {
            "url": [
                "mullvad.net"
            ],
            "invert": [
                "#Logo"
            ]
        },
        {
            "url": [
                "my.mail.ru/(music|mail|vk|ok|bk|list|gmail.com|inbox)"
            ],
            "invert": [
                ".b-head-layer_music",
                ".b-head__menu__logo",
                ".b-head__portal-navigation-wrapper",
                ".b-history-event__videoevent-name",
                ".b-music__genre__header__info",
                ".b-music__playlists--tile__item__controls",
                ".b-music__playlists--tile__item__stats",
                ".b-music__section__content",
                ".b-music__section__footer",
                ".b-music__section__row",
                ".b-music__top-artists__item__cover",
                ".b-music__top-artists__item__info",
                ".b-music__user-header__content",
                ".b-music__user-header__controls",
                ".b-music__user-header__title",
                ".b-popup__fade",
                ".btn-import",
                ".filed-images",
                ".l-music__menu-main",
                ".l-music__portal-navigation",
                ".l-music__search-form",
                ".l-music__sidebar__playlist-playing > .cover",
                ".playlists-block",
                ".smiles",
                ".songs-table__row__col__cover",
                ".ui-button-main"
            ],
            "noinvert": [
                "html",
                ".b-music__artist-header__content",
                ".b-music__artist-header__cover",
                ".b-music__section__cell",
                ".fixed-menu > .b-music__section__footer",
                ".l-mm__avatar",
                ".l-music__player__song__cover",
                ".playlists-block"
            ],
            "removebg": [
                ".b-music__user-header__bg--no-profile-cover"
            ],
            "css": ".l-music {\n    background: #111;\n}"
        },
        {
            "url": [
                "mydealz.de"
            ],
            "invert": [
                ".nav",
                ".search",
                ".threadTempBadge-icon",
                ".emoji",
                ".comment-image",
                ".avatar",
                "#footer",
                "#thread-comments",
                ".cept-action-user-profile",
                ".popover--mainNav",
                ".supportImage",
                ".profileHeader",
                ".cept-thread-image-link",
                ".cept-thread-image-clickout"
            ],
            "noinvert": [
                ".cept-userProfile-avatar",
                ".imgFrame-img"
            ],
            "css": ".cept-dealBtn, .btn--facebook{\n    letter-spacing: 0.5px;\n}\n.twitter-share-button{\n    letter-spacing: 1.5px;\n}\n.text--color-red, .vote-temp--hot, .vote-temp--burn, .icon--plus{\n    color: #ff3d00;\n}"
        },
        {
            "url": [
                "myfitnesspal.com"
            ],
            "invert": [
                "#fancybox-overlay"
            ]
        },
        {
            "url": [
                "neopets.com"
            ],
            "invert": [
                "#ban",
                "#header"
            ]
        },
        {
            "url": [
                "nodejs.org"
            ],
            "invert": [
                "#column2",
                "footer",
                "header"
            ],
            "css": "#column2.interior {\n    background: #212121;\n}\n#column2 ul {\n    background-color: #212121;\n}"
        },
        {
            "url": [
                "nvidia.com"
            ],
            "invert": [
                ".sub-brand-nav",
                ".brandLink"
            ]
        },
        {
            "url": [
                "onliner.by"
            ],
            "invert": [
                ".b-tile-main",
                ".b-teasers-2__teaser",
                ".news-tiles__subtitle",
                ".b-opinions-main-2__tile",
                ".news-header__top > .news-header__title",
                ".b-tile-grad"
            ],
            "noinvert": [
                ".b-opinions-main-2__tile *",
                ".b-teasers-2__teaser-i"
            ]
        },
        {
            "url": [
                "op.gg"
            ],
            "invert": [
                ".__sprite"
            ]
        },
        {
            "url": [
                "openclassrooms.com"
            ],
            "invert": [
                "code.ace"
            ],
            "noinvert": [
                "[class*=ace] *"
            ]
        },
        {
            "url": [
                "opencollective.com"
            ],
            "invert": [
                ".CollectiveCover",
                ".Footer",
                ".MailChimpInputSection",
                ".PublicFooter"
            ],
            "noinvert": [
                ".CollectiveCover *",
                ".Footer *",
                ".MailChimpInputSection *",
                ".PublicFooter *"
            ]
        },
        {
            "url": [
                "otakumode.com"
            ],
            "invert": [
                ".c-slick-image-viewer__main-image img"
            ]
        },
        {
            "url": [
                "outlook.live.com"
            ],
            "invert": [
                "#O365_NavHeader",
                "span.ms-Pivot-text",
                "span.ms-Pivot-icon",
                ".ms-FocusZone.ms-CommandBar"
            ]
        },
        {
            "url": [
                "pagerduty.com"
            ],
            "removebg": [
                "body"
            ]
        },
        {
            "url": [
                "pandora.com"
            ],
            "invert": [
                "#body",
                ".contentbox",
                "#detailContainer",
                "#mainContent",
                ".slidesBackground",
                ".slidesForeground"
            ],
            "css": ".skinContainer,\n.slidesBackground,\n.slidesForeground,\n#trackDetail,\n.track_detail_close {\n    background-color: black !important;\n}\n.fxCol-cont-1,\n.jspContainer,\n#trackInfoButtons {\n    background-color: white !important;\n}\n#brandingBar,\n.contentnav,\n.top {\n    background-color: #3d4043 !important;\n}\n#playerBar {\n    background-color: #0d0d0d !important;\n}"
        },
        {
            "url": [
                "paper.dropbox.com"
            ],
            "invert": [
                ".attrcomment.attrcomment"
            ]
        },
        {
            "url": [
                "perforce.com"
            ],
            "invert": [
                ".title-bar",
                ".sidenav-wrapper"
            ]
        },
        {
            "url": [
                "photos.google.com"
            ],
            "invert": [
                ".DwJIde .QtDoYb svg"
            ],
            "css": ".ZSTBVb, .DwJIde .NRbSyd {\n    background: white !important;\n}"
        },
        {
            "url": [
                "play.afreecatv.com"
            ],
            "invert": [
                "#afreecatv_player"
            ]
        },
        {
            "url": [
                "playfab.com"
            ],
            "invert": [
                ".hero"
            ]
        },
        {
            "url": [
                "poeaffix.net"
            ],
            "invert": [
                "#header"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "practice.geeksforgeeks.org"
            ],
            "invert": [
                ".ace_dark"
            ]
        },
        {
            "url": [
                "prntscr.com",
                "prnt.sc"
            ],
            "invert": [
                ".header"
            ]
        },
        {
            "url": [
                "producthunt.com"
            ],
            "invert": [
                ".backgroundImage_1hK9M",
                ".v-image"
            ],
            "noinvert": [
                ".backgroundImage_1hK9M *",
                ".v-image *"
            ],
            "css": ".post-detail--body--gallery-fullscreen--image {\n    background-color: black;\n}"
        },
        {
            "url": [
                "python.org"
            ],
            "invert": [
                "nav ul li > a",
                "nav .tier-2",
                "#site-navigation",
                "header",
                ".featured-news-wrapper",
                ":not(.lang):not(#foot-logo) > img"
            ],
            "noinvert": [
                ":not(.lang):not(#foot-logo) > img",
                "#content > div > section > div"
            ]
        },
        {
            "url": [
                "quora.com"
            ],
            "invert": [
                ".section_photo"
            ]
        },
        {
            "url": [
                "reactjs.org"
            ],
            "invert": [
                ".gatsby-highlight",
                ".css-mlkfzr",
                ".css-17t02fm"
            ]
        },
        {
            "url": [
                "readthedocs.io"
            ],
            "invert": [
                ".wy-nav-side",
                ".rst-versions",
                "li.current"
            ]
        },
        {
            "url": [
                "reddit.com/r/(homestuck|Undertale)"
            ],
            "invert": [
                "#header",
                "#header-bottom-right",
                "#sr-header-area",
                ".md h4"
            ],
            "noinvert": [
                "#header-img"
            ],
            "removebg": [
                "body"
            ]
        },
        {
            "url": [
                "reddit.com/r/europe"
            ],
            "invert": [
                ".flair"
            ]
        },
        {
            "url": [
                "reddit.com/r/firefox"
            ],
            "invert": [
                "#header",
                "#header-bottom-right"
            ]
        },
        {
            "url": [
                "reddit.com/r/GlobalOffensive"
            ],
            "invert": [
                "#header",
                ".side"
            ],
            "noinvert": [
                "#header *",
                ".side *"
            ],
            "css": "#mail::before {\n    display: none !important;\n}"
        },
        {
            "url": [
                "reddit.com/r/Paranormal"
            ],
            "invert": [
                "#header",
                "#sr-header-area",
                "#header-bottom-right"
            ]
        },
        {
            "url": [
                "reddit.com/r/skyrimmods"
            ],
            "invert": [
                "#header",
                ".infobar"
            ]
        },
        {
            "url": [
                "reference.wolfram.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "regexr.com"
            ],
            "invert": [
                "canvas.highlights"
            ]
        },
        {
            "url": [
                "rijnijssel.elo.education-online.nl"
            ],
            "noinvert": [
                ".app-left-sidebar"
            ]
        },
        {
            "url": [
                "roblox.com"
            ],
            "invert": [
                ".thumbnail-span",
                ".color-dot",
                ".avatar-back"
            ],
            "noinvert": [
                ".thumbnail-span *",
                ".avatar-back *"
            ],
            "css": ".avatar-thumbnail .enable-three-dee {\n     background-color: #000000;\n     color: #FFFFFF;\n}"
        },
        {
            "url": [
                "ruby.sketchup.com",
                "rubydoc.info"
            ],
            "invert": [
                "#navbar"
            ],
            "noinvert": [
                "#navbar a > img",
                "#nav"
            ]
        },
        {
            "url": [
                "scotch.io"
            ],
            "invert": [
                ".language-js",
                ".language-javascript"
            ]
        },
        {
            "url": [
                "script.google.com"
            ],
            "invert": [
                ".docs-icon-img-container"
            ]
        },
        {
            "url": [
                "semlar.com"
            ],
            "invert": [
                ".thumbnail",
                ".col-sm-2",
                ".img-rounded",
                "#alert-list",
                ".background-texture"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "shiyanlou.com"
            ],
            "invert": [
                "#display"
            ]
        },
        {
            "url": [
                "shop.ubi.com"
            ],
            "invert": [
                "#topNavbar",
                "#UplayHeader"
            ]
        },
        {
            "url": [
                "slack.com"
            ],
            "invert": [
                ".client_channels_list_container",
                "figure",
                ".member_preview_link.member_image"
            ],
            "noinvert": [
                ".client_channels_list_container *",
                "figure *"
            ],
            "css": ".emoji {\n    background-color: white;\n}"
        },
        {
            "url": [
                "slushpool.com"
            ],
            "invert": [
                ".siteHeader",
                ".contentHeader",
                ".contentSlider"
            ]
        },
        {
            "url": [
                "spotify.com"
            ],
            "invert": [
                "img",
                "video",
                "embed",
                ".hero",
                ".header-main",
                ".search-bar",
                "#bg-wrap",
                "#main"
            ]
        },
        {
            "url": [
                "stackexchange.com",
                "askubuntu.com",
                "mathoverflow.com",
                "serverfault.com",
                "stackapps.com",
                "stackoverflow.com",
                "superuser.com"
            ],
            "css": "#hlogo a {\n    text-indent: -256em !important;\n}"
        },
        {
            "url": [
                "statlect.com"
            ],
            "noinvert": [
                "span.displayed > img",
                "span.inm > img",
                "#lensDIV img",
                ".gs-image-box img.gs-image",
                "img[alt=\"Table of Contents\"]"
            ]
        },
        {
            "url": [
                "studio.restlet.com",
                "cloud.rest-let.com"
            ],
            "invert": [
                ".left-panel",
                ".header",
                ".editor-ace"
            ],
            "noinvert": [
                ".avatar"
            ]
        },
        {
            "url": [
                "subscene.com"
            ],
            "invert": [
                "#logo"
            ]
        },
        {
            "url": [
                "subscription.packtpub.com"
            ],
            "invert": [
                ".sidebar",
                ".navbar",
                ".cover-info-overlay"
            ]
        },
        {
            "url": [
                "symfony.com"
            ],
            "invert": [
                "#sln",
                ".header__top :not(img)",
                ".highlighttable"
            ],
            "noinvert": [
                "[class^=\"sln-visible-\"] > img:first-child"
            ]
        },
        {
            "url": [
                "terraform.io"
            ],
            "invert": [
                ".mega-nav-banner"
            ]
        },
        {
            "url": [
                "terrytao.wordpress.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "tianchi.aliyun.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "toggl.com"
            ],
            "invert": [
                ".left-nav"
            ]
        },
        {
            "url": [
                "tpondemand.com"
            ],
            "invert": [
                ".tau-cover-view__overlay",
                ".tau-app-secondary-pane",
                ".app-header",
                ".uv-popover-content"
            ],
            "noinvert": [
                ".tau-app-secondary-pane *",
                ".app-header *"
            ]
        },
        {
            "url": [
                "tproger.ru"
            ],
            "invert": [
                ".top-duft-punk",
                "#colophon"
            ],
            "noinvert": [
                ".text_logo img",
                ".tmenu_icon"
            ]
        },
        {
            "url": [
                "translate.yandex.ru"
            ],
            "css": ".application.state-new .container_main,\n.application.state-new .container_main[style],\n.application.state-new .header {\n    border-bottom-color: transparent;\n}"
        },
        {
            "url": [
                "travis-ci.org"
            ],
            "invert": [
                ".job-log"
            ]
        },
        {
            "url": [
                "tvtime.com"
            ],
            "noinvert": [
                ".page-sidebar *",
                ".page-left *"
            ]
        },
        {
            "url": [
                "tweakers.net"
            ],
            "invert": [
                "#menubar",
                "#bottom",
                "#tracker",
                "#imageOverlay",
                "#thumbContainer",
                ".button",
                ".hr"
            ],
            "noinvert": [
                "#thumbContainer *",
                "#bottom .button"
            ]
        },
        {
            "url": [
                "twitch.tv"
            ],
            "invert": [
                "#site_footer",
                "#carousel_background::after",
                "#left_col",
                ".player",
                ".badge",
                ".social-column",
                ".top-nav",
                ".anon-front__featured-section",
                ".side-nav",
                ".footer"
            ],
            "noinvert": [
                ".player *",
                ".social-column *",
                ".top-nav *",
                ".anon-front__featured-section *",
                ".side-nav *",
                ".footer *"
            ],
            "removebg": [
                "#carousel",
                ".chat-container",
                ".conversations-list-header",
                ".dark_wrapper ul",
                "html",
                ".nav",
                ".js-conversations-list",
                ".js-conversations-list-bottom-bar",
                ".rightcol-content > .top"
            ],
            "css": ".chat_text_input,\n.colon,\n.dark_wrapper *,\n.message,\n.room-title,\n.selected > a {\n    color:black !important;\n}\n.chat_text_input {\n    border: 1px solid black !important;\n}"
        },
        {
            "url": [
                "twitter.com"
            ],
            "invert": [
                ".tcu-textEllipse--multiline",
                ".GalleryTweet .tweet",
                ".Gallery-media",
                ".DashboardProfileCard-bg",
                ".SummaryCard-content"
            ],
            "noinvert": [
                ".Gallery-media *"
            ],
            "css": ".gallery-overlay,\n#permalink-overlay {\n    background: rgba(255, 255, 255, 0.7) !important;\n}"
        },
        {
            "url": [
                "ubi.com"
            ],
            "removebg": [
                "html",
                "body"
            ]
        },
        {
            "url": [
                "unicode.org"
            ],
            "invert": [
                ".chars"
            ]
        },
        {
            "url": [
                "unity3d.com"
            ],
            "invert": [
                ".main-navigation",
                ".sub-nav",
                ".wrapper",
                ".unity-logo",
                ".icon",
                ".main-footer"
            ]
        },
        {
            "url": [
                "unity3d.com/learn"
            ],
            "invert": [
                ".main-navigation",
                ".sub-nav",
                ".wrapper",
                ".unity-logo",
                ".bg-instructors",
                ".hero",
                ".bg-workflow"
            ]
        },
        {
            "url": [
                "unityhacks.com"
            ],
            "invert": [
                "#unityhacks_sidebar",
                "#exposeMask",
                "#logoBlock",
                "#navigation",
                "#moderatorBar",
                ".xenOverlay .sectionMain .heading overlayOnly",
                ".banner_owner",
                ".banner_staff",
                ".banner_supportleader",
                ".banner_supporter",
                ".banner_partner",
                ".banner_designer",
                ".banner_promoter",
                ".banner_honorable",
                ".banner_premium",
                ".messageHeading",
                ".subHeading",
                ".ToggleTrigger",
                ".prefix",
                ".PopupOpen",
                ".categoryStrip",
                ".secondaryContent h3",
                ".LTR",
                ".callToAction",
                ".xenOverlay .section .heading",
                ".xenTooltip",
                ".redactor_dropdown",
                ".errorOverlay",
                ".sectionHeaders",
                ".button",
                "[title=\"Unread messages\"]",
                "footer"
            ],
            "noinvert": [
                "#logo *",
                "#taigachat_toolbar *",
                ".listItemText h3",
                ".pollBlock .pollResult div",
                ".pollBlock .pollResult h3"
            ]
        },
        {
            "url": [
                "vergil.chemistry.gatech.edu/notes"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "virtua.speedtestcustom.com"
            ],
            "noinvert": [
                ".branding"
            ]
        },
        {
            "url": [
                "vk.com"
            ],
            "invert": [
                "#video_player",
                ".mv_playlist",
                ".page_header_cont",
                ".page_album_title",
                ".article_snippet__fade",
                ".article_snippet__info",
                ".article_snippet__read_btn",
                "#layer_bg",
                "#box_layer_bg",
                "#pv_more_acts_tt",
                ".login_app_devices",
                ".friends_import_icon",
                ".articleSnippet__inner",
                ".articleSnippet_button",
                "#z_photoview",
                ".vv_summary",
                ".thumb_map:after",
                ".input_back_wrap[style*=none] ~ #ts_input",
                "#ts_cont_wrap",
                "#ts_cont_wrap img",
                "#top_notify_wrap",
                "#top_notify_wrap .feedback_sticky_icon",
                "#audio_layer_tt",
                "#audio_layer_tt [style*=background-image]",
                ".audio_page_player_play .icon",
                ".page_video_play_icon",
                ".apps_featured_thumb_content",
                "[class^=apps_featured]:before",
                ".apps_frtt_photo",
                ".apps_frtt_level",
                ".settings_separated_row_iconed:before",
                ".owner_photo_bubble_wrap",
                "#top_profile_menu",
                ".tt_black",
                ".tt_w.tt_black",
                ".box_title",
                ".box_layer_wrap",
                "#box_loader",
                ".chat_tab_close",
                "#notifiers_wrap",
                ".notifier_image_wrap",
                ".doc_ext",
                ".doc_title",
                ".like_tt::after",
                ".audio_row__cover_back",
                ".poster__text"
            ],
            "noinvert": [
                "#video_player *",
                ".mv_playlist *",
                ".page_header_cont *",
                "#z_photoview img",
                ".box_grey .box_title"
            ],
            "removebg": [
                ".mv_layer_bg",
                ".pv_bottom_info",
                ".pv_img_area_wrap",
                ".vv_body",
                ".like_tt"
            ],
            "css": ".pv_bottom_info *,\n.like_tt {\n    color: #000 !important;\n}\n#pv_more_acts_tt * {\n    color: #eee !important;\n}\n#top_notify_wrap,\n#audio_layer_tt {\n    box-shadow: none;\n}\n.chat_onl_inner {\n    background-color: #dae1e8 !important;\n}\n.chat_tab_wrap:hover {\n    background-color: #ccd5de !important;\n}\n.photos_row {\n    background-color: #000 !important;\n    border-color: #000 !important;\n}"
        },
        {
            "url": [
                "vocabolario.sns.it"
            ],
            "invert": [
                "img[src]"
            ],
            "noinvert": [
                "body[background]"
            ]
        },
        {
            "url": [
                "vuejs.org"
            ],
            "invert": [
                ".content",
                "pre",
                "h3",
                "p"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "w3schools.com"
            ],
            "invert": [
                "#topnav"
            ]
        },
        {
            "url": [
                "wallet.trezor.io"
            ],
            "invert": [
                ".page-header",
                ".qr-code"
            ],
            "removebg": [
                ".qr-code"
            ]
        },
        {
            "url": [
                "web.telegram.org"
            ],
            "invert": [
                ".im_dialog_unread",
                ".icon-message-status",
                ".dropdown-toggle",
                ".icon-tg-title"
            ]
        },
        {
            "url": [
                "web.whatsapp.com"
            ],
            "invert": [
                ".qrcode .icon-logo"
            ],
            "css": ".qrcode {\n    border: 8px solid black;\n}"
        },
        {
            "url": [
                "wikipedia.org"
            ],
            "invert": [
                ".mwe-popups-discreet > svg",
                ".mw-ext-score",
                ".mw-mmv-overlay",
                "#Vorlage_Infobox_Chemikalie > tbody > tr:nth-child(2) > td > a"
            ],
            "noinvert": [
                ".mwe-math-fallback-image-inline",
                ".mwe-math-fallback-image-display",
                ".mwe-popups image",
                "img[src*=\"svg.png\"]",
                "img[alt^=\"Skeletal\" i]",
                "img[alt^=\"Structural\" i]"
            ]
        },
        {
            "url": [
                "wikiwand.com"
            ],
            "removebg": [
                "img"
            ]
        },
        {
            "url": [
                "wolfram.com"
            ],
            "noinvert": [
                ".numberedequation",
                ".displayformula",
                ".inlineformula"
            ]
        },
        {
            "url": [
                "wolframalpha.com"
            ],
            "noinvert": [
                "img"
            ]
        },
        {
            "url": [
                "xfree86.org"
            ],
            "noinvert": [
                "img[src*=\".png\"]"
            ]
        },
        {
            "url": [
                "yandex.*"
            ],
            "invert": [
                "body.b-page_theme_pure_night",
                "[class*=\"icon_moon_\"]",
                ".favicon",
                ".weather__icon",
                ".traffic__icon",
                ".dist-popup__image",
                ".footer_distro_yes",
                ".serp-footer",
                ".distro__icon",
                ".services-big__item_icon",
                ".services-all__icon",
                ".popup2:before",
                "html.i-ua_swipe_yes .informers7__icon",
                "html.i-ua_swipe_yes .zen__item-domain",
                "html.i-ua_swipe_yes .zen__item-title",
                "html.i-ua_swipe_yes .teaser__service-bg",
                "html.i-ua_swipe_yes .stream-intro",
                "html.i-ua_swipe_yes .edadeal",
                "html.i-ua_swipe_yes .afisha",
                "html.i-ua_swipe_yes .services__icon",
                "html.i-ua_swipe_yes .menu2__list"
            ],
            "noinvert": [
                "body.b-page_theme_pure_night *",
                "html.i-ua_swipe_yes .stream-intro__vod-preview",
                "html.i-ua_swipe_yes .edadeal__item-img",
                "html.i-ua_swipe_yes .afisha__film-image"
            ],
            "removebg": [
                "html.i-ua_swipe_yes .mini-suggest__popup-spacer",
                "html.i-ua_swipe_yes .menu2__container"
            ]
        },
        {
            "url": [
                "youtube-nocookie.com",
                "youtube.com/embed"
            ],
            "noinvert": [
                "video",
                "div[style*=\"https://i.ytimg.com\"]"
            ]
        },
        {
            "url": [
                "youtube.com"
            ],
            "invert": [
                "html[dark=true] #scrim",
                ".html5-video-player",
                ".has-custom-banner",
                "#theater-background",
                "#watch-appbar-playlist",
                "html:not([dark=true]) #header > #background",
                "html:not([dark=true]) #links-holder yt-formatted-string",
                "html:not([dark=true]) #subscribe-button",
                "ytd-thumbnail-overlay-time-status-renderer",
                "ytd-thumbnail-overlay-toggle-button-renderer",
                "paper-toast",
                "ytd-masthead[dark]",
                "html:not([dark=true]) ytd-masthead[dark] #avatar-btn"
            ],
            "noinvert": [
                "html[dark=true]",
                "html[dark=true] *",
                ".html5-video-player *",
                ".has-custom-banner *",
                "#watch-appbar-playlist *"
            ],
            "css": "#scrim.app-drawer {\n    background: rgba(255, 255, 255, 0.5);\n}\n#player-theater-container {\n    background: none !important;\n}"
        },
        {
            "url": [
                "yscec.yonsei.ac.kr"
            ],
            "invert": [
                "iframe",
                "#page-sidebar"
            ]
        }
    ];

    const store = {
        shortcuts: null,
    };
    function saveShortcuts(shortcuts) {
        store.shortcuts = shortcuts;
    }
    function listenToShortcuts(handler) {
        window.addEventListener('keydown', (e) => {
            if (!store.shortcuts) {
                return;
            }
            Object.entries(store.shortcuts)
                .filter(([, combo]) => {
                return (combo != null &&
                    combo.key === e.code &&
                    Boolean(e.altKey) === Boolean(combo.alt) &&
                    Boolean(e.ctrlKey) === Boolean(combo.ctrl) &&
                    Boolean(e.metaKey) === Boolean(combo.meta) &&
                    Boolean(e.shiftKey) === Boolean(combo.shift));
            })
                .forEach(([command]) => handler(command));
        }, true);
    }

    function getMacOSVersion() {
        const match = navigator.userAgent.match(/Mac OS X ([\d_]+)/);
        if (match && match[1]) {
            return match[1].split('_').map((s) => Number(s));
        }
        return null;
    }
    const supportsColorScheme = (() => {
        const v = getMacOSVersion();
        if (v == null) {
            return false;
        }
        return v[0] > 10 || (v[0] === 10 && v[1] >= 14);
    })();

    let iframeAddedToFixes = false;
    let renderCounter = 0;
    function apply(isEnabled, topURL, isIFrame, theme) {
        const renderId = ++renderCounter;
        if (!document.head) {
            if (isEnabled) {
                createFallbackStyle(theme);
            }
            const createHead = () => {
                const head = document.createElement('head');
                document.documentElement.insertBefore(head, document.documentElement.firstElementChild);
            };
            const onReadyStateChanged = () => {
                if (renderId !== renderCounter) {
                    return;
                }
                if (document.readyState === 'complete') {
                    document.removeEventListener('readystatechange', onReadyStateChanged);
                    if (!document.head) {
                        createHead();
                    }
                }
            };
            const headObserver = new MutationObserver(() => {
                if (renderId !== renderCounter) {
                    return;
                }
                if (document.head) {
                    headObserver.disconnect();
                    document.removeEventListener('readystatechange', onReadyStateChanged);
                    apply(isEnabled, topURL, isIFrame, theme);
                    removeFallbackStyle();
                }
            });
            headObserver.observe(document, { childList: true, subtree: true });
            if (document.readyState === 'complete') {
                createHead();
            }
            else {
                document.addEventListener('readystatechange', onReadyStateChanged);
            }
            return;
        }
        if (isEnabled) {
            if (theme.engine === 'cssFilter') {
                removeDynamicTheme();
                if (!isIFrame) {
                    if (!iframeAddedToFixes) {
                        inversionFixes.forEach((fix) => {
                            if (!fix.invert) {
                                fix.invert = [];
                            }
                            fix.invert.unshift('iframe');
                        });
                        iframeAddedToFixes = true;
                    }
                    const cssText = createCSSFilterStyleSheet(theme, location.href, isIFrame ? location.href : null, inversionFixes).replace(/\n\/\* Page background \*\/\s*html \{[\s\S]+?\}/m, ''); // <html> background is inverted in Safari
                    createOrUpdateStyle$1(cssText);
                }
            }
            else if (theme.engine === ThemeEngines.dynamicTheme) {
                removeStyle();
                let fixes = getDynamicThemeFixesFor(topURL, isIFrame ? null : location.href, dynamicFixes, true) || {};
                createOrUpdateDynamicTheme(theme, fixes, isIFrame);
            }
        }
        else {
            if (theme.engine === 'cssFilter') {
                removeStyle();
            }
            else if (theme.engine === 'dynamicTheme') {
                removeDynamicTheme();
            }
        }
    }
    const fallbackClassName = 'darkreader--safari-fallback';
    function createFallbackStyle(theme) {
        const target = document.documentElement;
        let style = target.querySelector(`.${fallbackClassName}`);
        if (!style) {
            style = document.createElement('style');
            style.classList.add('darkreader');
            style.classList.add(fallbackClassName);
            style.media = 'screen';
        }
        style.textContent = getModifiedFallbackStyle(theme, { strict: false });
        target.appendChild(style);
        return style;
    }
    function removeFallbackStyle() {
        const fallback = document.querySelector(`.${fallbackClassName}`);
        if (fallback && fallback.parentElement) {
            fallback.parentElement.removeChild(fallback);
        }
    }
    const systemDarkModeMatch = matchMedia('(prefers-color-scheme: dark)');
    let systemDarkModeChangeHandler = null;
    function onSystemDarkModeChange() {
        if (systemDarkModeChangeHandler != null) {
            systemDarkModeChangeHandler();
        }
    }
    systemDarkModeMatch.addListener(onSystemDarkModeChange);
    function isSystemDarkModeOn(settings) {
        if (supportsColorScheme) {
            return systemDarkModeMatch.matches;
        }
        return settings ? settings.system.darkMode : false;
    }
    const defaultTheme = {
        ...DEFAULT_THEME,
        mode: 1,
        brightness: 100,
        contrast: 100,
        sepia: 0,
        grayscale: 0,
        useFont: false,
        fontFamily: '',
        textStroke: 0,
        engine: ThemeEngines.dynamicTheme,
    };
    const darkSites = [
        'darkreader.org',
    ];
    let state = {
        isEnabled: false,
        theme: null,
    };
    function onMessage({ name, message }) {
        if (name !== 'to-content-script') {
            return;
        }
        if (message.type === 'update' ||
            (message.type === 'get-settings-response' && message.id === scriptId)) {
            let topURL;
            try {
                topURL = window.top.location.href;
            }
            catch (err) {
                return;
            }
            const settings = message.data;
            const host = location.host;
            const custom = (settings.customThemes || []).find(({ url }) => url.includes(host));
            const theme = { ...defaultTheme, ...settings.theme, ...(custom ? custom.theme : {}) };
            const isIFrame = window.top !== window;
            const isPDF = topURL.endsWith('.pdf');
            const getIsEnabledValue = () => (((!settings.automation && settings.enabled) ||
                (settings.automation === 'system' && isSystemDarkModeOn(settings))) && ((!settings.enabledByDefault && isURLInList(topURL, settings.siteListEnabled)) ||
                (settings.enabledByDefault && !isURLInList(topURL, settings.siteList) && !isURLInList(topURL, darkSites))) && (!isPDF || (isPDF && settings.enabledForPDFs)));
            const isEnabled = getIsEnabledValue();
            try {
                localStorage.setItem(storeKey, JSON.stringify({
                    theme,
                    version: storeVersion,
                }));
            }
            catch (err) {
                // Most likely local storage is disabled
            }
            if (!isIFrame) {
                saveShortcuts(settings.shortcuts);
            }
            const shouldUpdate = ((state.isEnabled !== isEnabled) ||
                (isEnabled && (state.theme.brightness !== theme.brightness ||
                    state.theme.contrast !== theme.contrast ||
                    state.theme.sepia !== theme.sepia ||
                    state.theme.grayscale !== theme.grayscale ||
                    state.theme.mode !== theme.mode ||
                    state.theme.engine !== theme.engine)));
            state = {
                isEnabled,
                theme,
            };
            if (!shouldUpdate) {
                return;
            }
            apply(isEnabled, topURL, isIFrame, theme);
            if (settings.automation === 'system') {
                systemDarkModeChangeHandler = () => apply(getIsEnabledValue(), topURL, isIFrame, theme);
            }
            else {
                systemDarkModeChangeHandler = null;
            }
        }
    }
    safari.self.addEventListener('message', onMessage);
    const scriptId = Math.round(Math.random() * Math.pow(2, 64)).toString(16);
    document.dispatchEvent(new CustomEvent('darkreader-script-inject', { detail: { scriptId } }));
    const cleanup = () => {
        cleanDynamicThemeCache();
        safari.self.removeEventListener('message', onMessage);
        document.removeEventListener('darkreader-script-inject', onScriptInjection);
        document.removeEventListener('visibilitychange', onVisibilityChanged);
        window.removeEventListener('popstate', onHistoryChanged);
        systemDarkModeMatch.removeListener(onSystemDarkModeChange);
    };
    const onScriptInjection = (e) => {
        if (e.detail.scriptId !== scriptId) {
            cleanup();
        }
    };
    document.addEventListener('darkreader-script-inject', onScriptInjection);
    function requestSettings() {
        safari.extension.dispatchMessage('from-content-script', {
            type: 'get-settings',
            id: scriptId
        });
    }
    function onVisibilityChanged() {
        if (!document.hidden) {
            requestSettings();
        }
    }
    function onHistoryChanged() {
        requestSettings();
    }
    document.addEventListener('visibilitychange', onVisibilityChanged);
    window.addEventListener('popstate', onHistoryChanged);
    requestSettings();
    // Using local storage to prevent white flash due to slow Safari app messaging (up to 200ms)
    const storeVersion = 1;
    const storeKey = '__darkreader__safari-state__';
    (() => {
        let topURL;
        try {
            topURL = window.top.location.href;
        }
        catch (err) {
            return;
        }
        const isIFrame = window.top !== window;
        let jsonStore;
        try {
            jsonStore = localStorage.getItem(storeKey);
        }
        catch (err) {
            return;
        }
        let store;
        if (jsonStore) {
            const parsed = JSON.parse(jsonStore);
            if (parsed && parsed.version === storeVersion) {
                store = parsed;
            }
        }
        if (store) {
            store.theme = {
                ...DEFAULT_THEME,
                ...store.theme,
            };
        }
        else {
            store = {
                theme: defaultTheme,
                version: storeVersion,
            };
        }
        const isEnabled = !isURLInList(topURL, darkSites) && isSystemDarkModeOn(null);
        state = {
            isEnabled,
            theme: store.theme,
        };
        apply(isEnabled, topURL, isIFrame, store.theme);
    })();
    if (window.top === window) {
        listenToShortcuts((command) => {
            safari.extension.dispatchMessage('from-content-script', {
                type: 'command-entered',
                command,
            });
        });
    }

}());

